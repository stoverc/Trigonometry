Notebook[{

Cell[CellGroupData[{
Cell["TheRealCStover/Trigonometry", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->1698328061,ExpressionUUID->"29b43496-394a-4db9-9379-4c6417f36354"],

Cell["\<\
A collection of lesser-known circular and hyperbolic trig functions and their \
inverses\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.865820845773569*^9, 3.8658208482866173`*^9}},
 CellTags->{"Description", "TemplateCell"},
 CellID->1594568950,ExpressionUUID->"7bd3bffa-7a6c-4596-be77-75afe2c251ce"],

Cell[CellGroupData[{

Cell["Paclet", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Paclet"},
 CellTags->{"Paclet", "TemplateSection"},
 CellID->864524491,ExpressionUUID->"4819d406-d7b2-4b48-a572-e8911b7c3dcc"],

Cell[CellGroupData[{

Cell["Paclet Directory", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletDirectory"},
 DefaultNewCellStyle->{
  "LocalDirectoryInput", 
   TaggingRules -> {"FileInputProperty" -> "PacletDirectory"}},
 CellTags->{"Paclet Directory", "PacletDirectory", "TemplateCellGroup"},
 CellID->95800296,ExpressionUUID->"10dd69c4-c450-49bd-b520-c9b822d63b21"],

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "LocalDirectoryInput",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{3.865015552743977*^9, 3.865017720077704*^9},
 CellID->1471911737,ExpressionUUID->"2bf706e8-33e4-4432-9256-297c9635c72a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manifest", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletFiles"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\"Refresh\"", ButtonFunction :> 
       DefinitionNotebookClient`RedirectOutputsToConsole[
         Block[{$ContextPath}, Quiet[
            Needs["PacletResource`DefinitionNotebook`"], 
            MessageName[General, "shdw"]]; 
          PacletResource`DefinitionNotebook`RefreshNotebookPacletFiles[]]], 
       Appearance :> 
       FEPrivate`FrontEndResource[
        "FEExpressions", "GrayButtonNinePatchAppearance"], 
       FrameMargins -> {{5, 5}, {0, 0}}, 
       BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, Method -> 
       "Queued"]]]}, {None, None}},
 CellTags->{"Manifest", "PacletFiles", "TemplateCellGroup"},
 CellID->324117918,ExpressionUUID->"18ad9d18-6666-4507-9218-17f1e255c471"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"12d0f8c1-fa11-4157-9de1-18b271ce771b"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1556433966,ExpressionUUID->"702a57c1-e330-400b-85a8-f6515f2d55d1"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"885cd6c8-c97f-4804-96c2-dac94d0710d2"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1099216715,ExpressionUUID->"c3139467-05a4-41a6-b132-f9cfff24d9fd"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Guides"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"5ee4b158-8ede-4f17-8cc8-5713fe88c023"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1880997511,ExpressionUUID->"0590d129-3983-4bdb-84b1-ebaf9a24109b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Trigonometry.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/Guides/Trigonometry.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Guides/Trigonometry.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->214192195,ExpressionUUID->"cca4e596-18ff-417e-a3cc-d95594967530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/ReferencePages"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"1e07221c-cb81-46db-a58f-fd208c204e85"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->745628993,ExpressionUUID->"bb73cc5e-83f9-4f67-8da9-3c09342265f2"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/ReferencePages/Symbols"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"4f404f04-21a4-4668-bee8-5afc10725a71"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1826784149,ExpressionUUID->"a1f0e0ea-b764-45d4-9b01-261652354650"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Chord.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Chord.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Chord.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->304132369,ExpressionUUID->"c0aeffc2-3294-4454-b2ab-c55c6195bef2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cohavercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Cohavercosine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Cohavercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->102913367,ExpressionUUID->"ce2060c3-439b-4c33-b652-d50ac00eab6f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cohaversine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Cohaversine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Cohaversine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->259848228,ExpressionUUID->"527f0e04-7031-4b13-bd83-ee23af523aec"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Covercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Covercosine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Covercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1434913645,ExpressionUUID->"9a25210f-9d0a-4904-af26-5b6648c68440"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Coversine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Coversine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Coversine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->352275705,ExpressionUUID->"e837abab-c9ce-4e0a-aa40-9718d2f8e90f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Excosecant.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Excosecant.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Excosecant.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->85359156,ExpressionUUID->"ba2b2ddd-e2f2-407c-ae66-5bbd828f8fff"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Exsecant.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Exsecant.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Exsecant.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->112258696,ExpressionUUID->"af9a6195-6fa9-4500-a2b7-5bf7d317c6b7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Hacovercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Hacovercosine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Hacovercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1241261606,ExpressionUUID->"18ded7b5-c559-4b1a-a9a8-05a2751dd9a8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Hacoversine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Hacoversine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Hacoversine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1227665084,ExpressionUUID->"f00b6e34-4fc4-4bdb-81ed-e4fb54e3f4f5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Havercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Havercosine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Havercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->344186412,ExpressionUUID->"16357ee6-753e-43df-af71-dd7910ccb628"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseChord.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseChord.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseChord.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->72709759,ExpressionUUID->"9ea0e61a-d654-4517-ac66-0091d565fe12"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseCohavercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseCohavercosine.\
nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseCohavercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1278813168,ExpressionUUID->"a9fe182a-1f7e-42dd-9ca5-0764daec6a3b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseCohaversine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseCohaversine.nb"}]\
]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseCohaversine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1280818926,ExpressionUUID->"41cea2af-bd30-40e6-b26f-fac6ec5aa80d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseCovercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseCovercosine.nb"}]\
]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseCovercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1045047565,ExpressionUUID->"db141029-e677-4d8b-853b-827d13e0afb0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseCoversine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseCoversine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseCoversine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->473412348,ExpressionUUID->"f9468f72-02ef-4601-90ee-ac03d0defead"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseExcosecant.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseExcosecant.nb"}]]\
},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseExcosecant.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->114724370,ExpressionUUID->"f7573a48-862e-4bd0-847f-84e56fff104a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseExsecant.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseExsecant.nb"}]]},
    
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseExsecant.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1879655231,ExpressionUUID->"4d9b8215-0ed3-460e-bf90-5cf8a4b045b7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseHacovercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseHacovercosine.\
nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseHacovercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->996575400,ExpressionUUID->"7419c99f-4c44-4ee6-afa9-fe311b47b13a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseHacoversine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseHacoversine.nb"}]\
]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseHacoversine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->347611754,ExpressionUUID->"eed77836-fd96-4c61-a88f-b5a3a5e6240c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseHavercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseHavercosine.nb"}]\
]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseHavercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1948541549,ExpressionUUID->"b6351ca5-2b73-4ff9-80ef-b080ae39f633"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseVercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseVercosine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseVercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->214420701,ExpressionUUID->"e9d18dc9-e152-4c98-9c2a-6f03c530cbfe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InverseVersine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/InverseVersine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/InverseVersine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->335194772,ExpressionUUID->"6c2fa666-159c-4119-9bfe-1795933921fb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Vercosine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Vercosine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Vercosine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->187491084,ExpressionUUID->"b8aa8db4-4abc-463a-967e-2ee9ce56901f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Versine.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Versine.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Versine.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->804138639,ExpressionUUID->"bee6fec3-6668-47b2-8534-5829e0bf1a3a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Tutorials"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"f8bdcc2b-cf43-4e93-adb4-a448a43a7e43"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1219405106,ExpressionUUID->"3c148117-07c3-426b-bf05-78e257462073"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Trig Functions and Naming Conventions.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/Tutorials/Trig Functions and Naming \
Conventions.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/Tutorials/Trig Functions and Naming \
Conventions.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1901039574,ExpressionUUID->"fac94a5b-5dd9-4e35-8392-dbb1715b619f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"img\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"f260e121-6b5a-4c10-a74d-1055bcefe249"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1445762151,ExpressionUUID->"29fb3248-f201-4dfb-b8ea-4958ec9d9f16"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Diagram1.pdf\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/Diagram1.pdf"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/Diagram1.pdf"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->147006052,ExpressionUUID->"c7bfd04b-7b6c-4598-bd35-de589785c9e5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Diagram1.png\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/Diagram1.png"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/Diagram1.png"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPNGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1043515102,ExpressionUUID->"dfbaaf6e-04c7-48d6-9550-9c7dc57196b5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Diagram1Trans.png\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/Diagram1Trans.png"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/Diagram1Trans.png"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPNGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2006857912,ExpressionUUID->"6b89681d-72cc-426f-8d0e-5e0ebc69f19e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Diagram1Trans_Tall2.png\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/Diagram1Trans_Tall2.png"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/Diagram1Trans_Tall2.png"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPNGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1132212394,ExpressionUUID->"dbd220e5-2f98-4446-bbef-c273252dfb1c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Diagram1Trans_Tall.png\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/Diagram1Trans_Tall.png"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/Diagram1Trans_Tall.png"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPNGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->241109891,ExpressionUUID->"0d099e89-6729-4af7-950a-edbf8f8e86a9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Diagram.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/Diagram.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/Diagram.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1954419492,ExpressionUUID->"5564cb8a-7975-49f6-80d3-8d6849d48651"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"VerCofHaf.pdf\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "img/VerCofHaf.pdf"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "img/VerCofHaf.pdf"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->32296148,ExpressionUUID->"48c88b22-ffe7-4f9f-a15d-e662f81d87bb"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"60eee912-0845-40a2-91fb-472a89f72674"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->487362455,ExpressionUUID->"3afc4049-db64-4ea6-9157-191fce608865"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Trigonometry.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/Trigonometry.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/Trigonometry.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->598151527,ExpressionUUID->"246d6980-96a2-4d76-be70-035490f4dc5c"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "LICENSE"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "LICENSE"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->761762682,ExpressionUUID->"63c646f7-fa32-4289-b671-94766dd1d89f"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"misc\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "misc"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"bd68b327-7333-43c4-8f7c-f328fa306df8"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1635480392,ExpressionUUID->"f3a70191-9dc7-4662-984b-75d02cfc4d58"],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"In Progress\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "misc/In Progress"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"60cf099a-6c59-4809-97c7-c5d55c9139df"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->416843528,ExpressionUUID->"7ef0b9f1-e5c2-4d52-b7a7-dac06b250cb1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TrigNotes\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "misc/TrigNotes"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "misc/TrigNotes"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->797518582,ExpressionUUID->"01fe3ab5-efbd-4520-b6de-b0d5591f339c"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "PacletInfo.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "PacletInfo.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1795376607,ExpressionUUID->"1faede9f-ccd9-4c24-b713-1b946c0e7e74"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"README.md\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "README.md"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "README.md"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->882767202,ExpressionUUID->"e5d12dfc-f91e-41cd-a3f7-10c7f8a021c2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "ResourceDefinition.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "ResourceDefinition.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1161034047,ExpressionUUID->"364db568-ed57-4157-b778-14d55eeed46e"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->601909852,ExpressionUUID->"3779bba5-207d-4299-a18d-023aeb72b42a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bc548922-dad1-407c-9918-0d0d462ca509"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"a1a57b96-a85d-489a-8b25-55d179677740"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give an image that you want to display on the main landing page for \
your paclet. This will be displayed along side the basic description that's \
given below.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "414d7c81-8e39-4ae6-8758-c75e7047bccf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->670275254,ExpressionUUID->"a99be92b-45b6-4ba5-8b64-d70adda2c5d1"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
5X8Bafed9A==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0.75], Thickness[0.005], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
         210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
         237, 238, 239, 240, 241, 242, 243, 244}]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "9"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       9, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    CapForm["Square"], Dashing -> None, 
    Thickness[0.005], 
    GrayLevel[0.75], 
    LineBox[
     NCache[{{0, 0}, {
        Rational[17, 8], 
        Rational[17, 8]}}, {{0, 0}, {2.125, 2.125}}]], 
    Dashing[{Small, Small}], 
    Thickness[0.0025], 
    GrayLevel[0.75], 
    LineBox[
     NCache[{{
        Rational[17, 8], 
        Rational[17, 8]}, {
        Rational[21, 8], 
        Rational[21, 8]}}, {{2.125, 2.125}, {2.625, 2.625}}]], Dashing -> 
    None, 
    Thickness[0.0025], 
    FaceForm[
     RGBColor[1, 1, 1, 0]], 
    EdgeForm[
     GrayLevel[0.75]], 
    RectangleBox[
     NCache[{
       Rational[-519, 2080], 0}, {-0.24951923076923077`, 0}], 
     NCache[{
       Rational[-3, 160], 
       Rational[3, 13]}, {-0.01875, 0.23076923076923078`}]], 
    RectangleBox[
     NCache[{
       Rational[3901, 2080], 0}, {1.8754807692307693`, 0}], 
     NCache[{
       Rational[337, 160], 
       Rational[3, 13]}, {2.10625, 0.23076923076923078`}]], 
    RectangleBox[
     NCache[{
       Rational[3, 160], 
       Rational[3901, 2080]}, {0.01875, 1.8754807692307693`}], 
     NCache[{
       Rational[519, 2080], 
       Rational[337, 160]}, {0.24951923076923077`, 2.10625}]], Dashing -> 
    None, 
    Thickness[0.0025], 
    GrayLevel[0.75], 
    CircleBox[{0, 0}, 
     NCache[
      Rational[1, 2], 0.5], 
     NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]], 
    Dashing[{Small, Small}], 
    Thickness[0.0025], 
    RGBColor[1, 0.65, 0.65], 
    LineBox[
     NCache[{{0, 
        Rational[17, 4]}, {
        Rational[-1, 2], 
        Rational[17, 4]}}, {{0, 4.25}, {-0.5, 4.25}}]], 
    LineBox[
     NCache[{{0, 0}, {
        Rational[-1, 2], 0}}, {{0, 0}, {-0.5, 0}}]], Dashing -> None, 
    Thickness[0.005], 
    RGBColor[1, 0.65, 0.65], 
    Arrowheads[{-0.05, 0.05}], 
    ArrowBox[
     LineBox[
      NCache[{{
         Rational[-1, 2], 0}, {
         Rational[-1, 2], 
         Rational[17, 4]}}, {{-0.5, 0}, {-0.5, 4.25}}]]], 
    Dashing[{Small, Small}], 
    Thickness[0.0025], 
    RGBColor[0., 0.5490196078431373, 0.5490196078431373], 
    LineBox[
     NCache[{{
        Rational[17, 4], 0}, {
        Rational[17, 4], 
        Rational[-1, 2]}}, {{4.25, 0}, {4.25, -0.5}}]], 
    LineBox[
     NCache[{{0, 0}, {0, 
        Rational[-1, 2]}}, {{0, 0}, {0, -0.5}}]], Dashing -> None, 
    Thickness[0.005], 
    RGBColor[0., 0.5490196078431373, 0.5490196078431373], 
    Arrowheads[{-0.05, 0.05}], 
    ArrowBox[
     LineBox[
      NCache[{{0, 
         Rational[-1, 2]}, {
         Rational[17, 4], 
         Rational[-1, 2]}}, {{0, -0.5}, {4.25, -0.5}}]]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[0, 0.85, 0.85], 
    LineBox[
     NCache[{{0, 
        Rational[17, 8]}, {0, 3}}, {{0, 2.125}, {0, 3}}]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[0, 
     NCache[
      Rational[4, 9], 0.4444444444444444], 0], 
    LineBox[
     NCache[{{0, 3}, {0, 
        Rational[17, 4]}}, {{0, 3}, {0, 4.25}}]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], 
    LineBox[
     NCache[{{
        Rational[17, 8], 0}, {3, 0}}, {{2.125, 0}, {3, 0}}]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[1., 0.4117647058823529, 0.7098039215686275], 
    LineBox[
     NCache[{{3, 0}, {
        Rational[17, 4], 0}}, {{3, 0}, {4.25, 0}}]], 
    Thickness[0.0025], 
    Dashing[{Small, Small}], 
    RGBColor[1, 0, 0], 
    LineBox[
     NCache[{{
        Rational[17, 8], 
        Rational[17, 8]}, {
        Rational[17, 8], 0}}, {{2.125, 2.125}, {2.125, 0}}]], 
    Thickness[0.0025], 
    Dashing[{Small, Small}], 
    RGBColor[0, 0, 1], 
    LineBox[
     NCache[{{0, 
        Rational[17, 8]}, {
        Rational[17, 8], 
        Rational[17, 8]}}, {{0, 2.125}, {2.125, 2.125}}]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[1, 0, 0], 
    LineBox[
     NCache[{{0, 
        Rational[17, 8]}, {0, 0}}, {{0, 2.125}, {0, 0}}]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[0, 0, 1], 
    LineBox[
     NCache[{{0, 0}, {
        Rational[17, 8], 0}}, {{0, 0}, {2.125, 0}}]], 
    CapForm["Round"], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
    LineBox[
     NCache[{{
        Rational[17, 4], 0}, {
        Rational[17, 8], 
        Rational[17, 8]}}, {{4.25, 0}, {2.125, 2.125}}]], 
    CapForm["Round"], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[0.6666666666666666, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 0.6666666666666666], 
    LineBox[
     NCache[{{3, 0}, {
        Rational[17, 8], 
        Rational[17, 8]}}, {{3, 0}, {2.125, 2.125}}]], 
    Thickness[0.0075], Dashing -> None, 
    RGBColor[1, 0.5, 0], 
    LineBox[
     NCache[{{
        Rational[17, 8], 
        Rational[17, 8]}, {0, 
        Rational[17, 4]}}, {{2.125, 2.125}, {0, 4.25}}]], 
    CapForm["Round"], 
    GrayLevel[0], 
    PointSize[0.015], 
    PointBox[
     NCache[{{
        Rational[17, 8], 
        Rational[17, 8]}}, {{2.125, 2.125}}]], 
    GrayLevel[0.75], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"\[Theta]\"", FontSize -> 28, FontFamily -> "Times", FontSlant -> 
       Plain, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[5, 8], 
       Rational[1, 4]}, {0.625, 0.25}]], 
    RGBColor[0, 0, 1], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"cosine\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[17, 16], 
       Rational[-11, 80]}, {1.0625, -0.1375}]], 
    RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"versine\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[41, 16], 
       Rational[-11, 80]}, {2.5625, -0.1375}]], 
    RGBColor[1., 0.4117647058823529, 0.7098039215686275], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"exsecant\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[29, 8], 
       Rational[-11, 80]}, {3.625, -0.1375}]], 
    RGBColor[0., 0.5490196078431373, 0.5490196078431373], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"secant\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[17, 8], 
       Rational[-51, 80]}, {2.125, -0.6375}]], 
    RGBColor[1, 0, 0], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"sine\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> Italic, 
       StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[-11, 80], 
       Rational[17, 16]}, {-0.1375, 1.0625}], Automatic, Automatic, {0, -1}], 
    
    RGBColor[0, 0.85, 0.85], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"\[VeryThinSpace]coversine\[VeryThinSpace]\"", FontSize -> 18, 
       FontFamily -> "Times", FontSlant -> Italic, StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[-11, 80], 
       Rational[41, 16]}, {-0.1375, 2.5625}], Automatic, Automatic, {0, -1}], 
    
    RGBColor[0, 
     NCache[
      Rational[4, 9], 0.4444444444444444], 0], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"excosecant\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[-11, 80], 
       Rational[29, 8]}, {-0.1375, 3.625}], Automatic, Automatic, {0, -1}], 
    Null, 
    RGBColor[1, 0.65, 0.65], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"cosecant\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[-51, 80], 
       Rational[17, 8]}, {-0.6375, 2.125}], Automatic, Automatic, {0, -1}], 
    RGBColor[1, 0.5, 0], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"cotangent\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[373, 320], 
       Rational[1053, 320]}, {1.165625, 3.290625}], Automatic, Automatic, {
     1, -1}], 
    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"tangent\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> 
       Italic, StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[1053, 320], 
       Rational[373, 320]}, {3.290625, 1.165625}], Automatic, Automatic, {
     1, -1}], 
    RGBColor[0.6666666666666666, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 0.6666666666666666], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"chord\"", FontSize -> 18, FontFamily -> "Times", FontSlant -> Italic,
        StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[853, 320], 
       Rational[353, 320]}, {2.665625, 1.103125}], Automatic, Automatic, {
     1, -2.5}], Null},
  Frame->None,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{750, 750},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-4.75, 4.75}, {-4.75, 4.75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{None, None}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.8647859616195583`*^9, 3.867799405536648*^9, 
  3.867799647268845*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"bca101a4-0873-4d85-9e5d-d3df355bfe2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1ef2202a-47bd-4bc8-8a30-31632365c8e2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"317724ec-c8bb-419d-b003-77b6fee4702c"],

Cell[TextData[{
 "In a standard trigonometry course, we typically learn about six functions \
(and their inverses): ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"a2c82799-9a34-43f1-8e5f-b232e6711406"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"2d4d8f70-1c94-4ae1-8667-d279c91a5ec3"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tan", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"ed76dced-04ff-4c64-9f4a-8f86999c56c3"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"csc", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"1aefae29-1486-4f76-83ef-59d01d13b713"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sec", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"1085727a-869c-42a6-bf82-93ac368d6ecd"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tan", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"25d1ed6b-0770-4116-af14-a8be600c35f8"],
 "; this may or may not be extended later to cover the six hyperbolic trig \
functions (e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sinh", "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"ab52f77e-9de3-4b9c-a816-0f064f8439ee"],
 ") and/or their inverses (e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["sin", 
     RowBox[{"-", "1"}]], "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"0e9cb367-6149-4300-8192-f741378ce811"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["sinh", 
     RowBox[{"-", "1"}]], "(", 
    StyleBox["x", "TI"], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"8856a4e9-6736-41ce-9af1-26f4b21ffe87"],
 ")."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.864786195435443*^9, 3.864786294501645*^9}, {
   3.8647863794835997`*^9, 3.864786420946191*^9}, {3.864786469621591*^9, 
   3.8647867930172043`*^9}, {3.865024099559372*^9, 3.865024170417673*^9}, 
   3.865024213566997*^9, 3.8650258155165243`*^9, {3.865025946261189*^9, 
   3.865026187265766*^9}, {3.865027346530485*^9, 3.8650273532835007`*^9}, {
   3.868744716684227*^9, 3.868744779779848*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"8ed07a0b-b621-4ba0-addd-8f0206ed5efb"],

Cell[TextData[{
 "A less-known fact is that trigonometry actually consists of over two dozen ",
 StyleBox["other",
  FontSlant->"Italic"],
 " circular and hyperbolic functions, each of which has a well-defined \
inverse. These mysterious trig functions are closely related to the more \
well-known relatives that we all know and love today, and though they're \
rarely used, these functions were ubiquitous a few centuries back, being \
employed both in academia and in various applications (e.g. mapmaking, ocean \
exploration, etc.)."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.864786195435443*^9, 3.864786294501645*^9}, {
   3.8647863794835997`*^9, 3.864786420946191*^9}, {3.864786469621591*^9, 
   3.8647867930172043`*^9}, {3.865024099559372*^9, 3.865024170417673*^9}, {
   3.865024231291724*^9, 3.865024231571246*^9}, {3.8650245810852757`*^9, 
   3.8650248088167152`*^9}, {3.865024916541152*^9, 3.865024922901744*^9}, {
   3.865025007997546*^9, 3.865025220340941*^9}, 3.865025811856846*^9, {
   3.8650318087626877`*^9, 3.865031815015875*^9}, {3.8650318501191473`*^9, 
   3.865032187696191*^9}, 3.865821585752111*^9, 3.868744788492017*^9},
 CellTags->"DefaultContent",
 CellID->461077083,ExpressionUUID->"9d95f1ee-ea88-4dd6-8639-da09cfc90bb2"],

Cell[TextData[{
 "Mathematica has a couple of these little-used trig functions built in \
(namely ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Haversine", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Haversine",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f9929991-f451-41ac-9aa5-d83da9125fd8"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["InverseHaversine", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/InverseHaversine",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "aa24e6f4-f00e-4fb2-89bf-684e1b084413"],
 "), but the rest remain unrepresented; this absence is the underlying \
motivation for ",
 Cell[BoxData[
  FormBox["Trigonometry", TraditionalForm]],ExpressionUUID->
  "4410aff2-f9f2-4637-a76a-8165afd7fd5c"],
 ". All of the 50+ functions in ",
 Cell[BoxData[
  FormBox["Trigonometry", TraditionalForm]],ExpressionUUID->
  "5bfe97a6-4e7f-4713-9981-692c21067714"],
 " work naturally with the entire Wolfram Language framework, and their \
immediate availability allows a better understanding of the relationships and \
history of both trigonometry and mathematics as a whole. These functions \
provide both a learning opportunity and a teaching tool, thus contributing to \
the enrichment of mathematics as a whole."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.864786195435443*^9, 3.864786294501645*^9}, {
   3.8647863794835997`*^9, 3.864786420946191*^9}, {3.864786469621591*^9, 
   3.8647867930172043`*^9}, {3.865024099559372*^9, 3.865024170417673*^9}, {
   3.865024231291724*^9, 3.865024231571246*^9}, {3.8650245810852757`*^9, 
   3.86502499538558*^9}, {3.865025239328973*^9, 3.865025352936124*^9}, {
   3.8650253903435802`*^9, 3.865025401592599*^9}, {3.86502550383598*^9, 
   3.86502550383785*^9}, 3.865025550780411*^9, {3.8650258023381147`*^9, 
   3.865025809730323*^9}},
 CellTags->"DefaultContent",
 CellID->1550166630,ExpressionUUID->"8beac4bd-bc23-480c-bdd5-99af0d6cb765"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ad865560-dbdd-4916-b5d6-e78060432497"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"727b52cd-43ec-46ad-b5cb-222825729293"],

Cell[TextData[{
 Cell[BoxData["Trigonometry"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8770806f-d55f-4660-968b-73958a50b356"],
 " consists of a number of \"circular\" trigonometric functions, as well as \
their hyperbolic analogues and the inverses of all of them."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.864786810300563*^9, 3.864786875405854*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"f2a6932b-3641-480e-8ae9-078e4c764610"],

Cell[TextData[{
 "Because of how they're defined, the functions in ",
 Cell[BoxData[
  FormBox["Trigonometry", TraditionalForm]],ExpressionUUID->
  "1d4cc80f-e41c-46a0-b7c7-e569bf0a0cee"],
 " fit perfectly into all the common Wolfram Language functionality including \
",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["D", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/D",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7be75a0b-5d1c-4291-a64d-2c7f2eb06c0b"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Integrate", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Integrate",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ef4f691e-b612-4104-b96a-ca72c18310ae"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Series", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Series",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "89606026-256e-49ba-95ce-7ddc2a3bc233"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Plot", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Plot",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f4581699-b42c-4045-9345-6d32db52fb9b"],
 ", etc."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.864786810300563*^9, 3.864786922381415*^9}, {
   3.864787819142127*^9, 3.864787825966399*^9}, 3.8650256164531507`*^9, 
   3.865025648172491*^9, {3.865025848242813*^9, 3.8650258709553328`*^9}},
 CellTags->"DefaultContent",
 CellID->1417125553,ExpressionUUID->"1f9bd08c-631c-479a-84c5-0f68f6de02bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3420277f-3e0c-48af-8951-9ec3e147ea6f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 DefaultNewCellStyle->{
  "LocalFileInput", TaggingRules -> {"FileInputProperty" -> "MainGuidePage"}},
 
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->254653237,ExpressionUUID->"ba2f1d3e-8f17-43a4-85e0-cdb869c86637"],

Cell[BoxData["\"\<Documentation/English/Guides/Trigonometry.nb\>\""], \
"LocalFileInput",
 TaggingRules->{"FileInputProperty" -> "MainGuidePage"},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellLabel->"In[2]:=",
 CellID->835369788,ExpressionUUID->"2043a45b-3174-4284-95a4-ae1af6987e65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe default content appearing here \
shows the recommended structure for this section, but any of it can be \
removed or changed as desired. Use additional cells and cell styles as \
needed.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "03eaf5a3-cee5-4e9f-8048-dc3bd8d9eec8"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->405986742,ExpressionUUID->"cffea7b4-4fad-4dab-87f3-441be9ed93a2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f4b1d149-6420-48d4-ab14-ff70d93bd18a"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"bfdb069a-e4cb-4119-8cac-09cc9ce235e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletDirectory,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[339]:=",
 CellID->633295841,ExpressionUUID->"d3395415-5ea4-47c3-be92-d99a06105d59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletContext,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[340]:=",
 CellID->256310072,ExpressionUUID->"91c54139-3a6b-4ecd-a64f-7625ccc6641f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"6e399bcd-a208-4471-88cc-4f44a6375c51"],

Cell["Evaluate numerically:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8650302403543262`*^9, 3.865030260287363*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"4bd4da9e-f80c-4ce4-bf4a-0d9f1c5cf51f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "0.5", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "Versine", ",", "Vercosine", ",", "Havercosine", ",", "Coversine", ",", 
    "Covercosine", ",", "Hacoversine", ",", "Cohaversine", ",", 
    "Hacovercosine", ",", "Cohavercosine", ",", "Exsecant", ",", "Excosecant",
     ",", "Chord"}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.865030262406868*^9, 3.865030273871299*^9}, {
  3.865030358556284*^9, 3.865030359142894*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[69]:=",
 CellID->593829399,ExpressionUUID->"23f3cc91-e40a-4dfc-be7e-459a6b1f801e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.12241743810962724`", ",", "1.8775825618903728`", ",", 
   "0.9387912809451864`", ",", "0.520574461395797`", ",", 
   "1.479425538604203`", ",", "0.2602872306978985`", ",", 
   "0.2602872306978985`", ",", "0.7397127693021015`", ",", 
   "0.7397127693021015`", ",", "0.13949392732454902`", ",", 
   "1.0858296429334882`", ",", "0.4948079185090459`"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8658215667843027`*^9, 3.871328962688889*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[69]=",
 CellID->2055327298,ExpressionUUID->"2595e1d9-f84b-483f-a11b-b26ec4ef7635"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "76b3cba8-f162-4344-b289-c4fe1d9e9c5c"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1076612707,ExpressionUUID->"f783ea2d-547f-4a2b-ad04-a771725c2789"],

Cell["Arguments given in radians:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.865030411346162*^9, 3.865030415483756*^9}, {
  3.8650322156598988`*^9, 3.8650322181381702`*^9}, {3.871329360063472*^9, 
  3.871329362034152*^9}},
 CellID->355637705,ExpressionUUID->"849669a6-f481-417a-99d0-494ca80c390d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", 
    RowBox[{"Pi", "/", "3"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "Versine", ",", "Vercosine", ",", "Havercosine", ",", "Coversine", ",", 
    "Covercosine", ",", "Hacoversine", ",", "Cohaversine", ",", 
    "Hacovercosine", ",", "Cohavercosine", ",", "Exsecant", ",", "Excosecant",
     ",", "Chord"}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.865030262406868*^9, 3.865030273871299*^9}, {
   3.865030358556284*^9, 3.865030359142894*^9}, {3.8650304320890713`*^9, 
   3.865030433385209*^9}, {3.865030536525502*^9, 3.8650305552698803`*^9}, {
   3.865032237914075*^9, 3.8650323217524157`*^9}, 3.871329111349183*^9},
 CellTags->"DefaultContent",
 CellLabel->"In[79]:=",
 CellID->1104642886,ExpressionUUID->"492022b6-1130-4569-90f0-3b165c9d3c8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["3", "4"], ",", 
   RowBox[{"1", "-", 
    FractionBox[
     SqrtBox["3"], "2"]}], ",", 
   RowBox[{"1", "+", 
    FractionBox[
     SqrtBox["3"], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", "1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["2", 
     SqrtBox["3"]]}], ",", "1"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.86503043386244*^9, {3.865030537398694*^9, 3.865030555977558*^9}, {
   3.865032260909336*^9, 3.865032326945814*^9}, 3.87132896734485*^9, 
   3.8713291117384577`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[79]=",
 CellID->654641257,ExpressionUUID->"a5067f6a-72e6-4051-abb2-61dc137ebf1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "1", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "InverseVersine", ",", "InverseVercosine", ",", "InverseHavercosine", ",", 
    "InverseCoversine", ",", "InverseCovercosine", ",", "InverseHacoversine", 
    ",", "InverseCohaversine", ",", "InverseHacovercosine", ",", 
    "InverseCohavercosine", ",", "InverseExsecant", ",", "InverseExcosecant", 
    ",", "InverseChord"}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.871327304553171*^9, 3.871327332081292*^9}},
 CellLabel->"In[81]:=",
 CellID->601033559,ExpressionUUID->"1eebec80-c539-46e5-b695-dbab38c38757"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "2"]}], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "3"], ",", 
   FractionBox["\[Pi]", "6"], ",", 
   FractionBox["\[Pi]", "3"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.871327336115593*^9, 3.871328964891288*^9, 
  3.871329128154845*^9},
 CellLabel->"Out[81]=",
 CellID->2082024652,ExpressionUUID->"0ca050a4-aead-4e4f-b5d7-4256463d0b7b"]
}, Open  ]],

Cell[TextData[{
 "Multiply or divide by ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Degree", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Degree",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ce9f7ccf-78ed-4790-b2f7-70bc8247ed3c"],
 " to specify an argument in degrees:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.865030411346162*^9, 3.865030415483756*^9}, {
  3.8650304496839447`*^9, 3.865030454711895*^9}, {3.871329366171114*^9, 
  3.871329376434472*^9}},
 CellID->1773527424,ExpressionUUID->"3d243f1f-0450-4d34-98f9-c066ce34fc77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", 
    RowBox[{"60", " ", "Degree"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "Versine", ",", "Vercosine", ",", "Havercosine", ",", "Coversine", ",", 
    "Covercosine", ",", "Hacoversine", ",", "Cohaversine", ",", 
    "Hacovercosine", ",", "Cohavercosine", ",", "Exsecant", ",", "Excosecant",
     ",", "Chord"}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.865030262406868*^9, 3.865030273871299*^9}, {
  3.865030358556284*^9, 3.865030359142894*^9}, {3.8650304320890713`*^9, 
  3.865030462288094*^9}, {3.8650305291530848`*^9, 3.865030532237575*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[80]:=",
 CellID->602394808,ExpressionUUID->"63aecddb-d3d4-4575-be8a-369978629170"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["3", "4"], ",", 
   RowBox[{"1", "-", 
    FractionBox[
     SqrtBox["3"], "2"]}], ",", 
   RowBox[{"1", "+", 
    FractionBox[
     SqrtBox["3"], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       SqrtBox["3"], "2"]}], ")"}]}], ",", "1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["2", 
     SqrtBox["3"]]}], ",", "1"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.86503043386244*^9, 3.865030462867827*^9}, 
   3.865030532816462*^9, 3.865032328712397*^9, 3.871328969700232*^9, 
   3.8713291167662983`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[80]=",
 CellID->1970630962,ExpressionUUID->"8ee4f492-1996-4da0-894a-d875c4d1483b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"#", "[", "1", "]"}], "/", "Degree"}], "]"}], ")"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "InverseVersine", ",", "InverseVercosine", ",", "InverseHavercosine", ",", 
    "InverseCoversine", ",", "InverseCovercosine", ",", "InverseHacoversine", 
    ",", "InverseCohaversine", ",", "InverseHacovercosine", ",", 
    "InverseCohavercosine", ",", "InverseExsecant", ",", "InverseExcosecant", 
    ",", "InverseChord"}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.871327304553171*^9, 3.871327332081292*^9}, {
  3.871329137065593*^9, 3.871329142289556*^9}, {3.871329176074792*^9, 
  3.8713292024080276`*^9}, {3.871329234489277*^9, 3.871329240527337*^9}},
 CellLabel->"In[88]:=",
 CellID->1489781946,ExpressionUUID->"e3323196-e155-467b-b050-ba74a3aef9fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"90", ",", "90", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", "90"}], ",", 
   RowBox[{"-", "90"}], ",", "90", ",", "90", ",", "60", ",", "30", ",", 
   "60"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.871327336115593*^9, 3.871328964891288*^9, {3.871329138501471*^9, 
   3.871329142905952*^9}, {3.871329185902368*^9, 3.8713292029369287`*^9}, 
   3.871329241158969*^9},
 CellLabel->"Out[88]=",
 CellID->1952708605,ExpressionUUID->"54a804f7-1d41-4263-8328-d1beacd17820"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "448f678e-c3dd-48e1-8633-934ea2cd8717"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->658451236,ExpressionUUID->"db7be838-0757-42db-8b9a-b261492c34ce"],

Cell["Plot over a subset of the reals:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8650305693680363`*^9, 3.865030572562069*^9}, 
   3.865032331290462*^9},
 CellID->1659821413,ExpressionUUID->"6cfadfdd-af75-4e3f-97e4-03984b523d4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list1", "=", 
       RowBox[{"{", 
        RowBox[{
        "Versine", ",", "Vercosine", ",", "Coversine", ",", "Covercosine"}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "x", "]"}], "&"}], "/@", "list1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "2"}], "Pi"}], ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", "list1"}], ",", 
       RowBox[{"ImageSize", "->", "333"}]}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list2", "=", 
       RowBox[{"{", 
        RowBox[{"Exsecant", ",", "Excosecant", ",", "Chord"}], "}"}]}], "}"}],
      ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "x", "]"}], "&"}], "/@", "list2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "2"}], "Pi"}], ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", "list2"}], ",", 
       RowBox[{"ImageSize", "->", "333"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.865030726567004*^9, 3.8650308063159113`*^9}, {
  3.86503100592686*^9, 3.865031214065455*^9}, {3.865031250848947*^9, 
  3.8650314209812403`*^9}, {3.865032373027768*^9, 3.8650323746600447`*^9}, {
  3.871328936822336*^9, 3.871328937111775*^9}, {3.87132899981466*^9, 
  3.8713290032559137`*^9}},
 CellLabel->"In[74]:=",
 CellID->1452387389,ExpressionUUID->"46e0f387-c360-4b6c-93b4-1037efbd1bd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
7/eg6P9/D/o/Nod2ZQ==
            "]]}, Annotation[#, "Charting`Private`Tag$87537#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Vgn/3/OgyP8/D/o/vE5SvQ==
            "]]}, Annotation[#, "Charting`Private`Tag$87537#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, Annotation[#, "Charting`Private`Tag$87537#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
cat7+22Z8M02b3h/kSDud3Ph2di7RUjb3qRsWMKPh0hrRu3YOAcKcY3OLjV8
+NWhU/mP9f/BJoXDnaJZq/HbPNscauVHYfTTMZ5Vb3lw4WL7c23p/ZAVVlh7
I4MHz91gm5fv3w/2tttD+17w4BPljzyTr/bDuIjgupLHPHikfT3nmx39MOXc
ouBqz4Nbhb9M9c7tg3mZS2f7t/Hgq8rPbtcq6QXOCK+8zwncuP8frvjb1d1Q
dnXaXT6aG2cdEx+Ie9wNvthltbgQbjyjICV/wKQbeCaO19y8y40bMpZYY31d
wKst/Eveghu3Xm9k+nvlJwgRz9fEi6A4KX132uFOWHet6MKtYC58UJlIkOlp
g7jqak1BXy48u5Y9kJnZBhIybTteenDhCqulB87eQu6bmvtqx4UXGL6a1qG0
gbiZTKCMNhfe+NDm/qnjrUA/GvaulYcLt2/uGzUpbgaBdTZcivc58TbQmXWr
a4Rgd9eRGjdOPPuetYdkQiPwt3k3WDpy4l1VTQ7zzo2wJuxZTNA5TlySX+as
llgj8K7+vmPgECduO9of0lz/FXhmVE3CFznQ+xb5Vdz6emDXUlOnrnPg7kL3
vpdQq8AoVua9mB0H3sVZPb6qrhJSrqhUqF3kwM2nLmu896kEHdLF38HGHLjs
kXfvj8xXQPT+t1u37+PAe1exKbK95bAz0SDtwiwJv7x4/4Np1RfwcrhU4D9G
whXIF7uofl/gu8qtypxBEj67T81M+dgXcG9NGFppIeHcLet00UsxlK+ZkIl7
T8ITEzJ+11bjcPZmcPp3NxKu5VX1lV1TAjlHEguXHEn4SFBjQadJCXCS86uk
bEh49b+bH0N7iyEj8+ewoxkJV6abNwQzi2D2l5wsvzIJ7/B6p9yk/AlEo8KN
Hk0TDMP2npyRngK4AQImVxfYjNzMbwXUllzQOMp4eGmIzfgw0OflcSMXRI+7
FJ5rZTOkrhtfn6Hlwgf9DgnjPDYj1FXrz5bcbGCdS+lTcWIzyEE0iT2dWeB7
V9VJYHiFQWa/ileJSoNTXpOJq9pWGFL3jelG86kg45v8nVSxwkhs+H4o/HQq
VAfxKs0lrzAwzxiLGJkUEIxvYXWfX2H0LsilMDqTIPqjfWBOG4vh9dbJfqd5
PNiUbCx+VcFiYG8tKnSt4kC59Pv4y3zkI3/Nm+2fQme1slFsOGrvY35bOiIG
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
Xexxn6EbQUzC/wCGVcqm
            "]]}, Annotation[#, "Charting`Private`Tag$87537#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 333, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-6.283185050723043, 6.283185050723043}, {-0.5, 2.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"Versine", "Vercosine", "Coversine", "Covercosine"}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]], 
           LineBox[CompressedData["
1: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
hUphph2f838BwbGZLA==
            "]], 
           LineBox[CompressedData["
1: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

            "]], 
           LineBox[CompressedData["
1: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
Q37tVZdV7lU62T5A+R9T83ln
            "]], 
           LineBox[CompressedData["
1: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

            "]], 
           LineBox[CompressedData["
1:eJwd0gk0lWsXB/DnPe9xziscZCoNhoRQSqEU7+YWFSVzMlRyaXA1SUUhFRmS
K1TmS1SkuiW5RLtu4ZboGtIgIRXqI0rScZzvfN+z1l7P+q299tpr/dfW8tvt
/CuHEJIvqf/9p+dinOHAT5b8/+mg0znZoLIvP9mUV3XMq+o5aKtxTTOXCFkv
2wsOh/Tm4IpLjm1xCkK2YkWh+uMMbTQxHo4L0RSyFtsC53xU1Ua9OylWmxcK
2eePjy2kM7Vwal3bpSUbhOzeufTX8ApNZBwPemtsEbI5uwZJyQZNFD2fpjhl
j5BVb6oSDHdoYN8Hr7C3Z4RsatqTHTv3zcY3waIFj3OF7PHsefK1j2dh8/ec
d2XXhWy18clRF8NZWM3rcYhvErKOizeOVnNm4s2k49SBt0K2bv/IUPqhGXhZ
dW755iEhO8sgaOL8N3VM0d2uYSo/wTJ/uNrGiKbjqWvSrRoaE6xTbPOO6rjp
eNSs5NQU4wnWvJ5z55b6dNxuOzj8dv0EG1RiuAHXTEPfxjNFj30n2KE4JsXt
oxq6uC/yuh08wVaK3ncVnVJDq4CQh/FJE6yr9LJNpW2qqBzzM920cYKtMTLU
8UlVwSmCLHvNzgl22qkfPnVrVVCcZklkBidY65Uednm0Cg4URu3okhOxfieV
7ugdUUZ8xFuRsE7E3i571nrzpBKWr7v85YCPiB3du4a94qCEJW1rCrf8JmKP
soa59ipKmP4+UWB2WsTqdvhzHUqmYpCUUndXg4j9tFP/6sE+RfQ7XZb2pEPE
fplNj1NViuih4r62/LOIDaDffa1JUkSbuRduJchOspEC3z35yxRx2iqNGDOH
SfZQn/ua/kwFFDxFCy3vSbbYpt2oM1QBaTe/IZmgSXbw4IX15c4KOOhfuLE7
YZK9nMmhh2UV8O8ThoaJTybZloJ//k1WkUcLcVqe7utJ1t08/LX9SwHePExU
7w9Msr3n7CpccgSYH9xGvkuL2Tz5DQ80jQQYvTHy+ebVYnbQdF1rkZsc/mzu
t//pIWY9jit9rtKWw33rXO+nBopZkFme0PZFFv1s5l39J0bM3rB7kffjjCza
GLUcW/xIzCroh7OWL2Wwsshy7GmrmE3u6wm/VSqDi7QuB23vFbOlvsWR49Ey
qJBQU9JIEch7dPl5p7EMkqiz6bQWgXtL+7UjU6Zg1w7LoN82E7gdF+E656A0
zrw0UmQRSMDhbcV1L3dp3Nh7qZu/m0DabIu9s82k8ZnvVI/8CAIhM9RczcYY
RJeP1u3ZBPwjGiy9IhnMtfxdzbqDQLBPQtXsQj6+CrN1FvQSiJmmV1SSwEfV
CmHi608EbOP191zYx8ckkwBOqJBA5+qEq2es+Riht/w/xeoUbCmMFtx8x0Nf
xfcPlD0p0P11uY6TOQ+5Ga3fErZSYBLwdaafFg+LtR/q0jspyLPvmnwkw8Ox
xQXxw2EUHH4a0h3ZLYXJ7ludG7MoeG7qZpecLIV/Z77pju2ioGvhrD/fC7m4
U+epkriPgj5Bu2nIABcVSu+uCh2mID7Ksph9yUXvmswr/hwOyD8b5sXd4eL3
Ls+91jocyEl2i60P5aK+7nMiDORAsiDXRldMY+O1Ryb79nDAwuTNsNwwjQfM
b/v3H+IA54PHyznvaHywOrW+PY4Da+vmubfX0ei1yzm5rIQDy4yyVNacpTHp
RqNG8BAHPoUsLX+4iMYly2qc3o9x4Ijn+wIrXRpf3S897k1omDqZkdahTqNe
S+LHtYo0lG1V3BXNpRFH117XW0yDrfMYBr7k4FeLOqvuUBqCc7XCFsZxsNbl
xqq6CBoirpcNOEdx8HzQBYfSGBpO+N74NekgB61ydm06nE5DUIKZlWMAB+Mp
hVDFchpe3Xuq8WUlB7XrN5Zaj9IQecnKYA+Pg6Nd1mV6Ihp44uZPRExh/bhB
lZwUFwJ7wLtojMJgQ1H9S2UulHue9FrQT2Fl0h+9e5dwIctIJ87oKYVObgMz
8vdzoSGvNeDmeQp1glu0T4Vz4XKllWFICoXfY+7OCz7OBf3sE852iRRmVSSZ
W5zlws19+spaURT2zVjs0nyTC0uePUjP3k5hVE94PGeEC++aLA6nr6DQRej/
e984F3gBJtmbzCnUVV5/vpGSgs9anJz5JhQ2rNIsylCUgqmpp4vFehROu/Lw
vskiKZAb4lhuUKbw+m65cb89UkDKbgfFDhH83LJwbOSQFJwznF7XMEDQYKnr
aPQxKXiimu+g9YHgRZI5nJ8iBbL2XxzHOghm/K4/0FMmBf6X7pxzeULwxK1f
XvuNS/ZV1Yr+LCb4QC3w5QjFg/N5ZhqviwiKw+Pbo6fwoFIhIkaxgGDYyn9b
8mfwwC7raU1hJsHdbb4NPZY8KP+sP33HaYKbxg5X+0XzwNvvy7DtfoLnvLKr
RuJ5kJKjM3/ZHoKt9/Cv6LM86BlyAvPfCDqe4pfnX+RBsOmbPPdAgiunp13r
qeWBaUWilaY3weijFVf3NfEgtLreYLcnwXvdr4s5L3hwd7zI+x93ghbF2pe0
+3mQ9Mfp9blOBI2X38j1k+FDiqD9SpMdwaDcluwRJT78/FogDl1FsJgey4ye
yQfdiLZZ834hqNNgeT5/Ph+ChjLCSq0Iqvs8Se5x5IMg/vBSUzOC3MgPx/xS
JfPGLfWmegSD99NuW7P4EFsqksqbS/BFoKb+lot86E34QJR0CF7dsKnRp4wP
/l5N8kpaBF21G9U9W/lwNDG3KmwGwRrVT//x6OBDTSgtb6BOUF+Gue/ey4fV
sdjbPY3gxFfrQNdvfPg+OlW0U5VgwaPbtxyVGdCsvrW4R5GgbGVzzPqZDLxR
Mv3UqkAw9NqQ5zodBnSNVo02yRNce24esV/CQMb38M+dcgTLEmxb1qxggPfj
YdOILMHZUduKVq9kYGln17BA4pHt2Q62rgwcVvuza/MUgt4+lRqrvBlo0Om6
mCpNsNapfeQXfwbStdrT/2Uk92OheME6hIEP+r3ftvEl+RgvCIIjDORX1nr+
xZPkM8eeZU8wYDss3akqsY3syfcrUhmwslVZOsCV5EPyK5ZnMRCr/52/RWLV
0ZoEi4sMTA5u//SGJhjV/9p32VUGzAq63m6TeODNj0VLyyTzOuM9wxxJns0q
UuZ3GXCWPjgSK3FNrckL04cMRMfYyepKrF/lWLKkQdJ3iVrQQBFMuR4UsbiV
AZuzmz3CJJ4oiHMy6WDAB+1PLpQ44HyRzqJeBi6eaykfJASfJf49ZvyZgRD+
tYEyiS2OdT1e8I2BZo1KjeMSXzwgyp4/wUAhV+zqKbFgp/peI640dHaXxJlL
fMjXfKWhrDREdKtVz5K4x9lVzUBZGtLnPBiUkfjIWP/u2unScEcmzZQr8X8B
yQOQhQ==
            "]], 
           LineBox[CompressedData["
1:eJwd1Hs4lIkXB/B3xjC975iZ9321Ri65FSFCspLqkCyykYQtWxESUalUyq3a
bIrd3AZJIum2jLRKkVMopJJLYiXJpZR0lW1t7fx+53nOc57PX9/vX0c3YItn
EJcgiNPy/d+9HJBnY25MwhVBxjweQeBHtUHrGXYkfMvg3zaWe62QS+k7krCr
zuOVs9wNHO0num4kjIyUirfIbTm+QKbjRcKe3OdzT8idO+J7QNuPhENbWn3b
5FZ6utN7eiAJsilH4hgOgVvbUo20NpNw1dDxnI/c3XdKJzV2kOBV4ddZJLdj
VfMD9X0kvHq8RjApd4nsZcG0gyQ4cN45reYSmJCt7yJJJyHHOKjHTIHA2fyi
ydHjJEgl2e0Fcj/eYSCrKyRhxYKko9N5BJp5GEkiy0lIWaO51FSRwK7q803O
10mIVXjsinIfNJkdq11LgtvOQ+prlOR9lOYMNreSEFyXpn+WT+AvO2RZhd0k
6MUv2rB6CoHm/RZu0f0kLBTu2DOVJDCx2qrc8D0Jmj/g9/kUgVY7bBP2MxTM
Omkaoioi8Omz61Y/TaMgtnjbHb6YwCT3hS/m6FJwVqtGi0MT2GcM7k/MKRh4
ce6WgCUw+dlSLRsPCnhR4pgEVQJt3O+0iHwpyJR26pVLCByocj44uI6CZo7t
yGs1Am2zlr1K3UIBRZmN79YgcGj5isrRFAq2NrRXfNAh8FhV6+a6TApkhcs0
N+oRaGfspXM8jwLH4fjH/foEpir6JDqXUJDn/jXygwGBi6v8VhXeo8CgTEcQ
bUrgiFHvlOgOCkI1zQmLOQRmStdVeTyhoFTxp6NvzQl8HRmg//U1BQHmhcmH
rQjMMgp556ssgN1v9trMsCNwifTl6TlTBeCqHfFSZxGBb3hhvkqaAigY64gx
AAKX9oXXlJsIYNHo52g3RwLfZ25PFi0TgJWG7DPvRwKX8eKM6g4L4Knz7e8t
1xO4vtq23TFVAF99TiV8CSAwKmo8tj5HAAsyh2fcDyKw4EV4++0LAgi+fLxG
GkbgRLNfXOM9AbzPme1RsYvA0xm2HfcZZZhf9WqdZSqB15aPx7mrK8O+LwOb
KjMIfMC/ZNyipwwevE+qP2YT+GWPUfzDucowejfqWk4+gR5r1UzaVymDVIPT
97CUwEmD8fiubGUoMWwaud1CINtXZrK6QBkyB2Q+MzoINMwOf9R9XhnWT27R
+r2LQE/BoEnPdWXY0hhumdZP4Nmxtke9T5Qhj4lWX/aJwFVXy2YP6AqhwHRp
er4WB0O3hXcGGguhN9Cs6IMeB+ONjfYPWgpB3OPk4TOLgxdz8zuHlghh0eQm
zRVzOchN+G3/yyAh1DoNuai4crDEJfzxm3NCqMq+HvMlmoNvU/V8e8uE0J19
9s6/8Ry07OnsvFcphID5fZpsIgcrIhw6LzYKYXeL3omINA7WpEkehb4UgvrH
AsHkRQ62PLnZNjRLBB4Zh3jpzznIGu5a+chcBPVlXXU3RjjotXV2W72NCKje
MPz3HQe7uNLW084iuGB6cFUlwcV+w80PA0JEYNQ7XmyqzcUP21Qf9BaLYP/Z
v/Qc13PR+vrd5fdLRfBVad6xlhAu7uYl3K++IgI1wnbrzm1cnMx8dS/3jgiO
eG65Rh7gIq8Km1cPi0DHNHJTUDEXVZXCmh4ZiGH8RPDVeZ+46Ouu43rbTAy9
1c6Lt33jYk5WR+Of1mI4lDfe3UQq4HQTaEx3EgP/cunfXdMV0NDjuwbPYDFc
6J8Y2e6qgDY5NfX3i8Twi4vZ86/FCjhgVmoXUiKGifmvX6z5UwGP1eaVc66I
IfTSDb/BWwo48jrmlFWDGJxO6e6L71XA3MV2MTkjYuj7Z5t4VMLD+Eg/9XIJ
Db9pXFddk87DR3btHd80aLCpUivqO82T/zO3Y246NGTmyTLy/+Rh1/EFU4Zm
0WB9N2iwrZOHlvXq42q2NIwmvb9pqK2Ig5Kuh7F+NHiq+i/OuaaIdv0eyXfX
04ABSnbeDxQx9WKDs1oQDfyofWv9BxRxkf3VmrJwGho40vQwsRJmhUr/GIil
4Znqyadxm5TwjZV4k8UBGvwOb+geiFdCx2+HZsQm0iBzKFhYnKWE79Kijkt+
p6GloyjArVEJXatXHXY9RcNVb/NTXnP4mJ94z1FaRIP6Ud5Enwsfx1csJQbO
0TBV9VxpTyAfC4esdsVcoiHiV6fs2bl8nBRPDZLV0iCacz50Lz0FSwJaQXWI
hhjps/3JLIlFm/a9Xj5CQ9lf+f2tViTmbjXISnxDw/w46cYKHxKTYqPHJsZp
yPO23xhyksSgHL28v/gM+DNdyz9aU+h3qtllqjIDdHEZ58xaCj3PRn1yoxl4
4+/N1UikECqa3G6oMTA0rDYY2E2hZmvkP/lGDBiN9nOnHxGgSpdmcZcpA+F2
biUplQKk+m57spYMpE95m/DxhQAnRtXPH7BlgGsev7faVRnbyFrf4GUMDAfq
hhhqCLGJDueddGfg9CxfIz1PIaJEIutcyUDshP6v3klCLJkZxnfxY4Awfnkl
46sQk+xVKkzCGTiTP6xy8bMIE5yr/QO3MeAgXWJaOl+Mu903Ck/sZKDR7Yd4
txgxBv98PVAUywCv4sudBh6N9ns2qLxLYWCzdbkWmUujTbywxiiNgaNt+T0+
dTSaJV4JDZAy0H54/YxrozRqZghutZ1kIGJ3bt3gEgYnZOVbK2QMtBVkvJ37
jcGxKz9rjl1mwLIqxCDKgsWhG/wGw0oGlB16SqyDWGxvXqOdfZMBM0fPvl0P
Wbzbpnj3Yb08ryWlVotSwVvdpVFUEwOvJ6mso44qWPpC4f7eVgYOHlIRadWo
4JmxP/ZcfsTA1yPtDhHfVDB33GfmaDcDVs6zm4ftp2IS7+K+tc8ZyAprTKi/
NxWDdbxM7D8ycCms26KKp4rbx6LtLSYYqNOaZ6LopYrxN0756E4yUF45usfg
jCoe9xs7wOGxcGndrh/SVkrwrIlqzjs+C3Eu3HfWpRKs+GIneyZg4d+Qwa4N
IjVsyUrquanCwuHtSpUWj9Xwycay92USFtBS0u6yZBqOWD+eUqDBwkznI/7d
l6Yhr2PmvP36LFRmp/ydnK+OzGm3ZZGGLFzLCFf01tbA6du3+weYsLDhwhNu
f6EGzmduJjvMZcEiqO/nlzWa6NQ3XGj5PQsfbu/76O6rhV6lomt6C1hI0WuP
WjmhhRE/+g1xl7Bg7B+4MGOFNu7VPDD53omFk2kL3CVKOvjrq3Psc1cWdmTd
6/wtRAcLDn9eVOvJQsTBmbXti3Sx1Hf6qnJvFgZsQxwulutileHSsMLVLCw9
VmnUNEcPm8bDEtLWsmDffnDPs3I97KxPlR4IYCFyrslgFejjQHrlH9uD5f2/
i3jm0KmP6JEZGrmRBeL/MwP/A9rkeXE=
            "]], 
           LineBox[CompressedData["
1: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
fEs=
            "]]}, Annotation[#, "Charting`Private`Tag$87618#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
RryKVRMGaXoOoxff/XKH5q6WLoP/AEUu/ZY=
            "]], 
           LineBox[CompressedData["
1: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
+w==
            "]], 
           LineBox[CompressedData["
1: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
            "]], 
           LineBox[CompressedData["
1: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
/wLofx6N
            "]], 
           LineBox[CompressedData["
1:eJwd1ns0lFsfB/AhqSQUyUsuxZFQauqgXL7PcSLHUUlyi6MiOg4qJV2ERDhu
MxRSySAJNXqVWzW5k4jcFRp3JmKMca/ep3evtdden/Xd+4/fXnvvtTedPGN5
SpBCoWSS/ee4fZf/8xSLAlD+31QIL+2H1qmFBQjr8Vf0uq9MfN/9irI8rxAR
+mfKeWWbiehdzVluT4rgo2X2SGV+E6FA5VjVPiqGxJn34hqGm4inOwR+aKa+
xFW1hLLzNCXCUEvmccy9V5jUPGFh3K1IOGmafLOis5CrGPTZ6JY8oZ+YET2T
8gbeL5XvmfhsJESDlkmY25Zga5h11OxpOWKhIK9jI7sEJf/KVcV6yhKj486M
cbdSbCy5eiTy+n+IDmUpd9ZEKS69k5MLTZMhquwqqDG+ZYBvvNLBpg1EaqVK
xY7Qcih6irVLWUoTtMWWSAHxCug6+isZM9YT/jtDjjbFVyByRI9+d16KOHZ/
cOh8RiX26hrpipRLEmbNt5n7tlfBoq1lH48qSeiuMrm0Pr8KOi27zVMeryOk
fDJWFVRWg+OY5n/x8VpCMNu6KfRADWJF9kt+2LmWmGQL37VtrYHN77+YW7yR
IOrN3TQXBt6iTCR5idsoTrwK2sCv9aiFoIdI6aYV4kRWYfXru9O1EL70su+w
sRhxU0XtkIFQHRK5pzt720WJC/YdG8Qi69Dj9fqul4YocZIWxu6RrAdn30pB
q5DVBJZGzgUqv8fNvLT7H8xEiKVRq9oTmxphUb3TxFtqJcETerLd7FQjqudi
9nvGriA4isvjqI8b4QquQaLUCqLj6Itjy3Z+gHldzoMCFWHiRen68XSiCZvX
ejZYnBEicro8D0cFN6GxhhIxvEqISJ+tfOFT0wRtibpTro+WEbHbLvqbWDSD
Ehs1xOAIEl532sRHnFqwZirtgniMAHHq+fYLjWktsM4+rN1pIEA4NNzsKBxu
gTNP4OKrrxTiz+U6jPAzrXihlJQbYE0h1M4lUDUC2iDDlVvzw/c7FCMn4iXL
23Cv0Ji9hfcN0o/2Ly4Kt8MjTt3d+9w3CHXPltdFt8OWLn+e4ruEXlPbo17J
HZBOX3Q0T1uA4aDfifruDvhL6B+S0l9A0nWGp6Z8J+Yu2vF5bfOwLOaEcO52
ItpK/9irdfMo07iW73rnI2SUjpR9TpmFQg2jrLLjI05Lq/Dfm87iikvVexWZ
TxALGRA7PTUD6n3x4b74T4iV3aLnbjaDVLHUDU63uqD7jBsSLMrH96wqZVZz
F75rh3ffLpmG/f4vWvKS3chcWez9w2ca6wJ3m36id2PhRA67cICHG9yqSzYx
PZiTVdPvb5wClcMf22LMRlbi1fT27kkc1115vt2FDdtIu/ejaZOIvik7fzOY
DeqyK7ZD7pPgbMbyoXI2ujwTWiVnJ5B6LEw+3agX3hNNFYMHvkKyXvagEtGH
mivOS7x9X2Akt62lwakPSaq+TAUOB2f/hn1AQB9c0kV0E2gc1C13ce1h9SH9
SFiSTe8ogg2f+N8z6IfFaqEmN/oIpplgyugNYDrVIapddQh1GnrrzjoOYCln
vY5UxyDSHmn7VAeQDvAW8v53EJYPtuldrBjAPYU1i1emBvAsWq66+cAgbrL8
S7Ua+uHlOdsTfXwImUp7lBbye2EyOvXbUNAQaqnagnO+vZA/9TXd4OEQqtqk
9er39KLOYdB9bHQIB4saJ76+YUPdvHnmj/PD2P1XP8su+zOG1Zliy2+OwC+k
f3WgaRdYGVnnHDJHULj8V5Zx3yfEb85oyasdgUOHe/fRa59gIns/6aT4KEbW
feYSBR+RvipCtSRxFKZ0im/Rnk4cH3E1vJrNAa1MaSfh0wZdl5OMpnoOOui3
i69taoM421FIfZKDru4Dp968bwWr3aq2Y/cXpFwqjyE0WyFfbWStzfoCtcin
Dh1Tzfj4UMGL2ziGs/7ev4Rmf0C+cI5l5tQYbL/rrC9w+4A4tz06TlLjqHnh
JPpMhbynW60o9TbjyOUPCM+nNIKVEx6b2TMO20HrWXXjBjDypvOdxr7iUu7v
Y2to7+AvFXRXWmwCuvbmFUGK72DvIx5YrzUB2tEEHePcWqzTUf9D7/wEcisi
F9Ja3yK42OmT9MIEJLjaw85aNXh+fPDH0I1J5Cr7MebkKsl3QdO77BZ5Dr8N
Bj9iVYBW6j1w/+EkRgyN9M6crIDnZspbq+pJsCvFOg2elEN1QDa2TISLlNzD
tIhDZUh0s1BJpnOxY8OIhF34GwjLJMRfTuUiV5Y24jDBwoWa7pVH87igObTd
MLJh4fDWf8ZXt3LRuFGmn6H5GiJfQvIvy0yBuL3azmC8GFe9XpoefUD6t79a
A8vyYQS+ixhzCrRzrnUaB/IhIqF1vZo1BaU/9WHc+QKJz1KL9vSQfuslUMR/
jvzpcHUFeR4CGUI7HJCHqSu2osNJPBBx1LgLkrko/jNWLSWLB4rxwgaWGxPX
N9btsyvm4Xiae6BK9lNIsHDtXScPbLFM99t7nmC7wJavTJlpBPar2d+5kAX3
UH7DpfhpsBWH48adHoJqqzW2M2MaKUu8AsmadMyr/b3yy4tplHTqJtCp6Qir
7SIcW6dBebx/V5hYGjLWVDz7TYqP41u/Mdf0pcCr51v9gjIfbLnU9ckOKfiV
qcPJ28UHhfqV3/3fB6iwyN6seoQPwvDtkZi8++iNi40TieUjcHL1WVnOHWS6
1DHLGWQemlWYJ3gHZ38VrvN7Rq7f5rE7QzER39suC0008lFyY+RVsGs8Nsqe
8GkWn0FgS4YSc0scBjhJ9EjFGZTMhTonnoxF9suWJ8ZaZK4+o13EoGOvo+lQ
wUHS14OuxGrSYJuiZXMvivRU/cNrI/9iekXPicfJpCfWZuaHhIN2JtIjnzlD
7u/erETNMLw1HL3e+IG0eruLbkIIXDMSIrv7yPkZzqLD9sEQFDNJ4PBIn9Cg
K6ndwN7u1Bwh6VlQRj/SZT4Hom3f4YK1W0gzPZLi6AHwzvlRqqBLenG8us33
GrKvOrTr2pOOOKza4HcZpv0ifcb/kOb94uR51xcDZkVjln6kLZ0dWXU+ZP3S
gp7JpGMu+x9y80bh9QrRK0zSlZPyfo1nYTXqvSG0hPQOPv90oheiChs0GX2k
p61VzWdOQ13JX+cpj3RNi0OygyuqQjWNXgrNgSIjGVU97Izv1uE2raqk0xnS
DR1/IYmlc7JP56ftwsLf2UNbdchjwvSn98ZHrLBBU9Qt3yU70h76tW8ij8CL
bxS06h/SDjss1x2zgIgjN1Laj/TKY996B8yQUfEgQTmK9PEtwfEPjWGkeTB1
RzLpRDMnlTkCn+OWcgyYpFPYnN7CPfBbzCowKyFNm2p/m06FjLNdmc2Hn3lP
fK7bVjyvXVHv0keaeC32NEERFtT89nO8n37SnvJFAmN3XPr8hebJ/6VCXaLG
oiG7NCaCvvanu7ZbtbEN/wdNuiaS
            "]], 
           LineBox[CompressedData["
1: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
D3Cq15A=
            "]], 
           LineBox[CompressedData["
1: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

            "]], 
           LineBox[CompressedData["
1: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

            "]]}, Annotation[#, "Charting`Private`Tag$87618#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{-6.283185050723043, -2.564565433578327*^-7}, \
{-6.2793309761157685`, -0.003854328678008684}, {-6.275476901508494, \
-0.007708386586533848}, {-6.267768752293945, -0.015416402217131323`}, \
{-6.252352453864845, -0.030831632008018008`}, {-6.221519857006648, \
-0.06165568018935644}, {-6.159854663290253, -0.12325249565287495`}, \
{-6.036524275857463, -0.24603620388567427`}, {-5.769115730819167, \
-0.5084277498371113}, {-5.519427897080684, -0.7453290014780044}, \
{-5.274637947484504, -0.9663433118160796}, {-5.009100227715609, \
-1.1896413335620588`}, {-4.761283219246527, -1.3792209687239352`}, \
{-4.716396113871411, -1.4113772544837941`}}], 
           LineBox[CompressedData["
1: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

            "]], 
           LineBox[CompressedData["
1:eJwV0Xk4lXkUwPHL3V4eUVoU6UmFIdtg0qSUEdKKUcbWWFLRtRapmGRsqaRw
GU3SQ6VUck1ZRs6JahCyVZ7mRtZSbpRcua73N+/8cZ7zfP4856vjH+YaqMhi
sdyY+X/HTo2EPV2ihIGDgqYZQqBaMmdSUU0JS3qWJowwVi8oTz7NU0K5c/No
G+NgV4/Fc2kKpVuO+ZQyruOQm8JJCkvNjLsSGWtWFFlrSyjslU44uzCODNra
UjjIWFXcuYBxo9b4XkMxhYXhUu/nNIHlrdnj9zoprMrdMxrPOCbeOsHqGYU2
qeoJBozbzPvm19ZRKH7807LGWQLfDSVf21xNYf0vio9+ZRyfY2T1rIzC/I7Q
YImcQLdTR4PLTQrP2xdrRjI2kx/17C6gcJVTe7tkhkDKXe3RvbkUbptWzfBl
3ONbHzd0nsId0tTdTTICa+YHqQlSKHy4L2jFasbDR/8yPxZNYdRD9c72bwRs
DD0fkxDm/qT1FRqMhWKyOzmQQtvY9EK3KQL2ttuOZbpRGO+Vml0+SaBIuR/u
mFNofDV0iPuFgLwmxcXSkMLbU/7zOJ8JuIUZD1TrUOgnOuE4PUaA3RXDa5hL
4bjlls4GCQH/y2o7+j/xsXWbVqT8PdNn1/2eg8N81KHGpkTvmD6KXuFjb/ho
uiExzXeY6bH/eqa8mY9st4hXBQMEdMw2vF5UwkfnrD1aD94Q2O46IjQp5OPH
kEjTTWLm30eyf3a4xMcrmbEn6l4TaK2UNEed4aPoQkdN6SsCx23zoesQH738
TMeM2glcC9gaOxrAx3l7PFtinjN9kqRrOd581BdeHK5pIaDftFNksZ2Pn073
PDNuItDlSoouGvFxNMIqVFRHgBwp8bu1io/Rt9S/RyRgmOO+rG4pc19+pvnT
Wqbnv6U5n1X4KP4aPVFdTcB4n2+as4SH/M+1xx1FBJKjHoWp3uVhlSxwoeQK
gbKcECO96zxs/+0u6+RlAuKqJSMb8nnYqvyjhdIlAuZ0hH9IOg/r98eF84QE
epNX7G4O5WHzuIpP0RkCa3N/X5dmysMCaV16aBSBD9X2XF4ZF/9JVbG2tSNQ
cqGi6XAxFyu1onSzNhIQHDTI6LvCxQJ7s8U91gQkC+doPUzn4vJTA5rulgTG
w7vMjgi42JNYVv5mFQGpXoB3vz4Xb5+eMrHhEFDMjC+vzedggnBA5FZDQ33Q
lxgjIQc33UsaSaugIXHTPpu8cxx84p64q1JEA/eTY2NULAeVlVeWfiumgXJS
6zXy5OCDc/aDatk0qJLLypcWclBQ4hf0xyEatA797Xf0LBvruf2xK9VpyGto
cJiTyMbzp7Zo7FWhQVPv5erCE2ysuWHgn8Fj3Dc+2RrMRsFAo5pYNguL3fXS
9JzYaGLK+aY2MAsL7C6IXnDZKO2fCPtYNgsqWgfYlicV8UbM1Lw4p1mgm9Sv
jUcooPeCt7qHfeXgkqt3XyNYAf3v/Vls4iGHosB1T2z8FfDArTyPARc5bGX5
D511VUA9bb8da+3kIPyhTNfAQgE1BAV3MnTlYFyw67rfVxZWdyT3y9/PgHfU
2Rsd0SyMe8VitQXPwOGNKm5BUzS0p6R6tHjKYLMdJAUM0/C6t35Yx0UGixwj
K3xe0OA9naQQ5iiDyp3dmq7lNLydyfvwxUIGcp+ivnVhNLRVBnZfVZFBYuz6
MJV3sxBX65CVXzMNwipBWulLOaRddEjV15iGSosWnLwvAy+riUHtiilwzv22
NNB8GrLSjVPX3JbCf/P167k=
            "]], 
           
           LineBox[{{-1.5667891933081748`, -1.411377254483794}, \
{-1.1521587505882536`, -1.0894805542968056`}, {-0.8880502141511564, \
-0.8591554542640689}, {-0.6416623890138718, -0.6307109022520433}, \
{-0.37452679370387204`, -0.3723416705362881}, {-0.12511190969368496`, \
-0.1250303266803509}, {-0.004007133486721644, -0.004007130805763084}}], 
           
           LineBox[{{0.004007133486721705, 0.004007130805763145}, {
            0.3846698602147978, 0.3823025786553543}, {0.6322139189555842, 
            0.6217375485150393}, {0.9005057478690859, 0.8703864396068769}, {
            1.1638996926402843`, 1.0993077352246476`}, {1.4095729261116698`, 
            1.2957423651178144`}, {1.5667891933081748`, 1.411377254483794}}], 
           
           LineBox[CompressedData["
1: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
IOg=
            "]], 
           LineBox[CompressedData["
1:eJwV0mk01XkYB3Ak+v/vddHiRkwozEWWMo1jNM/TpIajLA0yEs1FR5OlUGMk
0SYaKkVITlEpGkv2bcogS7aurIMkS/ZlJN3r3t/cefGc7/mc8zznfF88Glz/
g15SEhISTuL5Pwu4qaZGuhR6Dfs0CgiBxY0jO7eaU+h74aVZh9huclL0FgsK
p8sWlYrFrpfc3K+xn8KGqdufboi9fem7XHUHCv+4l9nJFTtlwvniZlcKY+x3
l+mLLfPutNNXnuL7a8fuz4gInGyP46j5UHirhRP1ROzeupyVTUEU6iSnBLmI
bVHR1KoSSqGiH48rLXZ27nia8iUKT9UP/vRYSCAiaYsV+zaFsVJj3/NWCOjL
PlqZvkuhD1finpvY3UHauTXpFHbVVhz4ICBgYMdhB+RTKMFLyOjgE+ipzGy0
LKfQcscnuz1iX9LTD9tcTaEmFXzg6RdxHxnDkSYehWfrwtFtmcDloNzE9F4K
HbScvv3zMwGjIeP9IUMU/jI0E7G4RCCy0iRfZ4FCRobaOp9PBEyCzCIuKNLI
fF6pS+YJvHtfbvKzMo0uoTM1CmJH2+76aKhB43J/cIHKHIFBXbTtN6Ix++zV
2+wZAjHv96qZ2tEYXBTqXjhOwNS2ro3lTGPDjFNW1EcCwxWWl0bcabxflmDj
NEbALNF6Ms6fxhy+f0r3MIFRG/vS6Vga8y6z3CLeEbhZwfOpSaBxdjjGd+MA
AXNdB/W7qTTeCF7szOgjELf6UKRlNo2w0FuS00MAKlwd05tpLB3fVu3RTmCC
M7AmpIPGidf8rMo3BBLuuFfY9dN4QfLxvHwbgakA7hbRFI0HWr6Jv9dEIJHj
Pe/MZKCq25LlkVoCe+6MPzRcz8Ci055bQ6oJzEifcJZRZaCTndrR61UE9g76
vsjXY6CtrSU/rZLAQkJgDMuagboj3a/8CglYS5/n1EQxMFHlunFSOoGjlWZv
LeIYKMSi4jUPCJw5sxRWm8xABbCw9U8lkPbR9+2rLAZGTl0p1EgisNzker6h
mYHmbu2Bm2IJPIw362hRZKK+vcFxjzMEymyWztuqMNGk2cXDIpBAq+xz3TZN
Jnq29Z5VPUmA/zsn/M0OJoZFeTOeHydg57ZR760jEyMm9/8V4EpgRXspvCeJ
icqrJC2tkcDawTw9lzQmDtrw7qSaE9BJ8u3szWRie5fXhnFTAgcZI3p95Uxc
nSOT6mFM4Mlse+dAPxOvbVdfNatBwLEkT39YQw4np9zXH5UU/7+Vb/fMUzns
ao6Oyy8VwVycpvNAnhzW5WVGYKEItvd1dTWXyuEp39UfanNFUOT3Q9ezBjns
DuuQKMsQwYtb7M5fx+Vw/pxB/Y/xImjrr2of/ZqFBTnWV/h+Ivj3lFLrQAYL
G545atWqimBn+WublhwWWjV9lcZliyBYOqKlspiFHWuXi5cVRbCSMNmcUsfC
tDijApasCKQrXja5jLEwJ/X0+qE5ISjJnGjs1JbH2XqtJzrVQjBNflHb8kge
58eSlU25Qhg2yDH3zpbHqZZ8Q8/DQrhZnZovWSyPf8/xGiMdhDAxde6BSb08
KrevSyzcJ4QUMD+XPCGPYxdLXmXpCiE8wFUln62AsdL2u6TnV2CE3fMmzFUB
R0s2OAb9tgLZXB4qjSqgt/v0jtYTAnh0PHTKZkK8bxVizPYQQMpJ7cTIGQVc
w38fe8hFANFhIbPLSwq4YCgVWGUpAK9kzdR/ZBVxkY1aZloCUOUFCO5zFPHI
op9bVR8fonevK9LzVcTstsOfTffx4Zi6g97uRUWc8KjR4K76AtKyMnLcjrUY
H7vt6s5nS/Af1d2m8g==
            "]], 
           LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAoDxg8ZbdEkD5N+VQAJX2P0oUBSaL
ARRALL0tarwh8z92SjQ2qgAVQOVyusXDl+8/yajyUsX6FUCct1S6x5PoP2h0
+lYfChdAdt/YxyCO4D+bRTT6UwcYQKR3XKgdnNE/qq1Xl74LGEC1BmAuHVbR
P7gVezQpEBhAxerLaxcQ0T/W5cFu/hgYQAwHO2L8g9A/EIZP46gqGEB9dsQm
FdfOP4bGasz9TRhAiOoWdpVzyj9yR6Gep5QYQAlung3gpsE/ga/EOxKZGEBQ
2dfb3xnBP5AX6Nh8nRhAGYTVc9qMwD+t5y4TUqYYQJGEElqB5b4/6Ie8h/y3
GEC2fC7wq3y6P17I13BR2xhA5KqVJpOpsT9tMPsNvN8YQCVsb0wUj7A/fJge
qybkGEC3krTMIOmuP5loZeX77BhALUqZnfV+qj/UCPNZpv4YQL1Fn7pDqqE/
43AW9xADGUAeKUo7EOqeP/LYOZR7BxlA7PRilY9/mj8PqYDOUBAZQIrW52d3
qpE/HhGka7sUGUCXEd8ixX+KPyx5xwgmGRlALKZ1YpOqgT874eqlkB0ZQB2f
bX+4qnE/SkkOQ/shGUCMmEbO4zWRPn23zw0=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$87618#3"]& ], {}}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 333, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-6.283185050723043, 6.283185050723043}, {-10., 10.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"Exsecant", "Excosecant", "Chord"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 
 TaggingRules->{},
 CellChangeTimes->{{3.865030736004533*^9, 3.865030807738484*^9}, {
   3.8650310747026043`*^9, 3.8650311006211157`*^9}, {3.865031139288311*^9, 
   3.8650312155962133`*^9}, {3.8650312590518703`*^9, 3.865031422071684*^9}, 
   3.865032375954486*^9, 3.871328940094701*^9, {3.871328989534295*^9, 
   3.871329004042273*^9}},
 CellLabel->"Out[74]=",
 CellID->1916991873,ExpressionUUID->"c29bfe22-e593-4d30-93ee-ccf17cd2387a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list3", "=", 
       RowBox[{"{", 
        RowBox[{
        "InverseHaversine", ",", "InverseHavercosine", ",", 
         "InverseHacoversine", ",", "InverseHacovercosine"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "x", "]"}], "&"}], "/@", "list3"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotLegends", "->", "list3"}], ",", 
       RowBox[{"ImageSize", "->", "333"}]}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list4", "=", 
       RowBox[{"{", 
        RowBox[{
        "InverseExsecant", ",", "InverseExcosecant", ",", "InverseChord"}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "=!=", "InverseChord"}], ",", 
            RowBox[{"#", "[", "x", "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"x", "+", "1"}], "]"}]}], "]"}], "&"}], "/@", "list4"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "6"}], ",", "4"}], "}"}], ",", 
       RowBox[{"PlotLegends", "->", "list4"}], ",", 
       RowBox[{"ImageSize", "->", "333"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.865030726567004*^9, 3.8650308063159113`*^9}, {
  3.86503100592686*^9, 3.865031214065455*^9}, {3.865031250848947*^9, 
  3.8650314209812403`*^9}, {3.865032373027768*^9, 3.8650323746600447`*^9}, {
  3.871327402095991*^9, 3.871327527773191*^9}, {3.8713275584221287`*^9, 
  3.8713275794678583`*^9}, {3.871327652931384*^9, 3.871327660296769*^9}, {
  3.8713276993301973`*^9, 3.871327815829206*^9}, {3.871327848990197*^9, 
  3.8713278502141037`*^9}, {3.871328996206896*^9, 3.871329019317833*^9}},
 CellLabel->"In[75]:=",
 CellID->1996264939,ExpressionUUID->"9f62b36d-0842-429f-aa70-0487386c393d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
5RhxUn0J+Q+75jlk
            "]]}, Annotation[#, "Charting`Private`Tag$93870#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
+vvkbcB/P1Y9bQ==
            "]]}, Annotation[#, "Charting`Private`Tag$93870#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtlns01HkDxt3SpCJUu0NYhaUob6nYZZ+1bEI3JZe0qGixbS3pQskSFrmt
5kUICYlcksuG+mqo6Ua5TSkZxiXC/Jr7ZBfbe877x3Oe8/nn+fNzHv3DJ/b6
K8jJySV/zv/ayX+8s2Vi/3cJo780v/jqE5TstH7j0C3Qm91pF5Uuw6b8rNw7
dHvQ5zsPqbvLMLLKIOqM0S4UOewZPWkig3P7q5qrdFdEz8wyZxVkMEjSKZ7X
84THBsWn9CEp/nE6knnIyBszz9JGQplSuPtJ76XT/ZD5pKebliRFm51WQ2vu
UaQ7NG07clIK8zU21SK9QOiusy7UOCgFjRtd6GZ0HJERiQM15lK82/CHXTI9
FKbXikjJsASM/C9bDL1OIVi7b4bfKYGTWpn1/dzT+HD2P3ItLRLU855vpvTC
4MlyrGnMlyClQsPYxegCCqOVZdsPS1CwYndcIj0GP4qPVq4Ui3GuPbPNrTEG
YyJjBI+L4RY7qLDGKxY/aoYq/PNWjCXi4Mim3DgYZ4e2X2kV42wP4+yUXgKK
a2XsVoYYLpffBO0ySkGKr9eTdBsxomh3vk6gM8DyYZeFFYqw1uHP+JrfGIj+
akVdTZYIXbEnJt6yGLhyy3alXKoIBoqm5etP/xfB4tnB3nMiPJotWt/TlYEy
2j2mr5sIS4QZm/WSrsBXuzY9W1WErHfhdnVzeRCrXhk4lSCE7SrPooH9+bCN
8rCNjxLiw4GtC2gV+chRK3QqDhNCdyrsSIVZARQWJBXMBQpxInCLoVx/ATwa
/VkmzkJo+FWVFlsWooNT/eB7NSE8PK9VfeQXod96aU36VQGot64qhVrFWFhR
Z7I2U4A4b5r/PrtihMfvjGelCXDnyAmtekYx/Cy76zRjBFA9bhN7bmsJvrB0
V/oYJMDD6L4DyhE3kDdryy+zEmDjLXXlVbQyZFZ7rXj2ho/F81EHHXSrwHp8
cbGXCR+GLrzx1ku1YEvqHGVDFM50WCFLdBfWSSol2XHT+KJWfUBenuCVsZKT
V8wk6rl2z19YM/FthzfH78IEmEFXtT2n2rDN7KritYL3EBvZqFX8ykLG1vsd
vbJRKHwqX6Zt+BQ3Q9xu138/gi3zvvX7Kp/jmUDb6J9aLp7HWHQ8WvsCEfVf
6sqsh6CXNvnpJu8lxiobzub7cjAp5Qz0mnfhcljpwO8p/Sj60PRUNaUbe/p4
9olpfVDVuUGNjPRAYVG7D62KjaTAuqMFBmzcYHhMrlXpgeT78pGAyFe438Be
Q9/SidCNbbUrW1/DtvdwhbtFOziVbZc69d9g0JIbOZnNwt9BPTkm4W9hZ0yG
xo2YWGe7cO5oUz8s9/3pdNa8EQ6F+j/f/mIAY0aFg5cSKnFGx2f10EEOFFI2
K1v4MWA6tX/xq52DMOm2zVU7fZloqn2ktc0MYhc3Nz3upyqiRHKq1uQOIZB+
OS2g/S75xaKpb5EzF6xpgXFCAJOUOx4uuC/h4r78yYmtfSwintRaNpYxjDwz
i0YnyXNSt89BkWE/gsmEQjOOQyeJ3B6bXzs2AldvfVr3VDfRf+f0+nrsKKoj
fhhxTmaTb7bGMOgbx6A80drfENJHDuq++CTfPYbaLyfYfpv6ifhpMve3qPdY
LfB25IBDspS8Q/cajIPhu3VP6IohojlQV6jQNo5ryfkuNclcsiAiytUqeAIa
0e+vLd80QuRueldxNT5g9mVvidmzURKSXZWswfwAK3+do8Ks9+Teunia+vFJ
/DmcqJJxeoKoO4WYRqtOIWF8Zonr7knSb/ayO6x5CimveV9/c3qaVOfBYMR7
Gvbl3N1/lVLkp6ot6jpz09Da/dc9fRqf1B+Qqb6U4yEo6JJn7VI+UVVuXHJR
kYewrIvhTpp80nLQhjZB48Gq5lJglC6frFaxn6/V5GHfYetOrc18MubnMr3D
hAdT0++eKRzhk+Nax56cd+WBf1f9w+gDPnn00Iy1wZ0H+21etZ9YfKIXTLVx
PXmwe5lsqtHBJy9ZIS3bfXhIVPq43+UNn2w8FdawPIgHkyEv7iIhn0hfxBXf
iuQho9QDJwwF5PfYa1H9ZTxcZlowQ1IEZOmZhU6HKnjgDLcFtTIEJDvgV42x
Kh4yf37CpucIyB1nq+tULQ+jIrrN6xsCMqbe2aZAPvN4hfnVBwLinCdHM+n+
vB89tNtDIiArG3xSTv3Ng6SPPbreX0iulz50m5nlIcfw0jHfY0Jinr1OL1KO
wnbRzbLsk0LiGCGtil9AoXcZr9skWkjO26V25qhRaKCnN9bnCwn3xf3lzDUU
PKRClYp+IakY18lR3UGhxFTnsbePiMRfjfUd2EWh9SurzPkAEfHbO21Y6UIh
kvRm3wkRkVXNzdU73Skoqq82co8TkcRUr0dJhylEXHj8ILtSRAK2XOGrhFFw
PmXAzFUUE/tJuYY35yi826laXq8qJnoFAefLLlAIGz0RxqOLCXuR5UKnGAq5
OuceNZmLyY/v2KsSUik8gUv4lI+YrI5Zvn1hCYVHN0+6DT8UkznL80tflVKo
2iYffa5bTPqmh7tKyikYHXh/03lITNLc7/y07TaFrgnPmPxZMZlfu/dkbDOF
t1s8N522kpA3nLuW+wmFXdp/CMwcJaSeoT9nwKQQEM4KsfGUkONzH+PbWBQc
A39tPh8uIf2dqXmK3RTkPoUOH2RKyF9x0iPdvRS0E5JGqnslhPGtj8n11xRS
c3K55RMS4ly8vvaHAQq72y8mDmtKidGBjDCNz95NHlHJ27NWShTU5r7jDlPQ
NerRfmwrJY1n259ETVBYr6PcExcqJRlmm1NdpigYyy2DY5qUBHNzXfUpCmyl
ZW+1KqVkR6aSFp9PwSaVHxbXISXGO45xWkQU3n/TZXZIICVK8j1FaVIKjWu6
StW1ZWSw7tsg3xkK8mX+B/Y5y0hz0PUN5rMUmtR/VrNIlJFMvcXi+XkK//8v
5F8lmqq7
            "]]}, Annotation[#, "Charting`Private`Tag$93870#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
5SKjOw==
            "]]}, Annotation[#, "Charting`Private`Tag$93870#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 333, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-1.5705106125081747`, 3.1413069393030715`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "InverseHaversine", "InverseHavercosine", "InverseHacoversine", 
         "InverseHacovercosine"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAfedN8v//F8BmFMprvlr8P+Z7FvXb
/BfA7rtQy0Fb/D9OEN/3t/kXwMBbA1XFW/w/IDlw/W/zF8AHbD7nzFz8P8KK
kgjg5hfAUhNMCd5e/D8ILtcewM0XwIP+81UIY/w/lHRgS4CbF8Axu76lfWv8
P6sBc6QANxfAM26p8O98/D8FZUcyGV0WwB5CNntjpfw/E9jFbKKRFcABr3lH
ys78P1LDmmMpyhTAJVjLNUv7/D+99x42yPETwETO8/OkMP0/3DtNtdcnE8BR
R0M0/mf9PyfJKhD/TBLAxMDjHiWr/T+jzl4nJHYRwAwa5c++9f0/0+M867mt
EMCaI7vgsUT+P16ElBXPqA/ALOD70NGm/j9+YAOuCxMOwHZe1yT/EP8/AC0f
v0OFDMCPY19mUIr/P3wWQV6FfgzA3BYGDouM/z/3/2L9xncMwJ87jk/Hjv8/
7tKmO0pqDMBAeGenRJP/P9t4LrhQTwzAkKTY3FKc/z+2xD2xXRkMwCr91fy+
rv8/bVxco3etC8Dj5kee49T/P9qLmYer1QrAlaj9zGoTAEDTxSCsYM8KwMnQ
1kesFABAzP+n0BXJCsCtOd6x7hUAQL5zthmAvArAlpDRV3YYAECiW9OrVKMK
wBCzIQqRHQBAaisN0P1wCsBMPRgF9ScAQPvKgBhQDArA1FNSnn89AEAcCmip
9EIJwBipa6voawBAXr7MjCI8CcBr182qkG0AQKFyMXBQNQnArrmJKDpvAEAm
2/o2rCcJwMyZk6eRcgBAL6yNxGMMCcATHYPwUnkAQEJOs9/S1QjAky76oCCH
AEBpkv4VsWgIwBFWOQ75owBArEZj+d5hCMD8zBVQ1aUAQO76x9wMWwjALEZ7
XbOnAEByY5GjaE0IwN2/6uV0qwBAfDQkMSAyCMDtivD7DbMAQLI+NNaHBgjA
CLtpf3C/AEBAyleA
            "]], 
           LineBox[CompressedData["
1:eJwVj3s41HkYxb+/+2hJpAtqK2OL0GpLhHgr3VBPpbB0W7mkMuRSqkmhpSvV
kpJ0IVrCk7VSRr3VmgmblUtNk+SSR+EZqaRZqbV/nOc855/POWeaX+jaAJoQ
4jmi/33V/RrzaI2AueEpMpuHBEqNUuNCkgTssIreP7eDwJ24Zo/yRAFnacKm
LO0kcLdb/INWrIBXfG+++rmLgPxOsSI7QsAj/a0PEnsIPPWp0272FvDkvhu7
hz8QGEj/Ls1VLGDbY49KD46CucZx+TPKePwt2G+HwpwCu/gqadRNHm1D5n8U
W1Lg2DNm1cM8Hq/RaYbxsyhwKb/0btNFHmPcC91XzKFgnW+Fzdk4HpMz9qgG
HCmIuPD5HruSxwf7m/saVlNQbBza2NbG4fIJ1rKqfSN9jcYWWS84lLUEVK47
QMGfJx7F+jdxyKgyCtoPUlA2PO3HrkccLuwJsxZ+peDuq8ajvUUcvlxw7lxE
MgU1WfbOgwc49J9+uLclm4LXFnyethGHlhsdOmfWUxD4upjUjuVw+Eaf7+Qm
CroyNnsl63DY4tcrHaukoFvnNqtPcZg0c0PzqBYK3vXt2DzhDYvTPl7snd5N
wfAfTwxMSlmkxjXEGjM0jHe8eNB2LYvx2rcqbOxoaJPMSN3lxiJIHYs1DjTc
uHIzL9+FRfcZul4PnWlYJMibptiyeOHKX71By2iQ1KstRJNYPHpM8mHQk4bK
baBUdjKY4tqSsnAPDZGpHdb79jLosCDddUhGg/OjkKUl4Qw2kg3DZ+/TMGpo
0Fe9g8ElZvMr7eU0XN6inei3iUGI2atJ/4eGvy1sXrouZtBf9bQB22kQP0g4
aqzDoNFVhU75KAbq1ebtsss0GizmhTV+DBiFGx7Ynk6jjUmftyKIga0DookT
U2isWPk0YXkIAx+HulZGJNJYNM/KcGc0A+O1cm6bS2g8c8gHHZMZ8BWbnD7r
QKNhWkmP5T0GsnP0LF1saOxPDHYMrGSg15xS9M+iUVWtiiyoYSDGuvWLuwmN
FpemJwcqGbi8IHMbo0Xj0uSg4GPvGXjtZQRhTyn8ov/Y7Jk5C5YvtF5MrqPw
a41ole5sFqI2aaJqqiisvfr9GB87FvgAZf70Cgq3dNf1my1jwSz87ISXWRS6
PBjIuBXAQsgJ/b4VuyhMUW6UULkslOrSxwa3U7hOWupxvoiFr2f6Ta/5U9go
f9jiVsbCqfN1PsSbwojV1YVMNQvFOUnyUicKRXo5sQ1qFj7hqEyx9sge05CX
95w4OHL32eAKboRX/Gn8alcOjGTZa8K+Epy993muvicHTrecuIp3BOUli5/M
k3CQUBC+07OJoNikJsXhCgcT853l0lqC9d+2m2cWcpB3XXtqloKgQatO5DIZ
B7VZOQ19twk+kWjOS5UcjEtX2R/NJJiUpPj61oCHnLTclKI0gg0L3t3SmPJg
lxqpbjpFMPf5rq49NjxsODX6qkk8wTKdk/avvHhQn3wxtFw6wlcGFKuCeTh0
/Pr60CiCH/WeFwRLechOWKQlCyJIJSe92Z3Fw7zDulvbtxBUlXp0G5Tx8Ci2
WSbyGflHc6LExzz0SneHrXcnGMDElLgP8RCzb3H1/iUEx1st1LSOFWBM9BjT
q04Ed/e3l9daCTA3Iu+Z2prg5roTBwsCBZCH7Zk9bibBRMzxW50ggLfE5biD
mGBtTeCc6usCdO/Q6/xlEsFMW5e3n2sFkAa3OB0ZR5BMa690+1eA0UH55wpH
E/yw9rTdfisRXPaPft8oEPy9o15tFiqCn/yWuA8RgtahVeWp7SLob3uudhvJ
d56NVUz9JoL/AAqqZj0=
            "]], 
           LineBox[CompressedData["
1:eJwVkHk0FAgAhydUrsraiGhVqhGdJi2in2ZFxq523KXXgbFppdxn6yZnjhXF
2nLU5HjKsa5oyjM5IvcRMTNGw4w5lMpui23/+N737/e+Ha7XbGlSBALB9iv/
W4fgmr4rcDs8123ecc04Hfs9t5r9rEiDpGvKata+ClROyBsTuSAsLxrU26o2
Yd0pv04dZhS45A+nb3czMF3wiFi9/iZGHHJJTjGtYHycijW1SoOpNiHnE6sN
p/coLLidzATH6ReZHEI7WqgPtPZ6ZMPv2uXV0IUO7LtxwkYUn4uiCT/t4OYu
5NEnwqsf5uH4opKF46/dkB8MKgtuL8DD+KQnK6s98Fdxil0TV4hdCjXvX3/s
hV5ZsYa7SjGSNvh6vy3qA8fsfRWzpARTpNGLJZR+UL1S2clMOtKZSqo/xg1A
Vmo8WORYCtnDQXSHrYNg5OgoUXll+IfAOh9WOogDra3HVWUr4RAtrVjYPIR1
G5Z/6i2uQneGyeb7dSPgjBTdWXO1GpQRnwqzA6NoLqTM6BvUILu3tFGtcBT+
hrnh2W210DCZqVaMHsO0G6ns7Lt6fJI3S07eMw5Go6fsDPEZLhMpoyzVSRgW
HDKJIDAgnUhOOhUwCaUL+xYVrjLgYP6br3r/JBgsbffdFs/hRjUw10+YghZX
2dx56QVeRfyh7HydhUm+RLrlHBOuqYJBjQo2/iqbb6J0MMHsuGTn3M9Gmtes
34jBS9j/NjK29TMbpqKpacnGdlxfojOOg4P8hZ5W7ecdCDxqO2fXyYHLUnlM
4u5uXPk9OoPXPQ39Bvox1cxumAzdt2XOT0M+tPhD4Uo3ci2tGqgKXDR+yXN7
OtKD5vNPqQGWXKRGtN3/bN4LW2lWhuZTLuaja6J0P/eBrCWy0M2dQVli5ol0
lyFIgvq8rbR50H1H8zVOG4IHRdq30ZAHOtmoiMsYApVBVJWy4eHBlykZoz3D
mHitlLAlmIfCq/vb2ZJhTMqOW17p5OEutd2GFD+KCZcby1qXZ5GkvuIy/Hgc
D9SWA4eT5iAX2JcSOT0O14KgQpn8OdzsL27WVZ2ApLR87ZaKOcQnW2tFhE1A
eYBQMdczh+jlXA7R4i1uvYzqtPmGj1A2yTNkfBI6XRcLHTP4qB08cmyjNBtB
dJKbWqQAoupv86c12FAmN2fJpgmgk/X+3/ojbJwNuhA3kyf42ve4xc2DjYZY
uYsedQJE9uiRGzrYGLCnN98UCkBp32nlns7BUCY5zd9xHqwmJafGbVyUCR4Z
LGgIoZ4nrrt1lIvlHKMYJlEI29AeNdppLmp/iDBIJQnRZpjyZlMUFxZ/tkFM
EaK0dv15GpcLbacFTbkQIQIqV9yVymZgKYr0Ke8XQr5o3tfj6+dXqdsCaeEi
fHfHYdTZjgc9jTrjkAQR9G+1mFp787BXvSs+IlOEM2HpsoeKefCJP77dnS4C
3e5Iwd+bZhERU0NKHxDBUia8I4U3C60wQmciUYxYmsL26tt8ZNWHxRczxch1
8Y8recJH+eHkye97xSinvuXnvOKDeO5eNmNMjEHTytpwKQE8bbq8qubF0Fa1
s7bwFqBIbjNXUU6CF8y7gWMn53E3ZcQnZr8Eq0Td7tVFIYTb9Jp4vhJoTixr
7tooQqz6F1pvoATG6X1ep4giZCVN2deGSuC/FKyYcUYEcv49Ff9oCfjtL613
toiQrBLwrC1DgkFPWqd5ghiBw5d8WiolMFp78CFrRgyO/4WDyc0S/AdukJeF

            "]], 
           LineBox[CompressedData["
1:eJwVj30s1HEcx48pdx7uO6KhhGVHRESXh/h8p05RGirtWGqX8nilkq41KT14
FhVKWdgSd8raoqGleYg8zfOZaijncii/H9/zuK7rj/fee/3zfrASXAw+p8lg
MJzV+u9nk6KqkP48WE6+qzRunQdxoe4Ey4KGEr8JjfFgCjhJHpninTSkbKlQ
+oRQUCaI3nPYgwa3gtCRMj4FRQ5t6VknaPhbrZPAP0NBRnPKbpRFwxMcc69M
SEH0n5U7Ris0vO3lNLxKpcD24C+OxcACVHvn2RfVUVCubIlzTSWgmzg9JjOm
wcZzh97vRwTWkwVpV0xoqEjOlrwqISD1+s5TmdFQyQxRmNUTsA3sZhpY0lBl
Jo/UmCPAFdydNbdT93izzvYEK2Ev0xGNedHw4X4AP2rbEvDlRs76ETT0bx7m
Pa9ZBr+JtEspEhrcQ7Id9AfXIKarJifQZgGo+NTybVwVCHb2ZXY+XQBheVwt
d5cGZrFFH2bIAuho7hU4yjSxXV8ST35kEfYLj+fbPdLCQbmChHeFi7C5zvwi
z3ojvsX43l05tAi5l9PynKTa+PwpA+saAwJlei9CPYQsbCMLtzA6QCC4lik5
tKaDb+o7ZcviCYi7Nx2wkehhxfq65dZiAkWtHXesvdn4seh9enMTgU+so5Q9
j41VQSJRRDMBWUBfuMsRNs5XdtltaCHgNCx19wllY5en9aO8VgKfpyb/nE5k
429hZ2Jb2gjQ2qqwZ2/Y+JCfv7C2i4C/v4uroQXCPnzj0QvDBOJzaktNOQgz
zNtvMKUE8vvdkZUDwlopHFmpmsdDsWKXJ8KzUgEaHCGQGBtQEnASYZG3V+ue
r+p/WZF66Q8Qbo/17/s9RqC9V3E9twDhmIfb1++OE5gzuiAvLEa4oyJ33myC
gFtxQlO5BOEKcTHX9weBnte3RS1t6vzIRo+iSQKLlNZUZw/CjbpXaxxlBEy5
accGhhBWJopXm9Qc8THH8cdPhLcsMWWKKQIZmobPpxUIf2HEZdyUE6j2zWdR
FMLJDU2rBr8IDGaYXFteRnhmdgf3pZpXe55NqlTqPbyP+9ymCfwDD0uC7A==

            "]]}, Annotation[#, "Charting`Private`Tag$93974#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAfedN8v//F8BuOi+8GMbJv+Z7FvXb
/BfAsnZkuDPKyb9OEN/3t/kXwDx1+QVQzsm/IDlw/W/zF8B199GXjNbJv8KK
kgjg5hfAzzE/qBXnyb8ILtcewM0XwFeLfg1oCMq/lHRgS4CbF8DGcNSLEkzK
v6sBc6QANxfA1Qgq46TXyr8FZUcyGV0WwC+okDdBG8y/E9jFbKKRFcBLD6yZ
d2bNv1LDmmMpyhTAaVg5DH/Kzr+99x42yPETwLCEvn6mOtC/3DtNtdcnE8Dl
aPx/CxjRvyfJKhD/TBLAsE5+Kqck0r+jzl4nJHYRwNGzg+4NT9O/0+M867mt
EMAK2tsx2orUv16ElBXPqA/AUcze8lkT1r9+YAOuCxMOwHnFTEIPvNe/AC0f
v0OFDMDb2WxIVKHZv3wWQV6FfgzAEacH5z6q2b/3/2L9xncMwBw6KO0vs9m/
7tKmO0pqDMChLI1MJcXZv9t4LrhQTwzA4d1RIl7p2b+2xD2xXRkMwElAR6IO
M9q/bVxco3etC8Aq5w4oocvav9qLmYer1QrARJDcFmkT3L/TxSCsYM8KwOfR
pe10Hdy/zP+n0BXJCsAGGeE9iCfcv75zthmAvArATNB7bcU73L+iW9OrVKMK
wB7k/P+aZNy/aisN0P1wCsD7NbHXurfcv/vKgBhQDArAPOqBoQ9k3b8cCmip
9EIJwGCUTApY196/Xr7MjCI8CcD4Bl4FmOTev6FyMXBQNQnAEhk98+Px3r8m
2/o2rCcJwAEajOufDN+/L6yNxGMMCcA2NAgzqkLfv0JOs9/S1QjAOMDAthex
379pkv4VsWgIwBX+XJDtS+C/rEZj+d5hCMC+2c6XXlPgv+76x9wMWwjAgL5k
zdZa4L9yY5GjaE0IwEKlIu/caeC/fDQkMSAyCMCC0TlHQYjgv7I+NNaHBgjA
8JEeVcu54L+9eXEY
            "]], 
           LineBox[CompressedData["
1:eJwVj3k41Akcxn8z5mgskSKhXZkKkehRlNDjytVUbFIkkQ5XjnSRUOuqpHIs
i2ykmC1RKQbfb/WYtPYRMoylMuMYV2OGcSW19o/3eZ/PH+/ned41fqfdAsgE
QXgs5v9mvWrSPz9Hx+Cwd069jb1QpZGZEJJGR+/DnvbdjgKoSehx5yTRMTHV
grdmnwDqR5jrGPF03L/CsiPsoAC4NZVviyPpOB4076cXKICOQy0KPZ50JKfr
b/5xTQBTuT9lOzPp6P6RG+zZKgBTzQS27ksaariSqLr+QjC/8i4mqoKGjw4d
1ssJFsKOUWXWmzIa+j35UKd6Vgh2nLsSn3wacjuNU41ShPCrV92WrAQayqt7
vOotF0LkH7NA2U1Dfsaw2sEfQqjUPN0uEFBRSjZ3NH7QB6btmgZF3VSs11YK
8a7og+fXG+OP8ajYrTiqmMHpg5cLazaJGqnY7maxan1LH9R/bk8ZK6eifT6/
unOuD5qKtlvPXKKir3Uy47c9/dBvQCtT0KDiZY2AsWeUATjeX0k0L6fim4Nb
38YqD4Ao78iBm4pU3GWi73JAawBGFKspKiQq0vcONZqaDoBkPOjIyiEKup0d
Z9w/NgALT1tX6FRRsH3ujc+5xgFQ25F/2cyNgt2d7qzevEEQhOpmhrtQ8H3W
KW0JexD++rOijG1HwR82z56qcQbBhs7l/WJGQUvDVPnSrkEIbRMbLNGioOy9
ybrhlSJoOLmTzx+QQ50WSZlSjgjOZPYZX7wgh5zc3vjp8iGwbgxxeBYhhz+X
ilwDXg+B/PyMlzhIDgUO3sGy9iEo9FVI8vORw+aCw5ZRX4fgH4MtH51t5dBH
6UOJwq5hYL5OTNFUlMOtRllpU4PD0CbWF9YWklG7Mj1yt/0oaESsuhSYS8Zi
I1POeq9R8J9aoq6eQcaGnpYIg/BRkM2LdkcmkTE1zrC2On8U1Bgl1fqhZFR7
KPD8NjsKXkydW1kWZDQlO9PqXo5BcckyQ7stZLzdsNrpXusYjOmT3kqNyGje
KtwAI2MQa9z7zVWHjNE6KhlFq79AoWXBSTkGGUVC1YXNiV+g/4DGzrAOEtZL
2V8D/MVg2M3oXt1CQi4v96ZDnBiifOaimt6RkGYykR2eLwZaAJ+9vo6ErD2c
nx/xxaAXkbXyYxEJex+zmkRu4xByXWXcKZyEylfPJdMNJVClRE6dCSRhepOe
u5mlBL7flq69f4yEN31tT+WxJJCe03KI8CRhc+RehkKEBCpL0rhVViScldHL
2RwJTKN8AVOBhP1aWcevekkhub5zxom6uDcr7SqOkIJGbfG+sO8EujSEzuun
SsHqhRW1TkJg5A5bVkSNFBIfRQR78AjcuNKNF609Aepsa25MM4HX225932kx
AWUPFbSL3hKodKfzzh2PCWguKvkwXk1gypPHnxfSJkA199/tKQUEUiTOpXz6
JJRkP8gozyYwjZWnOas7CeaZZ8S8dAK3Jt69KHOcBO/0pfd0rhDoKeZpv7kx
CeIb3fOOMYv+K0nKNRWTEHft4f7TUQS+nw6h8zsmoTjRhlF7gsBhCT9mYq0M
tl5V8hf6Epi30z/OiCWDxvie2iWHFv91NnBULshgLOZs2H5XAp92vVhR0C6D
2Iu2f0fbE7h8o1UBlzoFyueV196zIpD3PJ55b9sUmEaWdYqNCbwfySs7wp4C
btg5E9UNBE67M8Lvj0yBZ6jdNQsmgVcCU1RyNk3DSNCygaNaBDJt7GKno6ch
5tQnq2RVAkUr4szy2qZh6Qn274+XEth8/pPWvPkMFB47P9FOJ3B77tEUj9oZ
2Oxn7zpPEOhYwWIaF82CVNAldllk74S+bQ49s/Af7pTSjQ==
            "]], 
           LineBox[CompressedData["
1:eJwVknk0FAgAh0Vui7TZDuuMmXQxYan0I0eOlkWOVrU2xq4ybWVyFBWJQpFe
IdbbGFGTJ6SiHJE7ZHPFNOY002AMRvQcbfvH733/fu97P4Pjf3mTZWVkZLy/
7X8SZY5nbI7Ux1dGfdYa9gK2h220+0WNjMNmD3oeL83DixMzvFc5Cm1dDcS7
p+eh4BLRQWyJx6s3TikuSvPg5j8kVCpew1HDXkpG+Wc0zI0m2rreRDkxJJ5B
/gxPE9XpYKdM6Ox/HiE0+Iw6rwd6W0LvwFTPX9rJncO2OHsPcVI2Esv7PQ8+
mkNuCSO2sjgXt9QTUjOoc1Dpi6JHt+XDgaF1cdF+DtR1/omrrhbA0zTLP5kn
xVY6bVPIOhqePSxekKuWgmM3U9FSVAQDffUlr3QpvMJvsFNbSkBdrPcosZNC
SXYkWuz3CANBJiLyJikasoiaXgI6hrelxR6Zn8WOpqZ92kpluHLQoTezYhYK
3y3//I5WgSIlS421FrPgDBbmrKJUwvm5gHhSexa1BW58kuVTzEbnGJ/7MgOq
dXbsneYqaDHdCNGvZ8AN3kX/dewFAk2pZwICZtBQE6bEJ9RjX6G5rkPeNKzz
zfZekmnAUEql+cPEaWj+tk2qSmmAXB5tnkqZRgPLKMTY+TXqh6yadthNQ4+n
5Riw0AgSZc6t55METJFEru5IC/4I7Q6juEvwjD7x0q29BZYut017rCW4GS6M
GLRshZgSIKCYSGArHuVK1NvAejI1GygrQd50d5PR63bUGFnVF8RMIXDh8ZXr
xl1obZb/QSNSDFJ1yR7tzC7MJY75mvmLoXKeNluw0oVsLUzRrMWoWcwNfjXY
/a1vp1/80iRuXGq+P+/4Dky/Eu3h5ElMJDyNN53vhXj3vd/f0idAv55pnxHY
DzvOM5tS/XGYjpHP7r7Zjw6Nq1Z7VcdRst+mkNfQj9GcoEzpnAgPFkdX25gM
wDclymC0U4QCyvY2tmQAPl6lQWkxItzzavPYlTSEQysq9IGRT0jZsBI48GQE
qfap5vrVQihH9qZd5o6g56WmwkyxENf+pdWaajNgXzZSMHpXiKRUd71LFxjQ
TU5eVDsnRMJyNofg/BEFmQrMYpIQ59m7wmJGmFBOJyj8UyFAVZ/FHnU5NqrL
Dzkxm8Ygrlybx93Eht76zu/FVWMg3p5ZemHBxiCHaLSmZOyb35O64FA2ovov
umSkjeFy99b91e1sHJVniSh+Y3BrM3QNyeAgsNVpY8IkH6yXmv41P/KQdIp5
Vp7Ix4bcqefpVjxYNHoYm+nw4X2+ez3Zk4dYbeWIME0+mq3ThjXieRivafxT
8QsPj6oUj5F5PKjLZaVOdvBwrmwlRJPOx6eTij+5neFBpXDibKi1AOS3J0i3
WrnQzfEdCvARQAG9lLhXXJDS62zdTwmgZF9rEFXOxeELGUpmNAHq37tey8zl
osTHIv+LhhDlA++poae5OLA6tj1NIMSa0WRmuA4XiWRV/cq7Ivx9X83QO46D
7EDq1aJyERKJy+11ERw89vooynorgvKKQMvqBAd9tmVVsbLjaFWt3ePoz4GR
to+786lxjDsHsRjmHDS23Iv84DSBFbsPb6aEbHwlmHZ9lU7CX5dEIhxjQ4ex
rLNZXYwthEyGrx8buzN6w10I337q1L6S6sEGdSFa7dZhMUoNDsSpgw1RW6u7
YZ0YG3fmbzmpz0ZfGLnDMXkKDqVvmmN4LNjI7yxm8acQfrrdldXGwn8pLps7

            "]], 
           LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAY31orA8N8D/wkR5Vy7ngP6qXC+EJ
H/I/4I2LSW083z8mfTqLqizyP1hGcHbhLt8/omJpNUs68j+DW6bvYSHfP5ot
x4mMVfI/a/TlgIcG3z+Kw4IyD4zyPwGyZztj0d4/ae/5gxT58j+fcXVkTmne
PyhH6CYf0/M/pbnLooSh3T+m9sRsNIf1PzXcatFVMNw/JzspDO6T9T9xtIYv
HybcP6h/jaunoPU/Bb2bOfAb3D+pCFbqGrr1P8Nz2y2pB9w/rBrnZwHt9T+L
K/+edd/bP7E+CWPOUvY/hZNYFHGQ2z+8hk1ZaB73P/wWvYy499o/0hbWRZy1
+D88L+2K49nZPzlWjS0N1Ps/uII5Fqvq1z/xcIemHjb/P9gCzCG/INY/baZs
tjYvAUA9fDBfPrDUPwoCN2Iu5QJAum8ZO1BU0z9DbVSVKpMEQB1zhn8bKdI/
Frkdb0UkBkBispwZRjHRP5ByiJEw1wdAxj7LwBhB0D+iDJ9aOm0JQIk/Kqc5
784/UrYIq0j7CkDU/KA4rojNP6rNE0QnqwxAcYE5mvkmzD+axcqDJD4OQB6k
ZVS++co/wAlO8StFDkDK2F7etvTKP+VN0V4zTA5AGrS5S7Hvyj8w1tc5QloO
QCufTMyr5co/xubk7192DkDciR5Ht9HKP/IH/1ubrg5AhB7PNyeqyj9KSjM0
Eh8PQLGedtFjXMo/cI62oRkmD0DBgODDllfKP5XSOQ8hLQ9AoVjteMtSyj/g
WkDqLzsPQF+pCic6Sco/dmtNoE1XD0AEdTd4LDbKP6KMZwyJjw9AgArOF2QQ
yj/I0Op5kJYPQHTVBMGyC8o/7RRu55edD0ByIpwdAwfKPziddMKmqw9AgRM0
7aj9yT/OrYF4xMcPQF8pJswI68k/9PEE5svOD0DFCnn2ZObJPxk2iFPT1Q9A
E7HNzMLhyT9kvo4u4uMPQOav2XmD2Mk/igISnOnqD0B2YsFO5tPJP69GlQnx
8Q9AyIwLzErPyT/Uihh3+PgPQGkB0vCwysk/+s6b5P//D0BuOi+8GMbJP+y4
deo=
            "]]}, Annotation[#, "Charting`Private`Tag$93974#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAY2FIRf7/B8Dsl8TtihoJwJDWSUyP
+wfAo5WSXT5jCMDSiq4vvfQHwEdW5Gkv8gfAFT8TE+vtB8BT6GEY+KAHwFjz
d/YY5wfAga5ccxZeB8Cap9zZRuAHwCsSEP7eIwfA3FtBvXTZB8BybGMpn+8G
wB4QpqCi0gfAsuImBs6/BsCjeG9n/sQHwNxlU8TjaQbA5izUSiy+B8DeQ6i1
p0IGwCjhOC5atwfAtlxs32MdBsCsSQL1takHwN5QGYC81wXAthqVgm2OB8AL
J6vMLFsFwLqC3FO7hwfAbQlrDfI+BcC+6iMlCYEHwAUBLOt6IwXAxrqyx6Rz
B8BIuwnum+4EwNZa0AzcWAfAV5nG1tSLBMD1mguXSiMHwNHsdts72wPA+AJT
aJgcB8Ccl5bOtMYDwPxqmjnmFQfAgjMgZXiyA8AEOyncgQgHwBtqKNrSigPA
FNtGIbntBsBdZBvMhz4DwDQbgqsnuAbAHHRoXwmwAsA4g8l8dbEGwK/fsMcJ
nwLAPOsQTsOqBsAgy/uvM44CwES7n/BenQbAPZooHv9sAsBUW701loIGwPl8
W1xVLALAc5v4vwRNBsBsEzDqLLEBwLIbb9Th4QXAyoZQlaTOAMA01Bsro9sF
wAeXza4dwgDAtYzIgWTVBcAZRTSwp7UAwLj9IS/nyAXA04ojQO2cAMC+39SJ
7K8FwHK9C9s2bADAy6M6P/d9BcC+n4gNjA0AwOQrBqoMGgXAOswTBpWz/r8W
PJ1/N1IEwPmW66dlIPy/4W4nlXFLBMCEB3lIMgv8v6yhsaqrRATAWGZKuQ/2
+79CB8bVHzcEwDLsA0n8y/u/btLuKwgcBMAgH8r8lnj7v8VoQNjY5QPA4PMG
IazU+r90leMwenkDwOG3kAxEl/m/0u4p4rygAsAVdWBfUz/3v/bACp4jDAHA
98/lgVo787+yPjTWhwYAwD/1oTdp0PC/Ml9jCQ==
            "]], 
           
           LineBox[{{-1.996811224489796, -1.043517423134043}, \
{-1.7066879064798635`, -0.7222864708582846}, {-1.5106187050385615`, \
-0.516335291492791}, {-1.2980389526916485`, -0.29915320592378214`}, \
{-1.0995608943370834`, -0.09960206045091331}, {-1.003188775510204, \
-0.0031887768612218915`}}], 
           
           LineBox[{{-0.9968112244897959, 
            0.0031887768612220025`}, {-0.693889451441732, 
            0.30731847937423673`}, {-0.4969001485335987, 
            0.5085626863686037}, {-0.2834002947198543, 
            0.7328924045615419}, {-0.07379805326580482, 
            0.9629815535893969}, {-0.0031887755102040817`, 
            1.043517423134043}}], 
           LineBox[CompressedData["
1:eJwBMQTO+yFib1JlAgAAAEIAAAACAAAAiMb60Fgfaj8+9aE3adDwP6uJkkGQ
W9U/zl4A1ARc9z8q5mVyOo7VPy7arDQIbfc/qEI5o+TA1T8vIx26E373P6b7
3wQ5JtY/SYvidUOg9z+ibS3I4fDWP2+tNY4H5fc/mlHITjOG2D9+8ATaMXD4
P4oZ/lvWsNs/I3n1xZeN+T+11DQ7DgPhP5sR7Ibm6fs/7rMTnOMb4T8dgVqE
PP37PyiT8vy4NOE/5z3/hqAQ/D+aUbC+Y2bhP6V89TOTN/w/gM4rQrnJ4T++
+7R4J4b8P0rIIklkkOI/3qH9UjAm/T/guxBXuh3kP3gsd+ESc/4/GZvvt482
5D86mZJzgYj+P1J6zhhlT+Q/DgPvWASe/j/FOIzaD4HkP3JSNC9Iyf4/qrUH
XmXk5D/EK/PYzyD/P3Wv/mQQq+U/jBt/7SLU/z8Ko+xyZjjnP6dHpnYvpwBA
HplV2FhT5z/BYv6OjLQAQDKPvj1Lbuc/JVXe9PzBAEBZe5AIMKTnPw8HJCUZ
3QBAqFM0nvkP6D+PBNgnShQBQEcEfMmM5+g/q9U/7vKGAUBa+uQufwLpPzkD
PJK4lQFAbvBNlHEd6T+VkeQimaQBQJbcH19WU+k/Dg2Smq3CAUDmtMP0H7/p
P2OxtU03AAJAhGULILOW6j9v2bGkg4ECQJhbdIWlseo/1GmtKFWSAkCsUd3q
l8zqPyJuUrtPowJA1D2vtXwC6z8bcII2xcUCQCMWU0tGbus/NoyrqtkMA0A2
DLywOInrP9r/vWgbHwNASgIlFiuk6z80BNGSkjEDQHLu9uAP2us/cShAMClX
A0DCxpp22UXsP3px2kI3pQNA1rwD3Mtg7D/iCbFoY7kDQOqybEG+e+w/5ahY
8djNA0ARnz4Mo7HsPz1Km9ut9wNAYHfioWwd7T9Vu0NTb08EQHRtSwdfOO0/
RBngh1VmBECIY7RsUVPtPyVNqk6pfQRAsE+GNzaJ7T8Fee+ctK0EQP8nKs3/
9O0/h0VlM0QUBUAc3P0cJA7uP9iEYLGlLQVAOpDRbEgn7j+mE0LUqkcFQHT4
eAyRWe4/LtnsMtd9BUCSrExctXLuP25MlisfmgVAr2AgrNmL7j+OZBwvTbcF
QOrIx0sivu4/b3cCJr/0BUAHfZubRtfuP5UtOkVBFQZAJDFv62rw7j8mJuO6
KDcGQELlQjuPCe8/PRE5n6haBkBfmRaLsyLvPxU8p3oBgAZAfE3q2tc77z8D
WEnPhqcGQJoBvir8VO8/BmZT96fRBkC3tZF6IG7vPyaUfC7//gZA1GllykSH
7z8Ky2AAbTAHQPIdORppoO8/E9IBfU9nB0AP0gxqjbnvPz136f8BpgdALIbg
ubHS7z+e5GGiTfEHQEo6tAnW6+8/ti/nWr9WCEAwl10W8//vP+b89GrRFwlA
hN7wVg==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$93974#3"]& ], {}}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 333, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-6, 4}, {-3.137960298120552, 3.136629901505887}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"InverseExsecant", "InverseExcosecant", "InverseChord"}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 
 TaggingRules->{},
 CellChangeTimes->{{3.8713274481838093`*^9, 3.871327528846322*^9}, {
   3.871327559790429*^9, 3.871327580504776*^9}, {3.8713276544998817`*^9, 
   3.87132766151071*^9}, 3.8713277107374573`*^9, {3.8713277409922447`*^9, 
   3.871327816922791*^9}, 3.871327851277025*^9, 3.871329020208823*^9},
 CellLabel->"Out[75]=",
 CellID->272948179,ExpressionUUID->"8f3550f4-d075-4173-91d3-a8f6d35c15aa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "3e66bba2-8919-40dd-8200-1b33fa0c6425"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"49326afc-284e-489e-b2c6-8400320179cc"],

Cell["Plot over a subset of the complexes:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.865824512984277*^9, 3.865824514408969*^9}, {
  3.866078312479147*^9, 3.866078313883165*^9}},
 CellID->1623218397,ExpressionUUID->"19cb6161-ff9f-453e-94f9-940f602a134c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComplexPlot3D", "[", 
    RowBox[{
     RowBox[{"#", "[", "z", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "-", 
        RowBox[{"2", " ", "I"}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]"}], "+", 
        RowBox[{"2", " ", "I"}]}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", "None"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "Versine", ",", "Exsecant", ",", "Chord", ",", "InverseCoversine", ",", 
    "InverseExcosecant", ",", "InverseChord"}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.865824519214919*^9, 3.865824521504798*^9}, {
  3.8660783225792913`*^9, 3.866078326583598*^9}, {3.871327925514717*^9, 
  3.871328002023896*^9}},
 CellLabel->"In[76]:=",
 CellID->1946830538,ExpressionUUID->"86f7b129-56ff-460b-a156-9392a25b2457"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
No7A9+WjW9bfXlP76OUgHZSpfcUoLrEsnKgxwMW/l69/z9n+PRbM6R00q9+K
GQPWTh28acrQHT7D93uPOOw1JtT990jXv+KcJRMdJyTZy16zkU+xVHowSS3b
UDNfh1LEoZexOc9YOq9YRuVMiyq6XTXVpUbbo1bDt05tRr3yvHr5gHqZJXXj
VtWS19WQt1SRdlWQ/k4jr2XKy3faJeMfBU0CoFvp0EztvcG0DsrUiMGTdn/Y
HwmEHdCddWim9t5gWkfcA4uv5RbKheyn5m+j5aylZy5tLajNZNz1ZREFtQv2
gtPWwhPmegkmbQpqHIvo/1tQi8X84rCZ8di846xFJ1lLT7NXn2dvusjecZW9
X1RQY4XdYcUQB4lk0q/kUJJzte7kaaXmUx7m07LyGHl5zMJcrDibVZrFKUvn
PEnjPEvlvrjHe3Wb/+YW7+11XvkVXkUSt/Ict+o0pzqBXRPLroli1YZKzLXu
6GM2ETRpg+/TRxdCH41Xn0/cYtQ53/9flKkRV6X07d+bbtPb1r+3u3+vafN7
zPPvETC7z9KZ/VdNH7jeb/AW36G7fYYf8B55zPPXcPc/ol3ICU5SZx2kL9vJ
JVsr3LNQyTBVz9XXKhRQSznMJ2z+C5b+W8y0imldQ3esobjVannVafjVq86q
V/JvmBjYILOsXmp1LXljDXlbFXlPBfnAW1LIA5l1nRCUPgfcMgm6g09lah8d
pP0i7y2QUIcd0giZ2ueDsAO6oY7L1D4cTGv3TC04OFh2kNYhSsFuau4mWvYq
enrg/wpq1924lxz5Z20EJy10EibpHzcyjNUzjhaaRrUW1KKZtq0FNVeioBaL
TY/DZsdjCxJYi0+xV55lr09ib7vM3nONfeAm+xhxMn8a80wG42I29Xqudkqe
1r187bR8amY+PSefWZCHFeeySrLZjzI5j9M5T9O4z1O5L+/xXt/mv73JK7/G
q7jMq7zArTrLrT7FrTnOqY1h1UWw6kKwusNamRtlKdRO6ziCcj/4Xnz08JBv
2ccWn33dad/2n7/uIlaDJM3BuvP7mvv3dvLv5T2/56z5PRbM6xU0u+/yGQPW
TBu0acqQ7T7D9vmMOOw9OtTj90i3v2KdJU45jb/gIHPVVj7FSumBuWq2sWaB
HqWYRy/jsJ+zha9ZhhWYeS3DrpbmXEdxr9P0qVef1qAyp0FxQePExY3SK+ql
1tZJbK4l76gm768gHX5LCntNij0u69/u5/Z/I2L51LZJAJZPoHN8ajn0jZka
/t1LfCe/98GOCE2QqX2dD3uTIOyALvHR5dCnRmg/H/79/OEpRvg3fPu2GOHL
Nk+pdfup+dtpOetaC2oL/jehdkVUUOOfthImmOkdNzGIMzCK0TGJ4ptFcSyj
Metohn00wymKOTma6R2DTY3FZsZh8+KxRSdZy06z15xnb77I3nmFvf86+0jr
Vdf/HCRCv5pLuZmndTdf60EBNaOAll3AyM/HivNYJTnsR9mcx5mcpw+5zx9w
X97nvb7Lf5vCL0/mVVzlVV7iVZ3nVp/h1pzk1saz66JZdeFY/TFm/UFG/X61
3OV9f/+188dD4L5I0J196ubrr4hL77UYZbVqtyf6aZ8zHkJMpfUe0FfWbjB7
QT/D+X2s/Xu7ze/lN7/n3Pk9Aub2XjKr38oZA9dPHbxlytBdPsMP+Iw86jUm
3H1stCvpuLPUGccJl+zlkm0V7lkqZ5ip5xlqFelQH3EZTzm8l2y9cpZJNWZV
x3Cop7nWa3vWa05pUJvZqDyvUSGgSW5p44RVDZLr68lba8m7q8nBlaSj5aTI
16T4l6TEueP0O+EoyK8DTQKgM33qmMdvWSOJT53tnAQKMrVvB2EHdKGPZmrf
OLZPDKZ1UMe1GP6cR/Yee5hSuIeWt1lUUMsIoqfNJQpqLHFB7YSFznFT/ThD
wxg942iBaSTXPIolKqhFMxyjGK5RTI9opm8MNj0WmxNHFNRYK8+w119gb7vE
3nuNfTCZHXqbFX1PdDL/2XT6pWzqjTzt2/laqQWUhwW0rAJ6XgGzsAAryWM9
yuGUZXGeZHCfPeS+SOW9us9/e4dffotXcYNXeZVXdZFXfY5Xk8itPcGti+PU
R7Hqw7D6o4yGA/SGfdTGnSp5iyWnOnTV0gjuiwTdE3G9LB6jiFvsv+72EOL2
2C7ZhfiXTI3odcT/Rr0H9v+N8rt6wFjqwsGCBX0nze9jP7+X5/yeM+b3mO/f
M3BOn2Uz+6+ZPmij35BtvsP2igpqo0I8f4uc/Gesi8RJp3HnHWWu2k1MsVF8
YKGabapRYKBdIqA95rJecARv2AaVLLM6pm09w6mBOrlB27tRY2qT2uwm5fnN
8oHNssubxq9pkNxYT95eS95bTT5YSQopJ0W/ISW8JJ29PTaMOkayS04X+SLQ
JAA6ARGI2n7kvbuwP1/byf1OS6Da6wZtQICwAzrZR8tnXz0M0vZQNfxtR3Rc
i+HB00tqfTC1YActdz09axk9fQE9dSb9XUHNmXvBjp9oKTw+STfOWD9W3yha
xySKZxbJtoxiigpqUQznSMbkKKZ3NHNqDDYrjjkvDgs8wVqWyFpzlr05ib3r
Cjv4BuvoLVZEa0Et8SEjKZN2PZci6nss0E4rpGYW0nMKGAV4mlbAKs1jl+Vw
nmRxn2VwXzzkvUrlvbnHL7/Dr7jFq7zOq7rCr07i15zj1SZy6xK49bHs+khW
QwjWcJjR+DetcQ+1cbtW02bVvAVSM827fEIEDpAE3Yc4OyPgr44vTdPwH6Ad
dEXR5yAyNWKZ5/QP4pe9Bg8e8MeY0Uyy0mIl1UVSGgGjmAsH6C/oazm/t8v8
Xr7ze85Z0GPhvF6LZ/dbOWPAummDN/sN3ekzPNhnxFHvMWEeY6PdSPHOkqed
JlxykE22U7hnrZxhrpZnrFWkRy3jM55xOa84OhVs4xqWRQPTvpHh0kj1aNT2
bdKY3qw6t0VpYcvEJS0yK5vGrWuU2FxP3llL3l9NPlxJCi8nxb4hnXxJOv+M
dCV5bCxdUbFrTxf5IrB8Ah3kvbxMHJe+9If1h4NpnQYytQ4CYQd0DmLlIP6J
TORuX3Gl43uDaR1xlpoY0ZBwhFK0l5a/hZaz+l1B7e60dwW1iw78M9aCBHOd
eBO9WEPDaF3jKL6ooBaJWUUxbKMYjpEM10iGZxRzSjRzRixzTixzYTy2+CRr
5Wn2hvPs7ZfY+66xDt1khd5mxdzDTqQxz2XQr2RTb+Zp38nXelBISS+kZRcy
8guZxYWs0gJ2WR7nSQ73WSb3RQbvVRrvTSq//B6/4ja/8ia/6hq/+jK/+gKv
5iyv9hS37jinIYbdEMFqOIY1HmI07qc17aY0bdNq2khtWstsXDVujkGXJ2ti
UO4H3QH+csBXSl+RMhAtRh00pP858BcLHkj7y8orHg3/y9XlL0ebP+xMfrcR
kAJMpdbpy6xkKSzTUA6aqLboL+2AYdyF/YwX9LGd39t9fq9pC3r4L+ixaG6f
ZbP6r54xcOPUIdumDNvrM/yQz8gQr18j3P+IdSWfcJY67yh91WFiiq3iA0uV
7EkaBUbapbq0J1zsJZf3lqNfxZ5Uj1k3MR2b6G5NVK9mLb8W9VlIxR8pBiK5
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
rAk73SS3mI9fJ5y4iq60TEVt8QTNoF8ZiwbqBfS1XNjHZUHvKQt7zl3YY5F/
7yVz+q2aOXDD9MFbpw7d7Tv8gO/IEO8xrQU1UkJrQe2KY2tBzUYlx0Kj2FS7
TJ/2TMh8zeNW8HRruSaNHEvEdkBMV0T3RNQpSGsGUp+LVAKQ4hI0cRWSXofG
bUaSO5ol9jVJHKqXCKslx1STT1aQzr0hXX5JSn5GuldGSi8m5eWTS7KknpxW
TvoeB9Y+EzQJgI7QtYNp74FMrbuBsAM6Af5N1SV718HBwdgo80PvCmrZy+np
C+n3Z9Dv+GA33NmXnLhnbfgnzEUFtRhDg2hdo0iBSQTHLByzjKCLCmoRooKa
RzjDN0JUUJsdxZgfwww6jq08hW04y9p+kbXvKutQMiv0NvbuIJFMxpUc2s18
yt1CrbRiSmYxLbeYUVCMlRSzyorZTwo5z/K5L/J4r3J4b7L45RmCiofCqlRh
9V1BTYqgJplfe1VQd5Fff57XcJrXeILbFMdpimI3hWHNR5jNB+jNe2ktO6gt
W6hoPbNlDad5Ob95sW5zgEHTPOPGWaaNU80bfCwb3JWns7+7NRLcFwk6H9Fi
1IVTaR8StT7u2KcUckDx8Cb54EDZPVPH7XCU2mwis46nsJKiskxBfbGEVtBw
zqL+xgF9bBf29ljYa8bCngsW9gya12f57P5rZw7aNG3IDj+ioDa6taD2Z7yr
RKLz+CQnmRsO8vfslDOs1QrMNUuNKU906S/5rLc8QTXXoJ5r1sKxQSwnxJyM
aN6IMhVpzkLq/kglECksQ3Jr0IQNaNxWJLmrReLvJomjDRIRteS4anJiBenC
G9LVl6SUp6TUR6SsIlJBHrksc/zTBxNfLFZd2N2uw/4KxHUP//Ib4JZJ0C6I
yf3u883ThY2X4D9B2AEdgdgH6JJPja8WAuTC/qYVbqXlrqFnLm4tqPkxbnmy
rrpyLtjzEi35cZN0Yoz0ovUNo4TGEdxJ4SyLcIZ1BN0+gu4UTp8cxvBuLajN
jGLMi2IsisOWncDWnsa2nGftvswKvs46dgv730Ei2fTkfOqdQu3UIu30Ylp2
CT2/hFlcwnpUwn5SzHlWxHmez32Zy3udzS/P5FdkCCrThNX3hTV3BLW3BLXX
BXVX+PUX+Q3neI2nuU14phbLaY5kNYdizYcZLX/TW/ZQW7ZT0WYaWoe1rOa2
LBe2BOk1LzRsmmvSNNOs0c+i0cu6wc223tEs1UZBU6Obd0J+CnQZgY7WtsWI
eL+rn5GIqPWRzVcMj1IK2at4aI383/NldntLbrcZv0l/4lqW8koN1aVyGov/
oAYO0lnU1yKgj9PC3r4BPecE9Fi0oJeooDZrwPoZrQW1Ka0FNZ8xEZ5jYyeT
ElykzjpPuOIom2KvkGajkmOpUTxJ+7Eh7bkO8w2fU8nTqeMaN3EtEMceYS6I
4YFovkh7BtKcg9QWIOXFSGElkl2Lxm9CUtuR5N4WiYNNEiENElG15IRq8pkK
8sU3pOsvSHeekh4+IuUUkYvyJB5nSj9PlX+VovrGVc2m216H/VHiS+uIY7JG
9+09uk/vMX16i0/Q+pczRd9rEiAmHyFwgc+x7h/dZ70Nmdp3AcIOaBfiQ9W6
JFPDf7DKDdI+TC3eTSvYSM9ZTs8QTajRb/swb0xmX3IUFdQSzAQxJrrRBgZR
OkYRfNNwtlk40zKCbhtOdwyju4bRPVsLatMjGHMiGQtimEuOY6tOYRvPsXZc
ZO2/yjqczAq/jcXdZ556yLiQRb+WR0spoNwv0npYQs0qoeeVMIpKsdJS9uNS
ztNizvNC7ssC3utc/ttsfkWmoDJdWJ0mrLknrL0tqLspqLsmqL/Mb0jiN57l
NZ3iNidwmmPYzRGslhBmyyFGy34a2k1F26hoIwOtZbes5Lcs1WkJ1G+eb9w8
x7RpunnTFKtGT5sGF7t6e4c6K7Msoay+xnd9CBuCcj/oAN2qxagtUevjlFlK
4SFKx7YrHFwmt3/WhF1uUtvMZTbpKK6lq6xUUV86XmvxaCywv9GivjYBvScv
7DU9oOf8hT2C/ImC2sBN00UFtX2+Iw77jgrz/i3K4894N4lTzuNaC2oT79kp
ZVqrFVhoPjKhPNWnvxKwKvj8Gp5+I9cUca0R2wlhkxHdC1H9kPYspOGPVBch
paVIfjWSWY/Gb0GSO5Hk/haJw00SYQ0SsXXkk9XkcxXky6/JN1+Q7j0lZTwi
5RWRS3OlnmbIvLyv8OaWWnmEcrriX9Ldf8uISNDwXGx4n14m40cGMf7coyt5
0lLmnPnESyYK1w2UU3TUTlCVlklLmfw6+nPu6SOWT9AkAP5T212jbvUDDjK1
7w6EHfB1iJvuieDTJZma6IBcufBgWtF2Wt4aelbQu4LaTU/WFRfOeTveKUtB
a0FNP0rPMFJgEs6ZFIZZhNOtw+n2YTTnULp7GN07jDE1gj4rku4fxQiMY644
ga0/g229wNpzGTtwHQu5hUX/0/d4OYd2s4Byt1Bb1PdYQsstZRSWYiWPWGWP
OE9LOM+LuS8Lea/z+W9z+eXZgspMYXW6sOaBsPauoC5FUJ8sqL8maLjEb7zA
azrDaz7JbY7ntESzW8JZLUeZ6CAd7aOiXVS0lYo2MNEaDlohQEt0WxYZtvib
NM82a5pm0eRr3eRh2+BsX2/rWGvuXGtskcnS8NX8ist/2wu+/sE/Nb4EIk4q
/uUTiBtniP3qf2k0gnI/+HadfDnIF8FfCzI79yuHHVQ6ulHhwCLZfVPH7XQc
v81k4kae8lpttRXyGkvIlMVDBIH9zBb1cQzo7R3Qc3ZAj4CFPZfM7bty9oAN
MwZvnfauoHbMZ0yEF1FQkxQV1JzkUhwU0mxVcq00Ssy0nxjRXugy3wo41Xyd
ep5RC9ccce0QywUxPRDdF1GnI+3ZSH0BUglCisvRxLVIeiMatw1J7kYSB1ok
jjZJRDZIxNeRE6vJF8rJ116TU16QHzwhZT0iFxaRy3LHPUuXfXVP6e1N9Yor
2tVHtdI1VJS77ekiRI6G/8vrSQ+byx11xPHPMHtytK3UcesJpy1lk8zkrxor
Juur3BGqp7I10zFaNoN1SYOxXlb+j359P7PJHJoEwKe0ndwnftl9RsMgU/uu
QdgBn+m9wTT8l50chfCV/8jefxyhluwRFdREE2qtBbUUH+z6ZPZFR+4Z69aC
mrFutL5BpI5xBNc0jGUexrAKp9mG0RxD6W6hdK8w+pRw+owI+txIxsIY5tLj
zDWJ2OZz2M6L2N9XsSPJrIjbWHzqu77HG/nU24WU1GLtjFJqTim94BGzWJSm
sZ8+4jwv4b4o4r4q4L3J55fn8iuyBVUZwpqHwtpUYd1dQf0tQcMNQcNVfuNF
ftN5XvNpbssJbkscpyWKjUIxdISJguloDxXtoKAtdLSehVbz0HIhWqyPFhq1
zDNpnmnePNWq2dumabJtg5NDvY1TnZlzraFrjWByFcv+FnvwqOF4HtQ5k2tt
24dG9+utNGqgi+JoN9VRewzI9yYrpLkpZbgq57ioFjipFTtolNlpPbWh3DVQ
264+fp40iT58SNsuo099irb3RYoPRIIQBP5T518O8vnwb/hhbIFSZJRS6F7F
I6vlD/jL7PWS2mkjvVVfYQOmskZNfbm05pLfGIv7GwT2tV7Uxy2g19RFPf0D
egbN771sTv+1s1oLalPfK6iRRQU1Z5kbjvL37JUybdUKLDXLTCnPDeivdViV
An4dX7+JZ4q4VojjiFhuiOmF6H6IMhNpzUNqi5DyUqSwCsmuRxM2I6kdSHIf
kjiEJEKbJKIbyAl15LPV5Evl5BtvyHdekB8+IeeUkosLJZ7kTHiRPvH1PeXy
ZI2qy9Sac4y6lVho95ycJXI0HemhKy2H7XcZc8hp7DGHvyLsJGJtxp20kj5r
LndpksJ1I6UUPdV7fI00lnYmk57L4BTSdUpoRslqOlvkVBlyMl9UMfxok0D3
WZyDztRVk/ufCfZCfxgQdsCnEIeqde1zwPMFb6kN/xTUMoPoD+bQ7/gxbnr8
U1Cz4MeZ6kQb6kfqGkbwTcLYk0KZFmE0mzCaQyjNJYTuHkr3CaNPC6fPjqDP
j2QsjmOuPMnccAbbfgHbdwU7fAMLS8Fi7jFPii5QY1zNo6UUUu4Xaz8spWY9
ouc9YhSVYY/K2E/KOM9KuS+Kua+KeG8K+OV5/IocQVWWoCZDWJsmrLsvrL8j
aLgpaLguaLzCb0riN5/ltyRyWxI4KJaDIlgoBEOHGehvovWRgjYx0Do2WsVH
y3RRoAFaYNwyZ1LzDPPmKVbNXrZNrnYNDo71Vs51pi61+m41PPcqhkelpm2a
tJaXDHHzXUf8O7fNzkb172WvMmLDpN+Spkhe9h13zXtCspdMiqfcXfeJqZMV
H7opZbmo5DmpFTqql9prPrbVfm5NeWVJe2vGqDRh1hiy6vU5+Wx6sKICNmLY
51zVBwdIgs/RJZeDfBH85fOH3yzlyBClkO2Kh5dNDJ41YY/buB3mcluESutp
aquUNJZKai8ZzgvqZxrY12FRb6+AXrMW9RQV1OaJCmrrZ7YW1PyGH/Adccxn
tKig5k5KcG1TULNTybVWLzHXempCe6XPLBdwagTCRr4h4pkjri3iOCPMHTF8
EG06osxGmvORWhBSXo7k1yCZjWj8ViS1C0n+jSSOIInwZonYBvKpWvL5avKV
cvLN1+T7L8gZT8j5peTSAqlnOdKvHsq/vatacUOr+hKt7gyzIYHTbKbu3q06
sYkcTXJE38W2Q3e5j9jnOirY+bcjTn+EOpCi7CTjbcYnWslcMJ94xVQx2VD5
jq5aKk8znUXJZjILGPxiut4jmvETisUzbbu76ib+0rJfl4dCa/fPjPi6d+ev
OHxD/pAg7AACsSjqqvNDxJKSkvCfxUeoJbtpBZtERz4+JApq3szrbuwkB+5p
K/7xSYJoI90ofYMIoXE4xzQUMw+lW4XR7EJpTiG0ySE071C6Xxh9Zjh9XgR9
UQxj+XHm2kTmlnPY7kvYgWtYyE0s6g52PJV5NoNxOYd+s4B6t4iSVkLJfETL
LWMUlmGlZazHeJpWxn1Ryn1VzHtdyH+bz6/IE1TmCKqzhLUZwro0Yf09QcNt
QeNNQeM1QdNlfvMFfstZPjrJRfEcFM1G4Sx0jIkOMtB+GtpFQVtpaAOG1nJb
Wx/10CJD5G/SMtusZZpFi691s4dtk7N9g51jvYVLnbFrre7kGo57Fc2zUs2z
XNbrzZ8Od4cyXaTbK18jsjNiwYNnZ9Zqw+yoA8/MHnt2xl/nppHPT5G46Ct1
xWf8dW/pm56ytz3k7k2Wf+CmmOGqnO2smu/4v4LaSyvqGwt6xSRGlTFWa8Bu
1Oe16AmRrh7SNSzEhEETpIkS2+d0T0G5/7vWcTWXtoNpnXk5yBfBX0dKMQnK
EQeVQjYqHFok+7ffuN0OE7YbyW/mqKzTVF8pp7X0T/qSQXpB/awC+7gG9PZb
1NN/UY+gBb2Xze23RlxQm/KuoBbt+Uf8ZGJCTfqG40SioFZoqfnEjPLCiP5W
l1Ul4NUL9Fr4JohnhbgOiOOKME/E8EPUmUh7HtIIQKpLkNJKJL8OyWxC47Yj
yT1I8gCSOIYkIpsl4hvIp2vJSdXka+Xk26/JD16Qs5+QC0skHheMe5Et8yZN
sfyOWtUN7ZqL9PrTWFM8tyVCgCgKvO4wsIZHEjykkEf0XWA/eLPXsB0ew/dM
HrHfZcxB59+POf4Zbk+OsZM6YSN9xlL2opn8NROlFAOV+zrqDzlaWSxaHpNV
xBCW0g0eU02fUaxeaDu81HR9pebpL6X0LUVDuGXypyKe3MeJ703rhmAN/2Nr
25sEYednQ2xZE8MgXVtdfVdQo4oKamv/KahNYSR7sN5ddW0uiDXRiTLQj9Ax
CueZhLImhdAtQmm2oTTHEJrrMZpnCM03lDY9jD4nnL4wirEkjrn6JHPTGWxH
Erb/CnbkBhaRIjpIJPEhs7XvkXa7iJJaop3xiJpTRi8oY5aUscoes5895rwo
474s5b4u4b0t4pcXCCrzBNU5gtosYV26Tv0DYcNdYWOKsOmGsOmqsPmSoOU8
H53miTK1OA6KYqOw1tbHA61Daju1Ra2PG9hoDQ8t1xG1PgYYoXmTWmaZt0y1
avGxaZ5s1+Tk0GDjVG/mWm/oVitwr8E8qrQ9K5W9ysd7v/512ssR/s+HT785
TINL/s8Ow48Sz53hf3xkvz5yv/azpg3c7zvihP+YxHm/np7z+5mZf5yd/tc5
P/IFX8lLPuOuek+44SVzy0PuzuSJ990UHroqZbqo5DqpEgW1J+KCmjmj0pRZ
YyQqqDXr8ZGeLtI1QDrGSGcS0rEsZBoFK2lho0Z+0cDdRzeOIAp1W8S+ypd+
Q34Oorjfzb/0otZHjlA5Olo5fK/SsdXyB+fJ7POU2mUlu01PaSNTbY2KxvLx
2ktHsxf3Nwnqax/Yx3NRa0EtoOcS/z6tBbVBW6eLCmrBooLamH8Kaq1HPjrJ
pjgoPLBTybVRL7XQfmZKe23ArBSyawXCJoEh4psjni3iOiO2O8K8EX0qos5G
WvOReiBSWYYUVyO59Uh6CxonOksESR5GkqFIIrpZ4kQj+Wwt+VIVObmcfPc1
Of05OfcJuaRE8mn++FdZcm8fKFfe1qi+TqlLYjQmspvjeChMB61nF0pKyHVt
soZ/9iF9e7mZ9F/rM2Sj99CtnsN2eYzYN3lksMuvh53Ghjr+FWkvEW87/pS1
zHmLiZfNFJKNle/oqz0QaGSwtXNYjAImp4ShU0Y3ekoze0Gxeanl9Fpj8htV
n7fK09K17dqlwxOaBH5sbSf341t19TP6pG7+9EA7grDzU8G/suJFUddem4j/
xMQXfkeppXtohZtERz6KJtSm0295Y9fc2BccuKKrrk0FUYZ6kboG4XzjMLZp
CMM8hGYdSrMPoTkfo7kfo3mH0KaG0maF0/wj6EExjBUJzPWJzG3nsb2XmAev
YaG3mDF3mSfTmOeJ8x4Lqa19j5TsMnr+Y0bxY+zRY/bTJ5znj7kvy7ivS3lv
i/nlhYLKfEF1nqA2R1iXqVP/UNiQKmy8I2y6JcrUmq8IWy4K0Dk+SuShE1xR
62MkSzSkJmp9pKM9FCQ6n5+J1nHQKoGo9THIAC00RnPN0EzLFj/rFi+7Zlf7
JgfHBivnBlPXev3JtTz3GoZnlaZnpbzXWwmf1yNnvRyx8PnwZU+GrS0bGnR5
hNN8CWlZUfpDVNnwpXLhx+BrSHFn48j+fUYO6GVBG7zMbXDckpHxgaOOLxyd
MH/0yXljEuf+dnrW2DMz/jw7lXRuikSSj9Rl7/HXvKSTPWVT3OXuTpZ/4KqY
7qKc7ayST0yo2Ws9a1NQqzbG6gzYTfo8pCdEeqKCGtIxRTpmSMcKCW2RwBHx
XYLlGaQB/f+zH/JDUO7v5ohXa0dkasTB1+37mB0Bfw1KLV+nEh2iEr5d8ejS
iQdmTNjrMn7nJPmtfJUNFPXVCprLyLSlQ3SW9LMI6usS2FpQC+wRtLDXu4La
jME7prUpqHn8SRTULogm1Cbec1DKtFMrstZ8ak59aUwv12NVC3kNAj0kMEF8
K8RzQBw3xPJEzCmIPgNR5iLNhUh9MVJZiRTWItmNaMI2JLUbSQYjyaNIMhxJ
xDVLnGogn68lX6ki3yonp74iZz4nFzyWeFQi9Tx/wpvMiRWpqlUpmrXXqPUX
mE2nOChWgEJ10QF9tJRfSJLsmmSNKKUxFQct8xu4ynfQOp8hm72Gbvccvsd9
xH630Qddfjvq9Ge4AznGXirBdsIZa9kkC/lrkxRvGanc01N/yNfMYlPzMKyY
yX/E0HtCN3lOs3xFsX+t5fJG3eOt6pRypRnlCnMzNB3bdxzvw1smYbupExDf
Kh1R4n9vMK2bDwpBpvZzgrDTHeBroQ664IbYuxYHn679yuJ/R/M/ZhygFm+n
57ce+fhgDv22L+OGO+uSE+esDe+E6CARnUh9/QihURjXJIRpdoxmGUKzDaE6
HqW5HaV5HaNNCaHNCKPNC6cHRNGXxTPWnmRuPsvclcQMvsI8loxF3WEmiPse
C6l3iylppZSsMlreY0bhY6z0CevJU/bzJ5yXj7mvH/HelvDLiwQVhYKqfEFN
rrAuW6c+Q6fhgbDxfmumdlPYfF3YfFnQkiRAZ/noFA8lcFEMWzSkdoyJDtHf
tT5uo6FNra2PK4VoqR4KNETzTdEcMzTdqsXXpsXDrtnZocnOqcHCpcHYtV53
ci3Ho4bmWaXqVSHr/faPqa9Hzn05PPDZsBVPhq4vG7KtZPCegkHBOQM3nusX
sG0Eho3EVCVGDekv+m9wP9F/g/qNGoj/11fur4GW3KFT7QfEbh0Ws2FY9Orh
MStGxC4dERc0Mj5g1PEFoxP8R5+a9+vp2b+fnvnHmWl/nfUjn/eRvOg97orX
hOueMjc9ZG+3FtTSPlFQKzdnVJkya41YDQacFv3WgpqeAdIlCmoWSMcaCe2R
wAnxXRHPo5BqHySt8i0NnNBl1N0Q1bR2z9SIFqPvIlMj/gWU4xJUog4qh25Q
OBIg+7ev1B47mZ2GipvZauvVNVbJaC/7jbV0gPGSvnZBfTwW9ZoZ2DNgUc+l
8/usnNO2oDZSXFA74Sp5hiioOSqk2avk2ao/stR+MYn2xpBZpcOpEwqbBYZI
YIb4tojnjDjuiOWNGFMRbRbS9kcai5DaUqS8GsmvRzKb0fgdSGovkjyIJEOQ
ZBSSON4scbqBfLGWfL2KfPstOe0VOeeZRFGZxJPicS/zZMozFCrvq1Xf0qq7
Qms8j7Wc4KJoATqmi/42QNuN0UKjQkXVTr3qkejTHtyvl6N57yXTBqzwG7jG
d/AGn6FbvYbt8hy+z33k365jDjn/HuL0V5SDRLzduFM20ues5C6bK9wwVbpt
qJqqo5HB1cph0wsxdilT+Jhh+Iw+6SXV+jXF8Y2m21t1r3KVqRVKsyrk55XL
BmSqTe6gRT60dncO/GuHfwXx12O7fxG7w+T+F4FMDUDY6RLEkqAjJru71YqI
2KI/Ri3dKyqo5S6np8+n35tGv+mFXXVln7fnnbLkx5kIIw31InQMw3jGoSzT
Y3SLEKr1MarDUarLEZrHUZrvMdr0ENqcMNqCCPqSGMaqBMbG04wd55n7LzGP
XGeGpzDj7jETHzKSWvse7xRRHxB9j4/pBU+YJU9YZXia9pTz8gnndRnvTSm/
vERQUSSoKhTU5AvrcoQNWToN6TqND4RN94RNt4VNycLma8KWSwJ0gY/O8NFJ
HorntrY+stBRcesjDW1htLY+8tGK1tbHRcbIfxKaZYGmWbX42LZMtm92cmy0
cW5obX2sF7rXsjxqtL2qlLwrxvm8GTPj1cj5L4YveTps9eOhmx4N2Vk8eF/+
oIPZA49m9A970C/ybt+Ym33ir/c5cbn3qfO9Ek/3OhnfJyGi//GjA+MPDIrf
MyRu+9DYTcOi1w6LXjk8ZtmI2MUj4xaNil846rh/a0Ftjqigdnr6X2f8SGd9
Jc77SF3yHn/Va8INDxlRQc1NPvW9gpqd1jMbbaKgVjmJWWOC1Ru2FtT0/ymo
6ZoiXfN3BTWhAxI4I/5kxPVEHB/E9ivUdsFGj/nGFRHcF9kdELVaohe3HTM1
8dnXRJW/XR6z4+B/9zE2Tiqx0SqRe5RCVskfmiu9311qj+XE7TrKm+jqa5U0
V0hSl40QLu1nsbiPS1DvKYGigtrigF7L5/VbM3vg5hlDiILakXcTan8eJwpq
TqKC2n0HpSw7tWJrzWfm1FcmjAp9Vq0Or0moh4QmSGCJ+A6I64rYnojlixjT
EW0O0l6ANIKQ6nKktAZN3IikW88Skfq7tfUxHEnGIIkTzRLnGiUu15KTq8j3
3pLTX5HznkmUlkk+Kx7/Ole2Il2p6p567U1K/WVG01kWSuChSCE6qof2GaKt
JmiDJZpjla+gptE55/YTP/Koqv0DZvUJmtFv2bQBK6cMWuc7ZJP30O1ew3Z7
jNg/edQB11+POP8R7kSKcZBMsBt/xkYmyXLiVTPFWybK9wzU0oSaWRxKPptZ
jHHLmLpPGcYv6OavqLZvtZ3LNd0r1H0qVaZXKs6unDi/QiawYtyyTDWvjj7o
EpoEOkjbXaP2rY0Se4Pf188XyNRAWxB2Ooc4CrVvptZNzg9pC1/5WPwx8yCt
hCioBdIfzBIV1K5PZr07mV90kIhOhJ5+ON8olG1yjGF2jGp1jGp3lOp0hDr5
CM37KG1qCG1WKM0/jB4YTV8Rz1h/irHtLHPvRebBq8zQm619jw8Y5zPoV3Np
KUXU+yWU9EeU7Mf0/CfM4ifYo6fsp884L55yXj3mvinjlT/iV5QIqooENYXC
unxhQ45OQ6ZO40NhY6qw6a6wKUXYnCxsuSpAFwWIGFI70TqkFvl/z+ffTkeb
MbSeg1YL0HJdtNgQLTRB80Stj8jPGnnZtbg6NDs4NVq5EK2P9TyPWoZnjYZX
1UTvcpLfm1FzXo1Y9Hz4iqfD1j0eurV0yO6iwcF5gw5nDQhJ7x9xv1/07b5x
yX2OX+198mKvxHO9Tp3sfSKm7/HQ/vGHBsbvHxy3a0js1qExG4ZFrR4evWJE
zNKRsUEj4wJGxc8fnTBv9Km5vybO/v30jD9OT/3rzBTyWR/JJO9xl70mXPeQ
uekuKqjdc1VIc1HKdFYWFdQciCMftV7YUF4TBbVJzDpjVqMBB+nzkf4/BTXd
SUjXAunYtC2oIa4X4vgi9lSEzUDM2UHjtNrrdJQPy/2QtXUO0XWHrV9BPEdr
r0ytbYtRtz3psS38Ly63/4hqTIhKxDbFY0vkDk4fv99JereJwjae6kYtjTVy
Wsv/wJYNMlra125xH4/A1oJaYI+lC1oLarNEBbU9U0V3qIX4jI78vwW1244K
D+1V8m3Vy6y0X5rR3xoxq3U5DTpCJDREwklIYIP4zog7GbG9EeaHGDMRdR7S
WoTUlyKVVUhxHZLbjCZsR1KtZ4lIHkOSkUgiHkkkNktcaJC4WktOqSKnviVn
vZIoeCZR9kjqRdGE8pyJlekqNXc16m5QGy8xW85w0HEBitBFhw3QHiO01Qyt
t0GrnNA0lyz5Dk7W8JU2/t01sH9PK5v/b/6cXotm9V0yvf/yqQNXTxm0wWfI
Fu+hOz2H7/UY+bfb6EMuv4c4/xnpRI53kDplN+GctewlC/kbk5RuG6uk6qtn
8LVyONRCFlaKCZ4w9Z8xTF/SLF9T7cu1XSo0PSvVplQpz6xSmFslt7BSenGl
1IoKibWZqlM77VYCuGWyvRCnYxHjAO2YqYkn97+7Lw3xM7GrnwXojiDsdATi
ZxYRhdo3UxMfqtatMjX877hF7UZrQS1nGf2hv6igluyJXXHhnLPjnbQQxBoL
I/T1woWGoVzjY8xJR2kWR6k2R6mOR6iuh6meR2hTjlJnhNDmhtICIunLYhlr
TjA2n2bsusAMvsw8doMRdZt5/D7jTDrR90i7J+57fMIoeoqVPmU9wdO0Z5xX
T7mvH/PelvErSgWVJYLqImFtgbA+TwfP1BrxTC1N2HRflKk13xK23BCiKwKU
9M+QWgL3Y+fz09EmFlrHe9f6GGSEFpiiueZohhXytUUe9i3ODs12zo0Wrg3G
bg267vUcz1qqV42qd6W0T/nY6W9G+b8cvvj5sNVPh258PGRHyeB9hYMO5g48
mtk/LK21oHarb/yNPglXep+60CvxTM+Tx/skRPQ7fnRAfPCguD1DYrcPjdk0
LGrt8KiVw6OXjYhpU1A7MXfMqTm/Jc4cmzjtz9N+pDM+Eue8pS56jb/iKX3D
XebWZLk7bvKpLorpzkrZTip5jmpFDhqPiIKaNfWtBb3SjFljitUbsZsNWgtq
+npI75+Cmq4V0rFFQkckcBEV1HieiOuNOFMQazrCZiLmHET3L1TzDZJXb/ed
Byj3d772ytSIL5z4l8T8/jc+ZocSnSXC01E5flw1+oBy2HqFowtkDvhI7bOR
26mvvAVTX6+quWocdfkowbJ+Fkv6uiwWFdTmBb0rqK1tLajtnDZs//8pqJFP
uYxLcpJJdpp431Ep216t2EbzuQX1jSmjyoBVp8Nr1tVDOiZIaIEE9qI9EI6H
qKDGnI7ocxBlAdIMQmrLkfIapLABybaeJSK1D0keEp0lIhmNJBKQxJlmiYsN
EtdrJe5Ukh++Jee8lCh+KvHkkdSrwgkVOQrVD1Vr72g13KA1X2Sh01wUJ0Th
euigIdpljLZYoHV2aKULWuKJvLzTv+iMoC9CrLrV1ftNn9dj3rweC+f0DprZ
b9n0ASv9Bq2dMniTz9BtXsN2e47Y7z4y2PXXIy5jw53/inGSPOEw7oytTJKV
3FVzhZumyneNVNN0NbJ42nkcejGL8xjTeco0fMEwe0WzeUtxrNByq9Lwrlab
WvP/s/fWcVGm7fv/9w8RxERsVx1m6M7pGRpmhgYRke5GJJTutDARRURKpRvE
wO5uxW4a6eb8zX0PsD677n6eXXVXnx/na/9AXb2HuK65jut9nMcpF9AjHdQj
Ht4tEtMtmNiF3dIpsPOhQgB7X/onR8j9PhPgH3v0/0BxfDicWyMO3/8m37vP
O/e/N6KaaCr/G1lhX6xJpTZZ/2dNepO+YXHetji70DdUap+Hqv27+SGfF3ub
UlmwKpPyejf1WRLtUTjtjj/1mgf9gtN4Mr+xdqE+K5+pd0TT4LCKcS51ZQ5l
dQ7FKodil01xzqZ45FB8cikBhykhedToYlpiBT25hp5ygp5+Wjn7gnL+lTHf
4+nHqO/xNeXuW/Kj95SnH2gvG5TfNKp8aFRralJvbdRoa9Bs/6DV8V676612
z2tG30vGwAvm4DPm0GPW8EPm8D3myC3GyHXG6BUGXGTAWbZS04LjmkiTWgXa
pPYf+fxU2EmHZDXYpAXxLIjWG7M+BqwCH3PwsARn61Ebm5E19kMrHQf1nAa1
XQZUXPtI7j0y7l2Cnp8W+bfND23hj22cu/kj3473c1Jfzz7wfFbWkxmHH07P
v8NbdGNa6RWeigvc1We4j56cWlPDXVXCOwHUSvfMKdnBV7xlbmEif1Ecf3H0
vNIIBKhVoECtev3iGv+lR9chQK3WU+CYO67OTeiMq8gFF7HLzuLXHCVvOkjf
tZd9aCdXb6vwwlrpDdKhRmw2HwNqPb8HajoTQM0cmFbAsAVtB9ByBs1xoKbq
Cyr+QN8AtGCghL2U94kUIX/v3pDJi6PvXV+v1CYa037z+z/O1vTFYu/GK3yD
FMoLFYr2yubFS+YEiGQ4CaetlE7RVthGJmyWIsWvUImbrR/LaxnN4xI51S+S
KyySKyaEJ3H9jK3+s3f9CtQWjQM1weO2IudtxW/YSD9AgdqH1aS2lbROQ+U+
HfVhFgMNVjUBxhqEVms6gbo7qK5FgBo1EEhhgI8GxQSQ3QxS20AUzRJBrI85
qPWxDLDVgD0xgj07iL3Sh73VhX34Cfu8Bfu2Adf0VvDTC7HuJzK9d5X6r5OG
LtBGT6khF0+lTDiiCxkGsMcItq2GTdYQ7whRbhCyFuzX3ZFQ+sY9a5xryUUL
ec3dubwCufwDpwRv4AoP4In2nR7nMzPJe9YWzzk7PPhS3PjTXOcdcF6Y6bDk
sP2yQjtMmY1gjZXIiTXiZ8ykLq6UuWYkf1tP8QGTUK9Bfqmm/FZV86OKTpOy
YQttVTvFsoNs10107sV79ims65Nd3ysV0ise0SMc14Pb2C2Q3CWQ0oHZnyq4
mr0vfcNP7b8v9jb1r2cv/1zFic/ifPytlNpvOvc5WO0r/80vFudnfvny5cFo
paamWllZff2ymlRqk/WX6osBkv/2i/qZihPrx/n4Wym13xyK2B//IDp6Aqgl
056gQO3mWtolF5UzdurHLdAgEQNmvo7OES39w2pGuTSTbIpZDsUim2ybRXbM
IrtnU7xzKP6HKEFHqBGF1Pgy2pYq2q5j9H119Mxz9COXlUtuIL7Hukf0C89o
1zm+x/fk+g/UFw30140q75tUG5vUWprU2xo12hu0Oj5od73X7nnL6HvNGHjF
GHrBHHrKQpTaA9bIXbZSY45eZ8JlBlzQRpRa3Xg+f/l/5vOnUdEmNRXYqoFa
H3X+0/q4BtwswdF61Np2ZLX9kLHTkI7zoKbrAN2tT8m9R8K9c8XaTws3tPFH
NM9NaJyb/JFv97s5+xDr48ycxzOO3J9ecIu35BoC1KrOc9ec+hWolY8Btdml
u+cUJ/MVbZxbGM9fFDOvJHJ+afiC8hAEqFVuWFQdsKTGFwVqXphaD+xxN8FT
rsJnXUQvOotdcZK44SB1217mvp3s4zGgRkA71Mitq8eBmpHK4OdATVcfdIxB
ZwKoWQPDHrSdUOsjCtTUfEAVBWr0IKCGAjkcSFGAjzklY/P95npzahL3f9f6
SqXGYWc/3VsD5yZfvqpWoSxXvnC7zJFIiWxvwQNW4nsN5HapKSUrEjeKUOIX
asdNN42ZZhfF7RU5NTCSKyp8anzQGFBL9Zmb7j0O1FyWVzhij9qhQM1G8o61
7BNLxTdriM1m1A5jeo++6iBLA1gsNK7HDPUVOyCoWs0TVNYBLQAowUCMBKU4
UEgCma0guQNEUkAoDQQ51sciwFUAthawp0awFwax1/qwd7uwj9uxL1uwHz7i
Wt4Kdj6X6Hkk13cHP3iNMnJeGerUoVoLSphwWA8OGEKKCSSbw0YbiHOCCA8I
8gG/ALDwu8c7b9G3Wrnsf4eXl0eKxGMXNNUtiMsncMqGwCmhG7gj/KfF+E5P
WDtzk9fsZM85uzzmprrNS3eZn+G0KMdhaZ79imJbbKW1UK2laN0aiXNm0pdX
yt4wVLini3+sTXymTn2tpvpRldGootesbNxGW/2JYtVJcughuPYpeffL+/XJ
BPZJhvWJRfUKx/fgNncLbO8SSO3EHPiEyQkWUv9O+V1/UhyLyw+Okn/k+iZK
7fe3RuzvyzcHnZxtk6PRuj+rBw8efP0x73u84Mn6/0lxJrX9+PNxftj6eqXG
ubv+zYnoB1FqKFAz+xyo+dGuutPPIUEiGpwgkQJdVh5D77C6Ya6ycQ7FNIe8
JptsnUV2yCS7ZlG8sim+uZQNhylh+dTYYtrGCtr2o7TUE/SMM/RDF+lF1+iV
t+nHH9DP1dOuvqTeekO5j7SnUZ430F43Kr9rUmloVmtpVm9r0mhv1Oxo0Or6
oN3zntH7ltH/mjH4kjn0nDVUzxp+xBq5zxy9wxy9yYSrTLjEAKRJTQtpUpuw
Phaq/Wp93EeF3dQx62MSE2J1x62Pqyasj2BvM2ppN7LKYdjQeYjpMqjmNkBx
75P36Bbx6Fzq92lBSCt/TPPcjY182z/M2fN2dvqLWZn1Mw89mp5/l7foJgrU
LvJUn0GyRGpqpk50qJX9BqjF8hdHzy+JmF8WinSoVWxYVBWwuNpvac26ZUe9
V9R6CNS64U66Cp52ET7nLHrJCQVq9tJ37WRQoKb4whr/1or40ZLUbE5pM6N2
mtJ7jBGgNqyvDnooUNPVA11D0DEBnVXAMgem5X8ANQ1PUPdGrY/+oLwB6MFA
DQNyBBCjAR8HiokvJYMwM2b+A5lyE/MiJ3ehPymVP64vyrGvUWoTjWk/3SUw
e7+aq8lSqCxTKE2XK9godThQNNNFKH2VdCpTcSeVsEWGlIhRjp+DALUYHpco
br9IrvBIrthQnsQNCFDbvY4vbS1/5hhQW1bmjKkeA2oSN2xkHljLv7DAf1xN
bjeldRmq9OuqjbC0EaDGWol2gHJSetxAzRuU/YC2ASihQIwCpQSQ3wTSySC+
C4RTQegACGYDLo+TJQLY44A9M4K9NIi92Yu934Wtb8e+bsY2fMS1vxHufibV
+1B+4DZx+Cp19JwKnNCAKgYU6UCuPuw3gt2mkGwBSXYQ6wLhXhDoC74bwD0E
TP2eChm6fI1XkJPuyP754V/MuzKYxzKY2zFoqmcQl1/QlKBArrD1PFH+vHHr
ZiSunbXZa/Z2T74Ud/59rvMyXBZkOi4+5IACNVtctbXwCUuxM+aSF1fJXDOR
u22g+ECHUK9JeqlOf6em0ajKalYxaKWbtlPNOyk23SSnXoJ7v9K6AfmAfpng
fomIftHYPqGkXuzWHoFdXQL7OgUOfsIcuv1LCm3hin94KgHn3fnHb8/8Yesr
ldof5Ydw3ji+wetDi/3y2K+TRqOxRVn378rCwiJuz9eKrEmlNllfU5xVMEn2
/159pVLj3Nf9fv2yf/9H+I58BtSQDrVA2g0v2gVnldM26rVrNCtMtIv1mXlM
3cOaBodUjHIoJtnk1Vlky0yyXSbZOZPskUXxySGvP0QOOUKJLqImltGSq2kp
x2npp+g5F+j5V+jlt+i1qO/x8gvqzTeUe+/Ijz5QnjXQXjXS3zapfGxWa25R
b2vWaG/S7GjU6vyo1f1eu/cdo/8tY+A1c+gVc/gZa/gJa+Qha/Qec/Q2E24w
gWN9HGtSm7A+qqPWRxXIGrc+7hq3PiawIEYPIowgeCUEmE1YH9nvLaNr7EdM
HYf1nYe0XQdV3PqJHr3SHt1Y747F69vnRbTyxzfN3dLAt+v9nH2vZ2c8n5X9
ZMaRz7JEKs9zVyNAbWpNBU9lIQLUyjJmle6bXfIFoDa/LGRBeeDCyvWLqvyX
VPv+UrN2+VFPTK079rgrrs5F6IyzyAUnscuOEtcdpG7ZSd/jADVrpddW/wHU
ulcq9xmpDBmojeppgt44UNM1Ap2VCFBjWQATBWoMJ9ByAc3PgJrKeqAHAi0E
KChQI8YCPh4Uk0Bu80uxsEgxyj/Tyz+5C/15Yf64vnhw/dtK7fNDKcd68XUv
/B8t9qcsmXlYsSJfoSRFNj9GMnedcIatWJqRXIo6fjueuFmUkrBIK36Gaew0
+2gEqAVFcUWHT01AgdoOPwSoHfCal+OxMN9taYnLikoEqAmfthW7YiN1x1qu
3lLx7Rpiixm101i5T191iKWBzpQ3QoAaEwVq7JWl7gmqPqAcgHiJyRFAiEWX
0haQ2g5iu0FkHwgdBMFcECxArI+4GsCeBOy5EeyVAeztXuzDLuyzduzbZmzT
R1zHa9GepzJ9DxQHb5FGrtDhrBpi5q5gQqEuZBvAPmPYZQZbrSDREWLcIGwt
bPAHnyBwDQPbKNAPeCai7/E3sPiERlsoPJfiNl0/mMcsmNs2eKpL8FTvIK71
QVNCAqdGBEyL8Zse7zNzozcC1HZ6zE1159/vOv+g88JsBKgtL7YTqLARrLUS
qbMQP7da6rKp7A1j+bt6So+YxGcalNfqKh/VtJpUdVuVjdvpZh1Uyy6yXS/R
pR/vOaDoOyi/YUA6dEAiql8kvk9wUx92W4/Anm6B9E6B7E+YI22Y4pvL0+nS
Mv9M0CWg+xIH9/9cVxbftWz/uL74ffkapTbRuf9d767ZP/PLly9PTU39vUbj
FPtPne+mfeVTJpXaZP3t4nggJ8k+p9j7TMYf1xf/ytcoNc6hiHOD/fdf9Hcr
9valusAsi/JmN/V5Eu1RGO32OuoVN/pZe9UTlhrVq7RKDRj5OqzDWvqHVA1z
aMZZ5FVZ5DWZZJuDZMeDZLdM8tpssn8uOegQJTKfEl9C3VJJ23WUlnaSnnmW
nneJXnqdXnOHVveIhvgeX1PvvCU/fE9++pH6spH+pkn5Q7NqE1umtWq0t2h2
NGl1Nmh1f9Tufc/of8cYeMscfM0cfoEotZHHrNEHzNG7TLjFhOtspcZEm9QY
UKeN5vOj1sfiz/L506iQMm593MhArI/R+hBmDEGm4L8a1q4Bd0twtAFru9HV
DiPGTsO6LkOaboN09z5Fjx5xj67lvh0Lg9v5o1vmbmzi29YwZ8+72ftfIVki
hx4jWSJFt6aVXp1WMRHOXzO1qnRaRd70sqyZpShQK97BV4QAtbmFsfzFUfNL
wueXhi4oQ4FaZcDiKt+lNT7LarxWHPUQqHXFnXARPOWMALWLTuJXHSRv2Evf
sZN5aCtfb4MCNUtkhlqzOaV9NbVzFb3XRGXAUHWEA9T0xoGa7mdAjWkDDAdg
OIO2G2h6IEBNbR2ojgM1WhhQIoEUDYQ4hAIobESOlzLbQHJnpIDa9xZrk7vQ
N6+/odT+qDHtZyn2J8uvpaNQU6NYkSVfvFX6SIh4trvQAXOpfToKu+mEZFnS
Rqxywly9OF7LWB7XaG6/KK6ISK64UJ6kDTOSUaC2nwPU3BcXui4rR4JEBI/b
ip63QYDaIyuFl5b4BnMy0g1qqDKoqw462mhcDweo2aKmYndkWan4Il2f1FDU
SBwPCptANpm9jkA0FYT3g1AWCB4BwSIQrAAcYn0E7IUR7LUB7N1e7JNO7Ms2
7IcmbOsHXPcr8b56uYH7+OGbZLisDGfUkR2tnAX5epBpCHtXwg5z2GIDic4Q
7QGhPrB+PXiHgHMEWMWAeeKA2dYO7bjzOBNHjl77P9fvhEZbRvhF1puPGsqr
HTLNOJjHIpjbIXiqezDXuqApgUFTwjZwRwXwxvp+BtQ85u5zm3cABWq5Dr8U
2GNK7bDVNkLHrcTOrJG8aCZ9baXcbUOF+7r4em3SSw3aO3W1JjVmi4p+m7JJ
B828i2rdQ3bsI7oN4L2HFAIG5YIGpcMHxaMHhBP6Bbf0YXf0CuztEcjoEsj9
hClow5Q2Y2puSqb8M9dHE0fr79cS9dMVx2D8R/VtldrnRgvOvOCvfvlfKI5M
+yONxq7g4OAldtq617d95YMmldpk/b2aCNL5MZXCP1+cLeWL9Ue9zH9bqU2E
qv2wwdfsT22n4uX91FfJtCfRtHvrqdc9aeedVOqs1Y+u1io31i7UZR5m6B5S
N8ihG2WRV2aSzTPJ1gfJDhlk14NkryyybzY5MJccfoQSW0TdVE7dUUPde5x6
8DTt8AVa8TV61W36iQe0c/XUay+pt99SHrwnP/lIfdFAe92k/L5ZtbFFrbVV
vb1Fo6NZq7NJq7tBq/ejdt97xsA75uBb5jBbqT1njjxljT5mwQMm3GHCTVSp
XWbCBQac0YaT2lCrNZbPX/T7fH5V2DJhfTSEUBPU+mgOXhbgagX2tmBpP7rK
ccTQeYTpMqSOWh/lPHqEvbuWBnTMD2vjj2uZu6WRb+fHOfvezs54MSu7fsaR
h9ML7/KW3JhWdgUFaqen1hybWlPJXVnEW5Y7ozRjVune2SW75hQl8xVunFsQ
x18UPa84cn5pGCLTEKAWsKjSb0n1ul+qvZfXeGKOumGPuQiedBE+4yxy3kns
soPENXsUqNnKPbZReGat9MqKE/lIbl1N7TBDgFq/seqQgRpwgJqe7hhQ0zUF
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
LVqDhnqbBrNDzaBL1aRHxbyPbj1IdRwmu40S1wI+ABSCQDYcpKJHxRJGhDcP
47YPYfcMCqQPCOT0CuR3Y0o7MdXtmBMtmLONmCvvMbfeYB68FHi2SSzomzes
/cYGPIlCvrI47ZD/5/vFROc+oNL4+0FM9uv5k9604OBgngVLpRPS8MeuKp48
Szh1lHimjHg+n3AhBX9ps8vNrV/z6MWLFy8wNhNM2LrA0GS2IoETgMBpIGUX
p2mUk18X8Vlx/nRiLMtvsn8nfp/zL0w0on6jr9Zk/Wv1G5fLJNn/muJcj/z5
//N5Y9qPn/8z0aGGArWHQdSbntQLjsonrNSqzTRLjbTzWYxcTd1sFYNMilEG
0TSduGY/0WY/0TGN6J5O9MkgBmQSQ3JI0UfIiUWU5HJKSg0l/QQ15wy14BKt
/Aat9i7tzGPalefo9LT3aHtaE+11C/19q0pDu1rrJ3WOTOts0+xu1epp0e5r
Zgw0MYcamMMfWaPvWKNvWPBKBzhK7RELUWq3WXCDNTZJbSyf/zPrYwFqfRzL
56fBLhXYpgGbGJCgAzEGEG6CWB8DUOujuzU42oK1A6x2BGNn0HEd1XAfpnoM
KHj2iaztWRbQOT/8E39829ytLXy7G+akvZt98OWs3KcIUONkiZRfHpt2XXOU
u6qMpzxveknmzJK0MaBWiHaoFcTwF6JArSR4QWngwrKAReW+iyt8fqn0Xl7l
saLaTaDGGXfMSajOUeSMg9h5e/FLdghQu2Uje99a/okVAtTejgO1T2a0blN6
n4nKkJEa6GuA/u+Amq456FqCjs04UHMFbQ/QGgdqautBNQiUQ4EWgWSJkGOR
syU+CRQ3gxxqfZTaBRLsE+Y+ENqPRIsjxq3DaBhCMQiWR2IMvlKsTe5C/2JN
ZF//2y/k2xT7wCOVW6B0tFipcq9cSaxknq9Ytq1UhoHiXlXSLgXKVpzyRj7D
RF6bBB6P2Kkbormio7gSQ3k3rx9L5s/wnpfjvjDPdWmx84oKByRIpM5a7LK1
1B1r2XorRSRIxJzaa6o8aKyKLDRdJgLUkKweC9CxBZYTiqq9kdsP1Q2gHIIs
KPZqIrCX0haQY6+j3SC2F4QPjFsfS9AskeOAOwO4S4C7MYq7N4St78e+6sZ9
bMe1NQt1fxAfeCUzXK8E98lwgw6X1JDrp6MsKNWDw4ZwwBT2mMN2W9jsDAme
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
XUA8W0K6UEG+xJFppydkGuXObcq9+5T7jygPnlIevVQ8eVGx7vIyL//ZBDJ7
pfw3TrDJ+rfqN40hnGKvlP+Zy9Ufrdj7z093/kSB2pW9tBcbaY9CqbfWUi86
0U5Yq1abaZQaaeWzGDmaOpnK+hlko3SCaRrBYh/Bdi/BaS/BI42wLp2w4SAh
LIsYc5i0sZC0vYycWk3OOE45dJZSdJlaeYN6/B713BPa1ZfUO28pDz+Q6xso
L5ppb1qVP7SpNn1Sa2PLtE5UpnVo9XzS7m3X7m9jDLYyhlpYIxyl9p4Fb1nw
ioVYH5+i1kckTgRVatdYyCQ1pEmNASe0v9yktpeKWB+TNWAzAxJ1EetjhAkE
r4IAc1hriVgfnezAxgHMncDYBXTcQMN9mOIxKO/ZL+zT88v6rnmRHfyJ7XO3
tfLtaZiT/m521stZh5/OKHg4vfgObxkazl99drxDrWhaac704vSZxamzi3bO
KdzCV5CIArXIeYVhiEwrCVxQGrCwzHdxuc/SCq9llR4rqtwEqpyxNY6Cxx1Q
oGYnfsFW4rKN1HVrmdtWsg+s5OstFV9Z4N+vITaZU9pW0yaA2ugEUNP/HVBD
7vztfgVq2l6gtRY01yFATW0DcqpUDgN6JIIAxqyPGxHro3wyyO5ALFsc66Nw
Omp9zEGtjwWod6sCzUM4BtiTgD3zfHlBpJTOX4o//f3dxeQu9A/U541p/zNK
jX3emCmnqFRXh689rFi5Q7Y4XDzPXTzbXP4Ak7iXTNkpQd+yhLlphkXSNLcE
bv9YrsgYroRwnk2BSDL/Hp+5B5AgkYVHXJYWOa0od8DW2AqfsBK7YCV5y0r2
iZUCJ0ik10x5aKUqGGqgfaB66BLjADX2ynIFbU/Q8gENf1ALApUwoEUBJR4I
7KW0FeR2gHQKiI+PURMatz4K/mp9BNz9EVz9IO51L66hU7CtTainQXTwrfTI
c0V4SILbdLiiBue04DgLKvQg3wgyTWGvOey0ha3OkOQJ0b4QGggBYeAZDfbx
YLUJ1uwYMEvtMDnQqJ/9mnH4oXLBNXzxabniCrnCHLkju2Vy4qUOBortdxdK
tRTaZSixVVM6iSKfIK8UJ0qIWUaJmqsewasXPm11OI9dOLdb2NR1oVyBIVPC
gqdGB06LC5ie5DsLAWrefCleKFBzn5/tsuiQ49ICBKhha+yQuQbnrCQur5FG
gJqp4mMj/HM90lsGtVFLtV1Tu1tTt1fduF/VbFDFckTZDmguQPYEoi/gA0Eh
FGSjQCoOxDaCUDLgdgF23yg2cxh7aECgsE+gvBtztBNT14650IK51oC5+17g
8WuBl8+x7x4LNd2TaLkh2xaOD//KhrU/yj6dVGrfqSY69//hbtlIj038MwRn
TF8yY+Yv02ctk1AOWJnQZJL8wSj1jf7Bl6xDT7UKH6pW3CXX3lSqu4I/fZZ4
9jjpfDnpYh7pcgbh6g6929v/0uNOnTrFvXQZ+fE7VKbdZ8so8o2L5KunyBeP
ks6XEc8UEE7m4o8dZEswRUSj7VQo2yZfskWuaJPEnmB+VcXly5fTaDS2nLSw
sOBewC+a5I+vPcj+K2xxRzxTzH5h5Is1bMX3JZn2mCPTEJD35AOlvoH6tJle
30o8dUfAK4iPQOVItknK9qPVFzeiSbL/PYpzKGLXzwjUMqivt1Hro6lokAj1
tJ3y0TXq5SaahbqMQ1qsTFW9DIrhAaJJGsF8L8E6leCYinfbS1i7nxBwgBCS
SYw+REwqICWXkFKqyOnHyDmnKQUXKOXXqMfuUM88ol55Tr39hvLgA+VJA9Ke
9qaV/r5dpbFDrbVTvaNLo7NTs6tDs+eTVu8nVKa1sWUac7iZNcpWah9ZwFZq
b1DrI9KkxkKU2j0W3GHBTdbYJDVOPv/xiSY1tbEmtUw67KfCHhpifdyq+av1
MXwlBKHWR2/U+uhgD1aOYOYMhq7AdB9V9Rgmeg5KefdhfXsWB3fOi/k0d3Mb
387mOfs+zj74Zlbui5l5T6YX3UfC+cvRcH4EqNVyV5XzlB+ZXnxwRtG+WUW7
5xQm8xVsnIsAtSj+gvB5RSHzi4MWlKxfWOq3qGzdknJvFKi5YapcsNWOuFoH
oRP2IqftRM/ZSly0kbxqLX3TSuaupdwjS4XnFkpv1hA+mpNbVo8DtZUTQE0b
AWr6eqBvCHorQc8MdNcgQE3XBnRQoMY+TzI8QNsbOVJq+iGX/whQCwHlcPRg
GYNYH4mJiF9LEbU+yuwEqZQx6yPSX5M1bn3kALVKBKjhjgP2FGDPjmAvDmKv
hgua/pd32l9MsZjchb53/Y81pk2UioqKyPZU/MkKpZoD8uWJUkX+4ofspTON
lfarkffI07Zj1TfzrdzI65jI4xM/NSSGKzaKe2PI9K0Bs3avQ4NEPOfnui4u
cF5W6oj2WFmLnLGSuGYl/cBS/gUaJNK5mjZgqjJqpI72gbLQJlBT0OMANSf2
PoEsKw5QUw0G5QigxgA5EQibQWHbuPVxPwijY9SECkDot9ZHwD0cxj0fwL3t
wTV1Cna0Cvc1iA2/kYVneHhAgVsqcFkDzmhDrQ6U6cMRY8hYBakWsMMetrhB
4lqI8ofgYPCNALdYsE0Ey61gvqt/VVq78cGPurkvNPPuUYouK5ackCsulivI
kD2yTTonWvKgn+h+J8FUM5EdupJbVGUTiYoJ0vg4QWLMYnrUTO0IXuNwHstw
bqfwqV5hXP6hU0JCpkQEccds4E3wn7Fp3WdAzWNeltvCHOclRxyXFTtgKu1x
x2yFT1mLX7SUumYue9tM4eFKpaeGxFe65A/a9BYt9U5NZq+mQb/6ykFV82EV
m1G6I1DdgLwWiAGgFAzy4SATA5IJILoZBLcDbg9g00ex2cPYvEGB4j6Bym6B
Y50Cp9swl5oxNxsw998LPH2Nff0M9+GRcPNdydYb8p8u4TttCeZ/u2HtT9J1
Jltov3n9u5378Wv36ElvtVt1w9b5tYV/k1lEi2lik8m2D0Z73hgcfKVz6Jl2
4SPV8nuU2tv4uuv4MxeIZ+tIF6pJF4vIl3OIV1Px17fe6HjyXz6LI9MksgpR
0+ODcZlWx5ZXpHOlxNP5hJPZ+Np0pTGNloxqtCTx3esXmaqzNdpv+unYv5yn
SUF8j6eOEM8Ujcm0K8cpX5Zpzz6TaY20+hbl+jbV+g71+i7N+h7t+j7lU/VC
XqGcVJNJxPaD1BcN2IBea/xvxH/9OMW5r+Z8VX+uEUXoDLXLqdQXSdSHIdSb
3tQLDrRaS9UKU40iA+0jDEaWmm4G1eAA0TiNYJZKsNxDsN+Dd03Fe+/D+6fj
gw8SInOICXnErcWk3RWktKPkrJOUvHOUsivUo7fH2tPQFBHK44+UZ03U1y30
d20qDR1qLZ3qn7rVO7s1uro0ezq1eju0+z8xBtoZQ23M4VbWKFupNbLgAwve
sZWaDqLUnuqgk9TGrY+cOJEx66P2eJOaOhSrjTWpTeTz7+BYH1mI9THKGELR
1Edfi3HrowNYOIGpC+i7gbb7KM1jSNFzQMynb0VA9/zwTv6ET3OT2/j2NM1J
/zA76/Wsw89mFDxCgdr1MaB29OTU6mruyiLe0pzpRekzi/bMLtwxp4AD1GL4
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
aEXs+ZWxnqtiziDcYwxbph1fF39kfcLB9Yn7vknY812i3fdJOzYnb9+SaoNN
Y58VLbizzXnvmvE/MBV4YrL1ubFQnpFIiZFYlZFEvRHh3YyhNp3MryczNW2o
oUEiWuqgpQWauqBpAJpGoGkCGuagwTHU0CwR1RlDTfEgcqpUOAZyJxBSC+mp
cUNy6pC2Gi8kqo7gh2QgiIVMo4/8V1Clho5RQ86Zc8aoIUN7HyPToLB5gC2a
wJaNYqsGsbV92FddmLdtmPefMJ8asS1vcG21vO3ZlPyDFkdzxdoeS7TeJbTc
JrUkU5qk1+t/hkF+9buQk5PT32aK4yr+23/SzSJG7E3p6/bUkMhHCSLp+TPS
ozjC3UDRzFP8yTtEY/QpN+Ulr4jLXNisHLDM7PzivT4LHT3nuZ2Z5316sf/R
5cH7V12yX3N91/pI2+9irDcnWWLTzblzTPkeGAm+NBIpNxZ/Y0xsNqL0GNKn
uUcdJmirgI4maOuCliFomYGmNWhs/9FQU2I/U0dBnv1AOYH0GWC4A80LyOcR
9FGc/Ryh6CPvjRn0MQ24s6fRR1we4EoAh6CPwPVxkqt9BNc3wD3azQdtwvAR
D28pUCMJpXKQpwSP1SBHE5J1IdIAIkzhog0E7gLf/eB+FJxOwVFX2OsO233B
MhBMw8Do2qh+VI9Gwidmah39djHx9iOJjFSJ1GviiQEicS6CUQd4r1vzXtbf
Gqos6i+F98GTPAUo7pvpZ1cquqGGmstCW5f5Ds7zjjj9/dSpeS4nFpw9ttjz
8FLfg8sD5hpquzZE7/jMUBN4aY4aakaIofZOl9ykSWtXlexTlhtRUp5S0gRF
PVAwAnlzkLUBaTuQ2guMg0A7DuRTQHAB8bMg4gWCfsAbBNxhP6KPXCmAzZzE
3hvDPBnGvBzAlPRiqtBO2A9N2NZGXNdrgd4akYFS/HA+ZeyZ5MQDGYSoSFaC
aFWI0ICL2hCgDz4m7G3S57MoyF/tCplbX2ULbQNa/7nPzzkgfZl2ZHNjCwNr
ry0daWX1ytyhxfgYqtTO97CVmt6Vdu2bzZqxn9SS3ytnNCjkvJF+WE97VkvO
qyXnl1KKS2klL+llzxkVjySr7knWZknVp0m9iWM03NJ5fyOs6Q4nk59WUYsk
PeY/or64TX4cT7p/jZAdKpHmLZrgIhR1TPDGAYEItkaz5blgxV7z1iytqqr6
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
4q0B8SVFuVlKv0HApm7jkbvrzt1Ym3pl8/UEifpzSh9cjYeO7Ia9J2CfF+w9
C3vOwZ5g2BMKey6CcwQ4RYHzJdgTA86x4BQHzsiOB+cEcE4C52RwTkF5bU8a
7EF4LRNDNoTXMHFtnbBCYWHht4z25MkTU1PT5fxSShmPZfPuSxXfkSy9QSgv
lq7IIt5IJFSFaD2u02qaoDYNUZp6ZZvayc/ekRteyDx5OoVpqOmRhWkZ0uXJ
hJJYQnEU/kqYZMEFidxA8ayzYuk+YmneYmleYqnI9hS9jGzkCx+xdF/xTIzU
clFSkyqMlLoag1ofyy5jgloeqfoKqeYay/dIultDvl9LfvgArS6pezoD096S
Gj8gmCbXiGKaYmOvcmO/auOAfGmDsHfEOro5q4fkr3+O/mI8bXr9WMr+37tY
z67/OV1qyM1nF1fAWbmmvfL3rRWv6VLiFFSCJTXOCOkf57E9znnEk8vdj/ts
ME9QBF9YrMClZKGETOG0AtFcFqbV4m/WEe41o5j2dCamDfwhprESapigpsx6
yvSHpDauBqNfzlNjkRo6TE3jd0jtMYvU1H+/+DFluk5Enj1JTRs86OBqMBVS
220NNuzWRx17NEEh7QSC+yY3HB1f5TW68tzg8vDupbGtS5JfL0prXJD1iC2o
Fc/Oy56bnbggLXxRUuCSWK+lcaeWxR1bEXtwRcyelTG7V8Xaro7d8VvslrUx
FutjTTfGG29ONORI1ue8zOROp/Nk0/jyaPxX9ASLdYXKdISrdEVr9SQe0yQb
aYRXdOJ7OrmTLttHlx+iUyZobN8j7VvfoyGGaeyEGoJpdLb1UdeOTWp7UOsj
OvWJFVJjZWpOss1a2N2SZX2UYvfzoyE1zPrI+5X1EWt95CrDRkHVsK2PqKA2
jnteJ1mBkFovrrUD19GK63nD1fecv69euO++WG+NZM91qa5iYmceqZ2y2vD7
CYgf6BQaHx//n/vmLIsR62vkdPqBroh/+2L5HkkP7pBqU/A3Twtdd5C+aqSQ
paiWymkSv9Th0vxjoXN8g2af954ffGxJmPPyyF2rIi3WXDLaGMvgSNThStPi
zdEUuKopVK4heltL4omW1CsdYpuezABNAc1+ovE0rEUEwTQDGoZphmBoAgZs
QU1/KzB3AGMX0O2mQmo6ezDr43RIzRWU3IDCsj6y6kQQUmNPUuOP+2KSGncJ
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
tWST2h2iSY2byOcH90ci+FEIg5LopuKxEu5ooEkHlUwUmyDPEql2SFqN6M0I
doPvQXgch9tJbArGmhg4nyUaaiwvwuDqoGrZI1p5I6WsmHI9TeZquMSlYyL5
W4Wy7KVSDOUSVGlR0gqhvKpBP+kHzLY5OWu174wtXtP3nvjmiOc3xz1meO/7
lh0kMul7jFv7Y9LqX5IJ3+OydPuV2bZcBba8xTYC5TbCtdZizVYSty2IIJFu
M/qgqcJbI+UxA7VxQc2ALahZQ88Ouk6EoMZYD60t0NgBtT1Q2QelQ5A/Ctpx
UHwg4w+JIIiGQTAKfOzUx1Tydoi0PnJdJ62PdWzr4xjnow+cL95wvRzmftPP
N/pCGI+kcFcObQqoV8VNTZRoo0Afbo6+nrY5cVYId0DQavhvxIntOLwH7gew
7SjWnYCzH+yDYBsBy7g3Jmf69dO6NDPvKOY2SV+snPbT71sfv/IWWvZiW4w6
J9ak6eh/1M7/z7k1qitrVRDdr64RZWh3w2JXt70fHCPglASndDjlwvESHEvg
UAa7KtjUw7oFlh2wuAvzBzDtgvFzGHaD2Q+DQei9gu4baL8B4x0hq6mTHkii
MY1U05QGWZgGhe73pJrWJ9f2hFJ/X6a8RbKwQiyjSDgufbGT9iJXGf79FJnT
svQQEcMcznU35x+unRNWNzv9V6SWTpLaSf6ePeLPnWW79OQfyOvcl7K+zbex
bdnBhiXBVUvSrnOUXOKtz5C+n6DYE6H55rQ+/C1x0hF+q+G7GT7b4bMH3vvg
dQheR3HCE8e9cNwXnv44dgrHAnEkBB5hOBSBA1HYHzsOa2wP5Koj9fTlLgyZ
AGOjSxYb7pvsfmJyrMfk5HPj0KfMmEd6SZ3aBKndUr7YSrvcLHOtXuZGpVxF
OfVmEa36Iq0undoQS20qptdX0GquUG9OYFoRC9NOS+T4iGccE0s7KHLOXfjM
LkEC0LYIxm4SYFXMRoHojQIxmwXjtrFJjXA/ph6TyPCRzAmQzg+TuRTDwjS5
0nS58hzqzYu0qiKhsFNLly79I0xjZ6HMWMzBwjS19pca7UPjmNb2a0wzJTGN
xWiWLbBqId4ANp8Dmn0zHJrhyKoWmBZ2iq879Csz5F8Vyz91ff3K/uRiN6mx
zZCTQv+fWZOhauzT0X/uK/w6FwtsFX80PUqtWyVfxFRMkFfx596yj+f4cb5T
pwRCQoWiYoQTzoicSxfLyJO4UCRZVCp1vUrmZhOltoPAtLbH1I5ntLu99M6X
Co9eKT55Q2Ia1PqhRpKa+iDUh4j4I/VX0BiBxmuiu1aDbQYgZ6ipTjVvT/Ca
+gSpffJAErA2SWqvCVIbe6k91q899oekxvhEatfIiP6CKcGPCQqIoiNUaXzm
9dQmtU2k9dGWbX3cBOUtkNqGle745fjYD4Fv50e/nJf0fE5q5+yMdragNj3v
8rQLudPHk/lPfR9/bG7cgXmxbgtity1gHRejV/8Q7fRztN2iKKslUWbLYoyX
xxmuTGByntHnTtblSdPly9Thz9URvKgjXKQtUqItVqEjUacr1aonc0ef8siA
+oJJH2AqjDCV3rMwjXWeZE7kPRrrwmTS98gmtUlBzWGC1FxhvApGpPWRGPm0
6TNSY1sfWadKwql1aDyff+oktfE4EXaTGnuSGtmkRvTXZBCHTHY+/+fWxxy1
GBapjXJ2kqHZz4dW9vZzDr7gfvWYb+Su0EiL2HCt5FCZzOBVuYGL1P5N3IF/
5lH9ynehv5zU/iEWo//pYh2V58hQaS119MYUqdpjtHJn9csaOrm89ufn7joz
yyd2emjo9OgTc+L2zI/dSJgeo0yWRemujNPgSVLhS1MWzFESLlQWvaYsUakq
1aoh+5BB69VReK03gWlGE2GPZgYTmGYKS1JQI0jNFhb2sHAkSc0FpqtgsgbG
60hS20zEieiTcSIEqbn/mtToJKnJBkEqDOKRBKl9Fvx4CTzXwF1Bxom0gfve
eJMa92vwjH3kwxthvJTCC9pEk5oeyg1x2Qw5VkhxRMI6RG5HoDu8juCgN3YE
ENNsV8UTgppdHkyL3jGu9SiW36FUVFHK8mWvJcpcDRArdBfOWyOWbiGbrE2L
o8uHiyiFcDACvzc/NcvZb+ZG7+m7vKYdOvF/jh+d5n1wpu+e2ad2zpn0Pcau
/SFx9c9nXRenOC0977Ai05brgg3PZRv+UhuhSmuRBivxdkup++ayz8ypA6by
b4zJploDDUJQM2DCwBT6pKCm5wAdF0JQY2yE1jZo7IbaXqgcgKIH5D1B9YKs
L6QCIB4MkXAIRJMXRMngPk82xl4kr4ZYG04VOQ2EsD6OcXa95+x9wzU0xPOu
nx/PRfFIGneoaFVCnRrxC6BYFwmmHSxSO2uGGGuEOSFwLfw24/hOHHSH2yFs
9cQaHzj6wz4UNtGwSBgxOtejm/5IPbuDfqF+2Y59f2R9/FvMNPz//nj9GVj7
VWPaV941/L9f+ak3lKWOauokMe1vmLv1OATAMZrwEjtnwfkinK7AsRQON2FX
C9tGwvNmdRuWnbB4BNOnMOmGUS8MB2AwDP0RktReg/GWNEC+I0envSHaQJQJ
NW2MwLQuEtNuPZOtvy9d3iJxqUI0/ZJg7HnOA4cXOcpzbKQIH6fRYuWU4kSN
clduqJl7pG5ORP3sjLqZJWxSK533uPCn7ozFL+OXv/Tn690r/mKV7BMD+kMF
xn1pqzsC628td29acrpmybkyjstXuWtzJO6k0J7Gqw6F6eC0MU7ZwN8J/mtx
chP8dsDPDb7u8DlE+Ki9j8HLCyd8cMIPx0lYOzoBawejsS8OexOwm5TVHLbk
Ka7coCsXZmpWYrGx09jtqYlnj4n/C+Owp8zYxwSppd3VyO5QudhOv9Iic71R
pqyGcrOSWnmFVltEr8umN56Va46k1Vyl3syTu5FGKSEx7UKARLaXWMYR0bT9
IsluQknbBeM2C8Rs4I9Zzx+9lj9yLV/EGv7I9QLRmwRjWaS2mxDUUo6IZ3hJ
5pySvhgmWxRLKTkrV5ZOrRjHNKkvqmmTYwVETTeyMU2rbYTR9ka39Z1+60dm
65hhK4xbYMIirxaYtxB+V8tJRmuGXTNBZ+xiM5oTq5rI12Y4s/6Vwk6xDYfY
Zkj2YIu/9h37n/ic/7nFltLY68+bkdiHIvZ99T+Q1NgO9iBq+2bqVTN6srym
P8+WA7zeXvynAwTDwoVi4kSSkkVTM8Sz8iUuXpG6UiZ9o1amsoVSf4fS/ECu
rYva8XwKpr1Vfv5RlcQ09QGok5imMQSNYaI0X0HzNTTfQJPctTTfQ+PDr2FN
baqyNimrsZW1UWiNjmqNftBik9ooi9QGx0lt7IX22NNfkRrjE6mVTRmmxo4T
SVYkSG0yTsRH97MmtQ3OcFkFqzUw3ADNzaBvhfAOLD2En/0+LgwbmR/XPzf5
6Zz0e7OzW2blVs/ILZl2oeCbnPPjyfxJXnNjDs6LZZ0Vty+I2bQwes0PUc4/
RdktiiQwbWmU8fIYwxXxBpyJ+txndXlSdfjSdfiztQXytYUuaYtcZYje0BGv
1pVs0pPu0JN9oE99ZkDvM1AYYhIt+WNM1QlMI32PJvpTBDXTKYKaHUlqTkST
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
jyPLN6/ncDVfslpnyTatlZ7aolHa1BQt1Rxlg+sUq1pu16b57s1z/VvmJLXM
vtAys6xpZmv9t/fK53VdIUktedmrMJ5BT5HB3VL9ztQeAwUWqT2lWHYKbHzA
7dbBcbKdI6aRI7eGo6xiZUuJcGeR9PML8kNZKu/PayFZF4mGiDVBlCWi7Ihn
JGItwjchfBthrg51R/BBBB5BwHH4s2W1IMIA6RGJg7HYmwi5FS4KkgeZRvnm
626b7ekx8eg2PdlnFtpnEtNjlPTcIO2pXlaXdv4jjaJOlWud9LLblKoOSm0b
taGV3lQn31qr0F6peLtc6X6pysMSlSdXVbovKz1NV+7JlKnxlSg5JJy+WeDM
OtFsN8nLnjKlp+RqIqgNCbSGs/JNaQotWYpt+YQed+uq4q3rih0s4rup0FGt
0FGv0NGk0NGi0NHO+g3S2tr6R6bHpUuX7lD+8aa1yAMdWoeMSTP3hjNaeca1
oyY1MKuBRS2samFdA5sa2NXAoYYI/HSqhnM1XKrhWoVVVVhN1hqy1rKrGuuq
yKoerzU5HasP+bJ4bS1bYiP9kOOda01wIWP8zS4R4tq3HL8/JvvLiy2C/2ce
iL94sc4/bFsRe30BTtlOqn/4KSjgSr6A/xHBEF/hqCCR+CjR5ETx82kSOTmS
FwulL5fIXKuQqaiTrW2jNNyVa35AbeuidTyn3+lRuDeg1Dms/PCNatcHNqZp
vQCjG9qs6oFOD3R7odcHvX7o98NggJj8yCrmEFEGZDHJQKRxZBsel9j0RsZh
jS2uab4dHzui+o6EtXckrL2fhLVRjfcfNN+/myQ1LTapfXzG+NhFkNooSWpj
n0iNQZKaBgpZpKZKjL0eH6amiOCJOBEPE+yzJJrUNjjBeRUs10F/E1S3QnoX
eA7iZ9/RBeEj8xL7v0979l3W3W9z62fmXJ+edWF6xrkZKRGzE/3mxByZG7Vn
XuS2BZEbFkau+iHU/qcQy0UhJktCmEtZmBamvTJSizNGkztBneeMGl+KGn+G
mmCOmtBFdZEiNbHr6uKVmpINWjLtDMp9bWqXLq1HV35QT/GNvvJHFqYZqBNn
HsMpvkdTJuF7JDCNLahZwNwK5rYwZ1sfHT+3Pq4d19TGDVrbpmhqLFLbR4bU
HSSa1CZJ7bdxIiKTM6/Zk9QySetjAZFZx32tQypjj9128uDUSpiRiMTsrvec
L15z9g1xDfVxv37K++a+0Ot2sZF6qZEKmeFiuaGLtJcqP1r+mSwR/E38RV8m
Nbbvkb0j/RGpTf02p15isz5mBx/9czYrdo8Ma5dm4a1gfAq1/bxiy36teiOr
Mr5dV74/nTczOW16WuR3GV4L0vf+mLJ6cZzZctbzFUrliZTiixMXPCchkiUl
XiAjVSInU0mjtCjSHqgo9KgrjTBUoKv+CdPMdGChB0t9WBnAmo1prDKCrTFs
WaRmCls2rFlOyGq2BKwRpOZIGCDZk69NSFIz3Dj+cI0Pv/gtqZ0cJ7VPmto5
8LKHqRURwY88VeBuIuNEHoO7h5x5PcYitffCGJJGN7tJTRv1TNwwRaEl0u1w
Zg2itiNwH7yO4aAftgdjbQxWpZCC2hXolQ2qVD+k1dRRqwrlypNYJxzR4j3i
ha6yOSbyaWpKSVIqUZyM8PmWId+uDpy57dR0d79pR32+8facfvLQt6f2fnd6
x9yQrfPCNy6IXrcwdtVPcU6Lkhw4ku2Wp9mszLDkyjHnzTfjLzIVLDERrjQR
azKVvGMq89hUrteUPmKiOEoIaurEJBFDPRgawdAMhlZg2o0LavpkpK7OFmjv
GLc+qh2AymEokdZHmg8o/pAOhEQoRCLHm9SIsNmpTWpl4KoGVxO4OthNauDq
f8818prn46AAekXxVAaddBRpd2x32lPFwHU9FBoii2xSi7NHxGoEbcTJHTju
joOH4eaJzb5YFQDncNjHwuYszNNGDLN7GPkPlS7dki6u+/KF0tffQvtvLPZe
xHplG5AmXdn/hC3oQkalAu2EhlGawfpm88Mv7YIIQc0pDS4X4FoM13JCSXFu
hGMrKajdg+2E9dGCtD6a9MKoDwbkTbXOABj9REsIG9OUut7Idw7SbnfLtTyS
rb4lda1aPP+q6Plcobgz/EEhPMePr9y1bdkGB441RkvWa3Ps1uL2Zkin6Cvk
MlRzlAxKZawbVq5umb+/ZW5Ay5wzrbPzW2dWNM9sa/z2XgVJarmLh84tGwnn
GTohMugmNbBKrtdQoUte76mcxQOh9Q95d97m8L3NEd7MkVXPUVy9vLGU/16J
xNNC6ssLSm8zNXBeG8kGSDJCnBlirBDtgGhXRK5HxGZE7ED4HoTuR/BhBB5D
gDdOnoTPaRwPxRGS1LYHPJdbuUpZ9oSR2RXzDXfN9/WZHu01PdVvFt5vEttr
dOYF8/wzvewnOgVdGkUPVK89UCi/J1d9h1LXQW1oozc3ybfWK9yqUbpTpdx5
U+VRmerTG6rd19V6S9T6Lqu/ZFFbrtLTDOWn2crPLig+zFK8n6V4N0vxTrbS
nXzle0XKnSXK968r3b2hdKdc8fZNxdtVinfqFO80Kt5pUbzTrnCnQyQx6Y+a
1Pbu3UuTWpm5efGLw8JdLtIEqUmbtHBvOKuVa1L9/5P3HlBRn9sa9/fdbyX2
aKIxiVEsVKX3NsP0Rp3G0EHAgigixhJ7jC0qNpAmKiCKgooIKoqKNAVEwELv
vfde3d+/zCBqjifn3uTceO679po1KqKw/L++v/fZz7NBlAXWWWCbBXZZ4JAF
Tlmw8jm4IJCeCasyMUbLhLVYuWWgtS4T3DPQWo+8mVwIuD1GMWpdbLE7Jq6t
y5b0Q+aiSSMTsppLPqrSCh5WqmDNkP8Sr31e90V4Pv8TbH3iwyY8LziH/l87
BdU2Nzteu6Dod0wp6LRKSKDqlVC1qKsat6I1797VSnisnZSmk5al+/y1Xm6x
/qty/bxqg8J6w+JmYmk7qbyLUtVHqxli1I2xGoHdBJwmMG5GMc0UqVYwawXz
NrQs2lFM43YCrwudKjJR3Il6H9km9DWc19iD6NgR5hDQhzBYG5bAGoZvzJG3
CKkxEVIbGWSP9LFHutmjHZzRVjGpjVVzEFIbR0itYJJP7T1So8A1EoQZQTAZ
ztLhpAn8xoP9IrFJzd0VnNeiA6+NPYG4GdR2wuKDMM9n5JuLPXOutn4VXTsz
tmB6XMbU2w+/vHVzamTI9PAzs0IPz76w++vgLd8Ee8wNXjsvcOV3fjY/nBUu
9ONK+ZsuDuAsPceWvsCUDWXIhdMUrtGW36Ap3qYp3aWrJNBVn9DVnzE0c1ja
+WzdMo5+jYlhswmx05TUb04ZNaeJJz3hsfxCrO8RwTQRD0R8iaCGYJoNWNth
pIa1PoowUrPESE0oufNHTpLcCVKbFPyImtT2iIMfqYfEnVq4SU0PDxX3F5vU
FCWT1OTxSWp3MZNaYptyPGZPi8Pc/QVoM5J01bh0/bB0S790Z7dMb5vcYN1y
cevjC+2+NN3eRwbddwid86cs+oMb0WexC32C1PBO7Aks/UTq2ieur/FTE96M
hG9W/6ktSZMxbeGGn/SL4sgFe01eWdhkLN3zZHbQvak3oqbdCvrq9m/zord/
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
p73lDu2R2bN52bZVS3+yW7rdevEu7tJTQsXLVgaPbRiZlhavTUUFZJsCVaeC
BV5Fcw8WzQkqmhVZOONh0bQXhVMQUqt8/nV90vy2ewv6bkgNhckMnFTq26vR
u0mvy57QxqY3EYRNOivrlDxrZfZUSZ0sXRRWsig6Tyolb3FutkxlllLjU+3O
FMPBxxR0iNE9Y4g1h2g+RFlChA1cdoTwVRDmjsr3F7fC+V0Q9Av4HwKf43Bq
gtRCgKr8E1Vtv5lxpOWqV5aba6wP9Fif6LXy67a62GN5uUt4vYN3u838LkJq
zcZJTcy0empmvVFOncHrWoP8akJRJbG0glRRRq4uR2iL2lhGby1ltJcxu8uY
vWWs/jL2YDl7qII9XIG+DlSykOqvZPZWMburmJ1VjPYqeksVrbma2lhDqa+h
1NaQq2tJlXVGFXXE8nrD0gbpg1sWW0krrvuRcuIrr9iZQSnTY59Ny0ibWfBw
rpjUTss171GpddCtZJKKtazeLPVKWhhmlwwOKeCUDM7J4JoMq5JhTRKsTQK3
JFiXBO5YrU+CDU9gQxJaHkmwcaKSYWMKWh7x6Oaw4UbxxqeYyoY1Rq7HYW1C
VstFE/tRTe01llGTD475YlKzxkhNUAbcMjArA+Pyce2Ihz8I7H43heNzVPb/
6fogoGCiB/sfffDnewqq7Wg9m/FEKQhhtNOq4YFq10I1bl7VjL2pde+OVsJD
7SfJuuJ2x/zJUhqhqNmopI1c2kUt76VXDjKrRtk1YFwLJnVgilQ9mNWDeQNY
NAC3EXiNwG8CfjMImkHYApZItYpfRfj7VmzCCFJtkte295CN3zGJ17rAvAvM
JqaQ9AK7D4U1+gBQB97BGmMQgbVxxtAIcwglNdbwZFKr5YxWchBSGyvgjL/m
vM1mvyO1eJzUyHDFCC4aQQANTmNxIgcsYZcd/OQM7qth5Tqw9ADWJtDfAjJ7
YP6JUXTadUTb7OhaTFB7OiUm/subkVNvnJ8VcXJ26P6vz239OtBjbuCaef5O
832tfjjDW3jGVMqHvcSXsdSfJn2OInuBLBdGUrhCWh5FUrxFUo4jqzwgqz6h
qD+lar6ga79h6Jaw9KvZhk3GxA4TUp8ZZQTve+Rix0uxPc0MLM1BJCE1KyFY
izBMswEbO4zUHNGyckJJTXyAlNz2898ntcljr3E3DROL6Kdhl/94RL/BCdQq
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
NJl+VZkT9oPl+Zlu56Zv85/6i++Xv5364sTRKWd+neG7+yu/rdj0tPVzL7p9
G7Lq+1CnhWF2Updtll6zkr5uKXtLIB/LXx7PU3zEVU7hqmbxNPL52hV8vUa+
YSffaIiPYBo2QI3HAb4ZCHggEILAGgT2wHcCvgvwsdZHi/Vg7omZ1LYC5+f3
TGriOyKs6Rq/IFK+iOn4EZhJ7TZmjMVNas/fN6m1g0zfqOzYgDxkGxZvW7mj
1gDKSVDAgBxjeGoOj/lwRwTXbVHTzXk3CNgEp7fB0T2w/yDsOAaep2FdALhe
hJVXwP4GiGIHLO63sR7XGKYUzeWY/1Mv7d/fQvuJhWc/4tvRx2c/vLETb2j8
n3yNf/Pz0uRlqPerkUkw0zHB7KcC4aEma98++zBwvgUu98ElCY2VcH4BK1+h
/WkORWBXCjYVYFUFljUgqAVuHXqPbVIHnDpg1o7Ra4YpVf1G5Z2GxU36+TV6
r8p0s/J0Up9rPUzSiLurFnlNJfS8UuCZFaePKBzdLXfAS/YXN5n9rjKHHGR9
HOWuOKsnuBKeOzNe2hvn8vkFbNtSA8eyFevKFv5cOvd46ZzzJbNuFM9ILJmW
Uzy1KG9G1Ys5jSnzOxMW9N2SGrmybNh/xcBB9YHtun2rDLu55CYit51g06C6
oXnFltrFR+oX+1ZKRVRI3SmRelq0JC9PuvqVYku2Zs9zg5FnZEihwxMOPDSD
eMzaGW0DkfYQ4QpX3CF8E4Ruhwt7IPAAnD36jtTWuD8ykvMyI57nih5ZuhdZ
bq+1/q3X5uyQTfCgdXi/KLLX8laP4G43N6HTPLHdJK2dndHKeNFCfdVCym8h
lLQSyluMqppJtc3khiZKM4JdTfTOJkZPM7OvlTXQxhpCDnXt7OEO1kgHGkcw
3Ime9AY7mP0dzN52elc7rb2N2tpGaW4h1Tcb1TRPxjTkTKsSevkHkaLcalmt
XT+YnJ35S8LM8PTpD9KnZafNLE6YV3vrh9ZwKYTUmneq1tjoVdApJZo2b5Zs
SV8Y7Onb53wHncuw5h6sjQe3eHCPh/XxsOG+uDziYSNWnvdh00Q9gE0JsOkh
eEQUr/XagSMbLrHhsOaRhpEapqyh6f2TSA3vfnTKR4MfcVJDWx9LgVsKpmXA
Lhullw9QKnqIFR3I/5IfHB7wSaz/Sw/NX7smkmaRreO/fSj6u21BZ9NiWRG+
KhePqYb7ql8L1rhxSTPmmmZctFb8HQmjPRMz2otCvZxS/ZcV+q9rDPPqiQXN
pMI2SlEnraSHUTqAwDuncty4EkyqwKwKzKvBohq4SNWgmMavBWEteolkWQei
OlT3t2pAI2qRQhOQGtDBIr9fje8KZzcrXIDDeiaFWMKtQBJyy21/B2vGXcDu
RmGN3gfUfqBgnZC0AQTWxhgIqQ0OsoZ6WUNd2EPdjErkI9UYqRUZj+dJSC2N
iZEaHSM1MlwiQjARfBlwAosT2WsD2zCTmjPW+sjxAt0tsPRX+M5neG5INyqo
3S6fEZeNjrq+cX3KteAZYd5fnd83J2jLN37rv/F3nedr990pwYKTpgtPsaVO
05ecIS/zM5IJIsqeJ8iHGS6/YrgiiqB4i6B8h6j6gKiWRNJIp2jlUHXy6Xpl
DINaFqGZY9RpQu43pYyimDYxlpcDlqYgMsPUNATTMEHNGhPUUEzDBTVcU3PA
uh8nkRpun7H8qPvRfLKmtgO79t+NDlPDSY2MGWoIk0hNIwAdPjs5TkQ+uk0l
EhW5VGKx++0Jk1ohNoK25q1044h0+4BMb4/MUIsc1vqoNvhSayBDt++JQW88
oftfyhKBv/cuhPzF/uu//uvHH3988ODBH/9dyJf/6WmP/9TI/99Yf8947YkO
KxzTmCVX1lRpRZZ+l50xuzhmfn7Qj7kHFz/1kklwlrvFU7hCWR6sgUppfgpa
ISv0opQN49SIj7SM0nRIOQbkEiNqHZXewWAMsZlgwgJzNvoQWXLAxhjsTcHJ
DJzNwNUc1ljAWgsM0LjgzoX1SPFgA158lNfwWifhtQ9hDeuBtMVvSCSyGj5i
frJVDSWRifhH5MlCMMQbDE6LSU0V7368DvKxIP8A5JMxUnuNRfTjwY8jII/F
iWhBOwFqGVBsAjl8SLaG2w5w1Q0uboGze+G3o7DLB7wuYILaHbB7AuaZg/SX
9YTXuYa5d/Wzzms9O6iavEH3gY1RDIsepcW6vIR38atVwTN+Cpq212/KkTNf
nPD+8szB6b57ZvltnxPg9XXQhrkXMEwLcfox1E4q3HpJhJV0lKVstED+Nk/h
HnfFQ65ykoVqhoX6K65WCU+3jmfQzif288lv3wWJmIDAAgQCEIhAYAMCBxA4
A38V8NYC1x1tfURIVmxSw4Y5MvYCDZMdjXCYxaX8AHGcyPJwyXzwWLRNFJ15
jZvUXmG91pW4Se2t7MCILNSqo2SRQS2uIUApBfKY8MIE0izgoQBirdADZ5gL
nFsPZzfDyR1w5BfYdxi2eYOHD7idA5cwcLoGttFvhXd7TR82U5MqdZ/mf2wj
/Xh9dg1+kxfOaPj63T0Zbzv/tD3kj6+/+a3Ref8EAtmbwr/KXJPG3VMp8u6w
CRp2vArOceCcACuTYWU6rMwGp1fgkI8FPpSCdQWIqkBQDbwa9BLbrBbtPmLV
jNOrh6kIplV0oZn8BXX6byr0sgt0n2VrJ6VpxT9Qj76pGnFJ+UKAkv+JFad+
VTi2Q/7IJrlDbrKHXeR8XOXDVindWa2dupry2pWTb2f2hicsYNmV6TmVK6wv
X7izbN6J0tkXSmdFl8x4gpFacd6M6hdzmlLndz5c0BcjNRKxbDRoxeAh9cGf
dfrXGvYISC0k83aCdaP6umbFn+qXHmpYfLpa6nK11O1yqZTSxblFSyvz5Ztf
qXXn6A4/J0I6FdJYkGSCToqPF0KcNdy0h2vOELEWLntC2Da4uAeCDoDfUTiF
kJo/Ovna1SORunwnhxzMt0u13Fgu/LnW+miPrf+wzYUh6yuDVlH9ljG9gvge
3sNu8yedpk87OJntzJw2+ut2cmEbsbSdUNlBrGkj1bdTmtooLW20dpS/GL0I
iyFE1oW2S6GRcT1YcBxSvazhHuZgD6Ovm9HTTe/qonV0Ulo7yI3tpLpWYnUz
gmkGJY0GhQ3osfZlnezebQutFJavl9X95XtuwKxDj2deSZ/+KH3ay7RZJQip
Rf/Qdkmq7YRC8w61Giu9ChqlWMMWJ7VNp3pcbsHq27A2FtbFgnscrI+DDXHg
cQc2SsoTr7uwCa97sCkeLa/7sG6XNwJrCLJt+hjWJstqCKllwxoJqTlLSM0W
M6lZlqCtj+alYFI2ziwbopb3If+iFm3c9vFF93+Gsv+7C98x8K3jf74L/e+e
glARLStRN+KI6qVTahEB6lEXNaIva8ZGad2N0X5wT/vRI52kFJ00VEfTfY4z
Wokewmivqg3f1BHzm0gFrZSiDlpxD6Okn1U2zCkfM654a1oBZhVgXgEWlWBR
Bbwq4FejO5KgBoQ16CWSqBas6sAaKxtJ2dah7lrbOknVS2rifYPkFQM3XHGz
agJRE1g2o4XwmgArFNawoSTmHWDaKYY1Zi/QMFhDCiW1gbeMgRHG4CBzsI81
1M0aaseE8gaE1Ngj5ZyxYs5YHmc8Fyc1FiQyIB4hNaqY1PCIfm9zOGgJu+1g
izOsWwOOktZH1R2w6BjMDxr6JqITFdRQh1rqlJuxX0aGoQPUzh+YfW771/4e
3/itnudjP/+U8IcTpgtPsKVO0pecJi/zJUoHEGSDDeVDDBQuG6yINFSMNlSO
M1S9T1BLNNJ4StJ8QdF+Q9MroRtUMwmNbKMODqnPhDJiShVjGt73KDQBSwTT
sL5HK4zUrPmooGaDkZqtNdhiJjXkxIgfGsWk5vIeqeFjed9lP07W1CQ+tYmx
1yRs7LWh97ug7HdxIjipoXEi3qIdxTqXQe4J1vqYITGpFWNX3LXj0s3D0p39
Mv2dMsONCsMVKkP5GoPZ2gNpen2PDHuOqNz9l7JE4G+/C+E3z1988cU/Cn78
Vxcu9+MhtH/KJ/xg/X3GkUwMI8Axzbr0yvFq6Wdv5tYmzqu5tKj4+NKcrXKp
q5bft1wRzVoRrq94TlXJV0HDX143fIXhTWXiPXWjJC1Sph7lDYFaTqI10hhd
TMYIhwWmLLBgo0+QiAO2xuBgAk6m4GIGq81RRltnAe4WsIELHlzYyAVPrJA3
G3loeSDFR5FtvURfQ2Bt1WRYkxjWcFnNGktbxQN8+OuAu+H9UBHsGoSKBfUT
j4PhadA9C5r45OtJpCaXjI29foNF9GPBj1icyKgK9OpAixFUYya150J4ZAO3
nOHKBgj+Gc4cgIMnYHsAbMQEtZUJIHz6lp3bSX5TQniVZJAToZN5QiNtq9Zj
J6O7ZrSbBsyrchZh85wuzNx0btrugCmHfb84cfKL04en+e6b5b9jdsBm1Gx7
ft28i6u/C1n5Y4jdokvWS66Ill0TytwQoJh8x2LFAwulRHOVp+bqORaahVyd
Kp5+M4/QwyeN8rG+Rx4LNdXyzUHAB4ElJqjZgdAJBJigxnMD7kR3KGZSE5Ps
PvF8EHHoCh4nguXNKuG5K/h8cCxORC4JE/FffGBSeys7NCwHR628o0xim3Sh
mgglNHjNhixTSOHCAyHcsoGrjhCyGoI8wHcreO+Gg7/C7qOw5RRs8Ic1F8Dl
MjheB+vbo7z4Ls7jBqPUsqW7D/4R6f/fbKF9+/Ztenp6cnLyyMjI//yzTcyf
xRP7P0gUAWwv+it2ob/hrRHyV7LkniFyAig2McaeOfwDtaigFgpON2HlXVj5
CJxSwek5OOWAw2uwy0dz+azLQFQOwgrgV6FX2WaYSYRdPc6oGqZWol1qhNI2
/aIG/bxKvZwi3YxcnZRn2o8SNePi1K5fVbl0Xvm8r6LfbytO/7L85M/yxzzl
j61T8HVbfnHt8lvrVB+76WetYRS7mhbbcYu4lgUM+3Jd50p5j4qFe8rnniqb
HVI261bpjKRShNSmFefPqM6e05Q2v+vRgv5YqZGry8bPLx84rDa0U2fA3bBX
SGqlmCGk1qK5tkV5c6P0r42LT9YuDquRiq5cnFi++EXpktIimcZ85c7XWkO5
hpBFhgwGpBnDE3N4yId7VnDLDq47wdU1cGUjXNoKF3fDOQmpHfWH/eeBb+pP
V97PogXzHdNFm2std9VbHe+1DRy1DRmxiRiyujEoiu0T3u/lP+61SO42fdZp
/LyTldvJyOukFnWSyrqIVd3E2i5SYxeluZPa1kXr7Kb3dDP6epgDCJT1oTU6
wB4dYI0NsEYHWSMDzKF+xkA/o6+P3tNL6+qhtneTmztJDR1Gte2EqlbDsmZU
TctrILysI76o/tGZvdhOTnmLjMHh7yyDZx1Lmnk1fXpixrRXqbNKH8yri/6h
HSG148ubf1arEelVUmkYqW3NWHjulw2NqyJhzXVwuwHuN2F9NKy/BRtugUcM
bLyFluct2BSD1W3YFIuWVxxsuoMi27qd3utPxiK85pUAXgis4f2QE7CWBh7v
kxo+/xqdpf4GixMpEJvUhCViQY1Tjgpq5PIerZSXv3t9hIf//Nselj93F/r0
+osu6vEt6N9zCqrrbj/7/BEr0lc1zFvtip961AWNm6iIpnXnplZ8rHbCfe3E
RJ3kVJ20TGSXQBhNF9PR9HIxRntdR8xrJOW3UgraaUVdjOI+Vukgp2zUpHzc
tPytWTmYl4NFBXArgIdsRJUgqAJhFVhWoTdIVtVgVQM2eNWir7Y1KKDZ1XxY
9shP1qKv4jd1YDepEGSzqUe1NnRkJFYizOyGlBDLJ+G3YqNJ2sC8/R2sMXqA
2gcUjNdoaNLIGGNgiDnQzxrsYQ12sIZa2EMN7OEa9kgFZ7TYGCW1l+y3z3FS
Y6KkFkOFSDI69jqIAj5sOG4BB0Swyx68XGDtWrBdj076IWwBhf3w45m3c0MH
5kS1Yg61F9NiEqZERky57D/zwpGv0L7HTd+cXTPXx2H+ScsfTpj96M2WOkFb
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
08eo6qfV9hs1DBh9GDRuHULX751oYC69FxgYpg0gEU+wRwYapDtE6xwwaesz
/thj1NBpWNum/64FYVoRhmnVlIwKSmIp5WWe3sMMvZjkqbaaM53nKvsoGYXM
tLowcc19idNJ428lj01KGZMXK/Xm4c/vr/7WHCmNSG2tRpWV3hsDVomaC0Zq
qdNDbivGb1sw4OMHaw+BTxCsPQE+p8DnNPiEgU84rI2EtWdgbRT4nIW152Dt
eVhzAZb6xSxeH7jmCqy5BsOwhsw1ogzyMW6rjSiA/JLUctH0B6cCVPoowE7j
JYShhjrUDMtb5fcH/8HEkO8cjv237ELY+t3I2a/LsIl8XaKz7C//Xd++iO7d
5cuXM5lMHo9HbEHR0dFu+NoTfGj/xUivJ1e8nt1Uv3xC4xrGZREaN6I0b51H
aHbnita961oPbpMe3kMNaE+fkp6/JL2KJ8Ulk16nIUBLzNZOytVJLtBJKSan
luqlvaGmVxpkvjPKqjXJqqdlNzJyPrJyWtm5HaZ5Xdz8Hl5+Lz+/36xg0LwA
LArAshDtPJgERUjCImTu2xWDfQk4FINjCZKTWM64XHC5fiW3UlwluErFKvsk
At9cxI/OuBknsudwanOoBPtKsKtCvCasBgExU7IOLOrBrBGHtQ/AwmCtdRjW
BukdfYyOLkZnO7OLKICsZfdUsnvLOP2FnH6M1NLYQ5+RmgFE6KOI/oM82GsD
W/EmtQWLwB5PfdTeBrMPwOSwnomXm5Chdjt5zPW7o6PDx0YdkgjdPiFk9aTg
BZMPO/50wHIahmn+JjP360sHkmUPa8sdIymc1FIM11I6qzXvkpbydZJKjLbq
Q13152TNeIpWmr52rqFuibFeJY36nmnwkWXYwTHu5ZqIMO1TexoPkZotH+zM
kJtmj8kSHKxwQ43ICbdFlVeOdqIMOgzTiFG89rinZuchIjWhNyqAHFn9aL7i
E6kR1Y+szaLqx89ITTxMDSM1tVMwH001imHtxUhN3DDyCI8TiRfHZROlj+jg
NCj3sUeuo02ut34OKn0sVO/OIHUlkDufUdr3qdzDXoDD9xXf3kv+v7IL/fDD
D39MaiDeBEa+h3DZvviw4Vja/0qsHFE6jn1V0yZMEurRPS1tMVgTMjjmCqpa
ElO0JCdNGTWKKCn/lkae4YXttMP35Nj+/JOlrY9/43P1ssJZUYWyWzIVvePn
2j2bZ3FvLve6EvO8Au2UvGGQtNHl+SZ3lOnP1RmJJEY2mVFCZb4zYjbRWJ2E
lcZno640GzbYccCJA26m4GkKC7iwBGM0HqzkwWoerOXBOj6s58NGPmzmwxYz
pK24thEyF725xRw2j0Q2sb+2Gi+GXIaH+ROw5mYFztbo9eiAR7ASNZACIq5/
OFeEGO5MtKrhthEaqRYEpBBQDwflc6AkJjXFYVJ7B/IfQb6XILUObWgwgrcc
lM8fiw+8vrgYwjbAYV/YfRgZaosvgsd9sI0D08x2k7wyat4rSvZ5UnoAKXEV
5SVR96hmfvkX5/M/rooctzNsTODJUcHBo47vH3dil8SpzRNC104KWz4Zw7Rw
D4RpEQjTpKMsZ0dbyF02U7jGn3OLO/eeqfJjU5WXpmqJXI0sHqmYr1tlRmk0
1++0+LruETfUBLYgcAChMwhwQ204FdNy+WdjwTni1Fmar3g4SKCY1EJQnAjK
myXiRK6Lbofk8T1HPg1Fr6Cu2CqQayjWygwUHuiXh6650KIB9WSoMoQSOuRi
50wziLWCh0LUpBbtDpFL4OQaOLoJAnbBLn/YdBhWnYDFYeB1HtyuguMdsHnc
yXvZaBRfIbvdb9j6H75iHS7MG7llfecWWmI1NDT84x//wF6e/1Le7MhF1GAT
8bPEjvQ1uw2v/0pF4vD6zw1lG8a0e7fTqPQjBtbnTTwfctalmfmWWB+ts4vs
dLjc73gbHB+Aw1OwjwW7BLBNA9scEOSBdT5YFoBZ4RCvqN+0GGEao7STVtZu
VNpMLW4gF9aQ896Ss4t103N1UzN0E5N0Yl9qP3tIenRb6+5lzVtRGtdOq18K
Ur98UO2yv/pVX407ezSe+mrE79TI2q5VtJnydj29bjWvbrFFraugVuj43tS1
1sCzRmVptcz6qp/2Vk48Xil1oULi3tvxcW/GZpePLS8eV5MzoTHlp9ZX03of
zxi4IQPnFYaOq/Tv1hpYT+711O8yp7WbmLfpO7VqL25RWdeisKtF+nCzdPgH
6asfpR81SSc2yuTVyVS/n91SPa+/QgtKKVBgAjksSOdBghW8sEXtsbfcEald
WINI7dReCDoIAcdhexi4ro7Tm7uGbhjEt31svbTQfleb4+Ehp1PgfA6cLoPj
LXC4D3ZPhmxfDtrED1gl91tk9Jvl9vMKB0xLB9hvB5jVg/S6IZMmMG4GIzyC
ACXFYZjWB4wBJCb+iN7swwmuCzvyDRi39Bl96DGs69SvbqO8+UAprtPLrdbL
qNBLLNVDmJZOvpWg7HdkqoPGLOc5alvm0CN/c7w5cetziYiU8XdSxqamjMmP
lXr74Oc6jNQipJv2zatfo1FpgZEaGye1DanTTzyY/eoos2nbOti8BzYdgE1H
YOMx2HgCNobAhlOwIRQ2hMGGcNgQAevPwPooWH2seNGKTWsvwJqLsOYyrLkK
nzlruK2GoiCfjyC1RFicAgvTwBsjNXGTmmMhXlhbjBtqZYPM8h7jN+3UNx+x
l6efn9/v/vwTP8l/1+viG9e/vwsRWUZf7zlfn4j+09ss9pVERkYS6QHEwe8f
40aPmTll3Jzfxs+Z/ov2HHULYyt3B+wUhH3AdDnpH36WwD5m9M+/SMyfP4VO
k16zSuvhfdKjh6QnT0hPn5GevSS9eE16mUiKTSHFpZFeZ5Dis7QTcrQT83WS
CnWTi8kppZSUN/qpFQZpVUbp1SYZ7+mZDYysD6ysZk52m2lOBzeni5fTw8/t
NcvtM88bsMgbsswDq3y07djko2siYQGy9e0KwR6XQxGqmHXC5YzLRSzXEXIT
y70Y3ItwFYPHF88xlSC5EY+l4CqWSynuxIntOSeitPIt6oCzq8Rh7R0aB4Bg
7T0Oa7izxsFhjd4KJgSstRO2WgezswXN4OiuY/dUsXvLOX1FnP4c9kA6eyhh
mNSM4SJGakZwnIGCH32FsNkZTVLzWAKClUBbD2q7YPrR7knnWqVu1P4Ykzv2
9vNRF6PHnA3+MdxXKsRnYvCiSUecpwRaTfXn/LbPeKa/vvQBXdlDJLkgTYUQ
TcUwDaUojXkXNJWvaancJqk+0FF/RtZ8TSGl6uvkGJKLjPXe0qi1DIMmlmEb
x7iHazLEo+PT0zBMY+OYxh2BaeYjMA07FtqAE05qTiNIzVHsqTk44wWQX1Q/
EqSGxz9aLsOzDj4nNfYwqe0Go89JjRQsGqamHF6sG7zJZQUR/AgK9/DW/pfi
SWrZ4sFG1djBaUCupVuuq1m+t3Zub7lKT55md6p2Vyy58xG1nfaLw7AX88X5
5w9+Bf8P7ULfQmpfLMJl+7oilCCa4QT777aI3l6J//tBfeyvNhIqrhM0XSaq
u0xUdZmu5U5le1oKvZxcnPXpdkrq7MlTNSUnEMj2Lbw2jGnEsXDWIp+le7vP
mLS+ln2dPj0kefqml9ILHs92ipGzviJnFiXLCZGmh8nSb85lYIyWoMXM1GUW
UZiVhqwGE1Y7k9UrCnhkgTUL7NjgyAFXDnhyYIEpLOYiRlvFgzU88OHBeh5s
4MMmDND4sJUP2/iwnQ87cO3EZCZ63GGG3rPdDGkbjnKbxbxG+GtrcFhbbiGC
NU8rNBEbwZrwM1tNILbVUMjhGtFUNVGr2j4EI2ikWghohMP8s6B0GZ+n9lhM
akWI1BSaQWEARfTPhzZdqDOBUlNIt4Zn9nDDHc6tgJCtEBAAW47DsjPgfRNc
noFFSj8zt9agII2ae1MnM0gzZaNenJvJEy4rhmR2bZbDRYllUeO3RYzZf3rU
sRM/nAgce8JX4tTWCaE+k8JWoEz+cI+p4c6/YZgWYSN9xkL2vLncRb7CVd6c
m6Zz73CUH3LmP+eoxnM00rlaBTydt3y9ejP9VnPDfosReY/WRN2jNQiEqENN
6ARCFxC4g4140pyI1FbhpLbuU5zIJ1LbjzBWD8/GJEhNFPx4GQ9+vCuOMEoE
+Qy8oa8M23CalEuxDaRxfn2fAnQqQ7Mm1OlBpREUMyCbC0nm8MIGNalddYLz
XhC+DE74wOGtsM8XduyH9UdhxSlYEAmeF1FqhP39Qctnbey495SkcgkN0tc/
0r+7Zf1X7lJOnTqFbRqjRo2qq6v7y59kZD4/QW3/zCgnTHDieu0v/3X//vp7
JyIRv1awz4n9j9bSXk/lhxo53WIuj+NuybYIeCsIabI7321/rd/hLjg8QVk9
9vFglwzCDBDkgHUeWOaDecEQr7DftKiXXdzNKOmklWKY1qJf3KCHMK2CnF2i
m56nm5qpm5yqmxivE/dc5/l97Uc3SPcuasac0bhxSvPmcc1bRzRuBmg+CNB6
4a+V6KeZ6atRsEOnfLNBzXp24yqzxkVW9S7C9zaOdRzX91SvWuVl1TM3vJvs
VzUxpFLqYqXE/Yrxr9+OzXkz5k3puJpcqaa0n1pjp/U+mTF0SwaiFeDk/MG9
WgMbyX0L9LstTTro/HYDhzadhW1qa9uUdrTJBLZJn2qRvtQqfbdFOu6jTHaT
TEX97I91c3rfqcNbMpQaQgETvYhSLCFWCI8c4bYbXMVIbS1EboWTe+HIIfA7
AZsiwMwiTF91C4sexrd/YrWs0G53q1MQOIeBczQ4X0O1ow4PwP4Z2MYOCRKG
rFMHLbMGzfMG+cVD3PIhTiWwaoDRAPQPYNICxm349KUeoBGYNiiCNQZuqGH4
RusGWseQcUu/UVOPYX2XQU07taKZUtqAih4RppWQn2fr3k/RuR6nff7xTG/7
aY6qsu6KWr6KrPPT3GIm7n4lcSZl/L2UsempYwpeSVU8+Ln+ym/N4TJNfvPq
V2tWYaRGNS1Rc82X3pA2/fhTmSenDWr8Fnbs2AzbfVFO7NZDsOUobA2Grcdh
SwhsOQWbT8PmUNiE8dpJVAazJrh43XlYGy2GtWFn7Q5eA/lQXACJJ0Aue42T
WjJOapko+JFoUnMoREaJVTHwS4BT2kcv6zQsb/nZ2o7P54/8+R+57fxXwrH/
ll3o6/W7J6L/RJH58ChJbOv7x9gxP0yRGDd36o9aM6QM5aYI1EUS4rJV/8kO
SdpRx8CNa+Vp7+TtyvGwUrLRmaA3Y9zsiaN/GT966rRfXb0Uj4SQXqWRYjNI
cZmkuGzt17k68fm6CYXkxGJKYik1qVw/6a1hcqVRyjvj1Bpa6ntGWj0zvYmV
8ZGd2WKa2cbN6uBldfGzus2yes2z+y2yByxzBq2wDScHbHJBkAvCXGToY7LL
B/t8cMC4vgCZsIScC9DPDyHXAjTuwa1AJHexPEbIk3hSKH5eKJI79lgkEgZu
biPkWoz7cTi1OZeBUzmS4xtwwANMbKtAWIXDWg0Oa3UI1riNCNaYzUDDYY3W
LrLVmB1trM4PqACyu5rd84bdV8zpz2X3p7MHMVJ7gZPaTRO4aAjhRnCMiYIf
d9nCBldY6g0uS1ETl/5WmLMPfjrdPenyB8nbpePvJI6+dnPM2ZPjIvwlQzZO
OLZ00hG3KYE2U/1Nf/MzmbGPKh2gK3tQS+6ohvwJdcVQdaUz6vMuaChf1VS5
RVK7r63+VFczTo+UQtXJNiAXGum9oVFrGAaNLKNWtnG3qckg0Z72KUVEjGkE
qdmbg4MFOFiCoxU44tVWiNRG2mpfkRqy1dxF8Y+i6kfxSDULnNQIT437taeG
k5rBPnyYmpjUNAhSi9jksrxY5wTeMCJu7ZcnQtjSxfn8FXjPSFO/XDtKfVRE
pY8laj1ZpO4k3a4Xeh339dv+WYf+F7+Cvzj5/A/tQv8SqWF7EXF39LuNe9//
rp4If5P4x2iDMXM8JfQ9JCgekrruktpuUlquEzRcJ6q5TFRxnqTsPEPdVZ+J
8ZqXk7OzgYntXFUNyQnj/vEPDL7+ICiGqKHC9luiyEpx59EFB3uPWnfcUc1/
NePGq18Dn/zqc++3BTdnOF2caRM6g39yFuvmXNYwoxVSWBWGrDoTViuT1cNh
icodrVggZIEjGzGaBwe8ObDYFJZxP2O0jTzYzIOtPBGd7eTBLkx82M0HXx4u
/idh79yFi0C2bbjLhnjNDNVD+uAhJKtwWCN61jzxhjWn4YY1J9xWw10kIq4f
FUD6oG5Q1la8G8sPDA7gI9VOgEYYzI/CDSOc1BReg0IGTmrVoNCCgh8VoV8N
WilQTYdCHiTZwENHuLoQItfC0V3gewjWnIZFl8DjAQjjwTSr2Ti/UD/vkV52
qEb6TnLiQuMXFqz7FN5NOfvLExefH7/lzNiAsFHHQkaFHB57cq/EqW0TQtdP
Cl85JWKxCNPCMUyzlo6wkD1rJneBp3CFO+c6R+k2e94D9vynbNVYtnoqRyuX
q13GI9fyqc3mBj0YplnQUd2jFUdsqFmBAA8SETrgpOaKkxpe+ohIbSkafoJI
ba14fgGROrvzM1LDMBaR2klQGxH8qDh8O4TtOUkgn4k39JWDfE2gwL+YlDMk
P9Q7B9pV4AMJ3lOgwgQKWZDJgwQLeCaAGHu47ApnF0DoSji2AQ7ugL1+sO0g
+ByDpaHgfQ48rqDzpPBRn9nLj7SE6jknz/1plsjwlvU9gx+JVV5ePmvWLOwr
XLp06b/5qYizCnY0+uOblu+WMvSN699HNuzbIagTO6fJaztQWcEGwkv0hU/Z
61L4vgVWR6ptI1vtLnbZ3+xzuD/k8Bzs48AuEWxTQZgJNjlgmQfm+YN8AtOK
upnFnbSSduPSFoPiRr3CWoRpOaXkrEJyeg45LZ2cnKSbGKsb+1Tn+V3tx9dI
D6K17kZq3T1Nuh+i9SBI69FBUuxB7ZRAUnaAVtFerfKdeu+2mDSsN/24yuLD
QpsmZ7t6a6d6llsdxatWaVnNbxurJ/m/m3CySupSlcT9yvGvK8bmvh1TUTa2
Nl/qQ8aU1rhpvU9nwB1puCAPocrgrzm4SXdgkX6PjXEng9tpZNdB9urQXNWp
vLVzdkCXzPEOmfPt0rfbZV62yWS0yJR/lG1olO9+rwLvtOGtPkpPzTOFdAuI
F8JTR4hxF5PaNgjZBwePwK6T4BMJhhqbjLX2cDjnzJxfWa0otPNtdT4BLpHg
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
oglreA0k9gIUhUCuQLkiXKIA0heM/YGKIQke/6h8Die1B3hKP0FqDaDQC0rQ
pwZN+lDOhlQrlPp4cQmc3Ax+AbD+FCy+Co7PwCyji1ZQol/0SK8ghJyz0SjV
iRtnbPFYwe3O5HXXx/tdHBt8dlR42KjIoz+e8ZM6s3VSlM+Us8sJTJseKpwZ
ZikdhmEaWy6CIX+WrhhNU7piMve6kXKM0fwHxqrPjNXjTDTT6KQ8ps4btl6d
qX4rz6jPzAS1CorGPmKYZgZCC7C1BlsB2NmCPfZdO+LfOE5qtl+TGt4hyx/R
p4ZIbbeI1AwIUgv+jNQUL32K6MeDH4tJ9za5+ID8G5CvBflmNCJcAfrmQIcq
fNSBWgN4S4cCU0g3hzhreGgH113gvDdErICQDXBkJ+zbBzsOo9LHxeGw4AK4
3wCn+yB43sdLaDZIq/6Jb/Ut1v//D+6xhxdxdzRyfybe88VN/siUp+/+Nf67
C/vi165dq6Cg4LRjr+fKDe5rTzk4hVNMT1CF0UYeMfSVz9hbknj7ci2OvbUK
r7GObrS53iK412HzCF2AW8f1oGHNyd1maV38jE5uVicnt52V30bHMK0Iw7Qm
amEduahGr7CKUvCGml9CzSuk5uVSczOpOSnU7ARq1itq5jNqxkNqxl39zNv6
Obf086/pF13SL7ugX3FOv+aMfkMYpeUkuT2I0hVo0OPH6N/J699k2bta0LPI
vtPVqU3g1mrq0WLg/VF9yQdZn8apuxsmBdVPjKyTuv5e4sn78cm1Ywtqx1RV
j214I9lSMLk765eBhN/g2Sy4KwuXFOG0KhwkwXY9WG4AjiZo7iRLADRXoCwH
7Y2g6guKR0AuHGZfA9nHMDsJZheBXO2QXCe6+lCDD3jwbAlPTGpecHEVhG6D
QwGw4zisPAOu/rnkOSupurtpphF8j3jBplqnw+AaBm7RKKXH/R64PQXXWGQH
OKeBYzYKFbcrASF2cqvChy7Vg0UTmLcAvw14ncDtAU4PsDFSw4epod40HNOM
2hCmGTYN6L/vpla26pU06OZW6aSVkmKzNTBMu/Z4ftSNucfPKh4Imb09YMaS
NdPszac6Gkx115ZeoKq8WUVrjyI9YrrHw5/2pEiGZfx4O2NsQsbovOQfy19M
rr07DZHaSbkPu1XqFmrXWFArqLxydZcimfUYqSVPv/FiduotUsVZWkcIH4Js
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
ch7Rec7oVBed7oJyFLIxostwoecQWkoUch7BZaQhjkE2kmRyhcROUrzmd4O0
XvpUEickdeG71cCllsCaPQ1rli9gWg9hIymriUlZrcHszTOz9vvm76rMP5Sb
fyo1/XJcTEgtW4hNFljmjDg/RITDKQb6C96PTHvbf++z3vll3Xfl/bJ5Re/E
Kf1W+w1YKv0tnjd8nvbI+LFjlqmorlEdt0lNc/M47SwN3e3j9fZoGxTqGh7R
Myo2oDCN1YFpvG8xzUL8uTPssRPT3K3gQWOatw18bOBrAz8p/G0RYItAO9L2
wiiQkQMRA2v+XYtrnbDWWVaj90sdsNZpgKTnzxJSi4BtFE1qE2A1mYxU6yC1
ORDOZ0itwG4GRWowWP+V1FQ7SY0JfmRmXjNNarVQfEynPra+UWx/pfzhgWyM
2hmTtqOcN39XOH/XP9t/rscmzOrRo8fOnTv/+Os75zD+dPhs14dI/8i7Yv4r
3X/pJhriazs8yn5YpMPQCKchES6/hXcW17z6M8W1n/BakJx7kJwrhWzBck7B
co4UsoXI2YXI2YYw1CZnHSpnFSpnySiMyII+WobLWYXLWVPy7CVS7z2oeKYC
ssYieTzW6xBPznJDLDWqX8ArmGJHstrC/Qum2NfPFSGeS7SQT7RYQLREgGUC
LBdghRArhVglxBoh1gqxXoQNImwSIkmIZCGJCNosRLoIGSJk0tpKSYgsEbK7
KIdW159ki4myKEmwVYxMBtxMO6gtlSmxyXhtLVNco8NGFtPFNeKEtCFta5M6
Yc2RXJWkYc2bMAtFKw6RBFIoQjGfTapIjAHSIImEiqhRMFIIlVNk8nUHqX2G
BlqM8ECCy/Y46ImtEVg3F3PXIjIL3kdgf/md5FY1585Bo6o1vJsx5pftHM/q
eB3vN+VAr2V7uyft+MvWrb/kJPbKXdE3d37/3Gm/5sYMyg4eSmHaZucRqdJR
qZZj0iSKmwVK6TyVLK7qNo7aTrb6XrZGIXv8EY7WSY5OKU+vXGhwW2x835T9
0pz72krwyUbUxffIFNRs4UYX1Nyd4U5bHwmpdRb0f6ip2X9HajPIV/Fdn5rJ
T0ktnya1E9X6uylSg9INKFVD6SGUXjJxIl9U8Y76uvTwko2HQpIrfl2K846k
SW2fF7YHITMGydOxbh5B3XlrMSUJkVsQSj/29zoKx9PvzMsaWNce/TJ0+N8s
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
t5cM20+z2pdrHvm7skT+jGNV/4mL2XL8tUwD6pthDJB/s4OvE9l6jFQcoMmS
N3IapecxRodCNl9lbX8K2dTHB1HIpjUuVEc9XE8twkA1ykiFQrZoE6UYliKh
Nu7oGEJtI6MFI6OFI6NFI6LEI6IkCpQiKYkVIs3lIy1UIgJsZmesLvwHPzXz
PHymf7/Pl4eiTB7nR5Au+LOjcHYMzigSlSihRBklKihRRclYlKihRF2mcSjR
wBlNorOa9UcMCjZZxk3ypVSQaFW9l4PzWijVIkdKZdpdpEOr80SX6LweSmmd
YzjOgCY4Q5rdKHCjqM2kg9qOUdRGIRu3A9lIiY3iNRHhtWya1zabIZkeu7bG
CsutsdCGtK1No9Mggxzh40ooxjWING1Jp8BiDonrZ62DNrVH2kU3idyEUkOb
Bu4IcMwNSZMQtwm+R2B9/Y7ofo7FvRi3OyYTbg5Mvdwr/8wvRw52P57b53jS
gOMrBh2d+9uBycP2hirs8BqV7TA6w1IxTaiUzFZKNFBO0lFJHq+aoqm2WXPc
1vGauVpaO7V19unqHtTTP2ZgcMrI8LyJ8TUOq0bAeSzmNZoK2jsxjcmqJZhm
3YFpXrbwtoOPPbnPdIiu43eMdHT7WlZz/9EASZFaJOyiSagIQ2pMUD9FamTA
3GJwl4Pd6X5MrWati/OJgequLqR2gSa1O7KI/nZqM/lFFW+10GyE53zUmZE4
kQsOpEltrzfJzNwyibY+LsHCNZiehJhMhOaRSU8eJ+Fw/r3oWsPwiIm/X/r/
z36O3VlQ++n6EdZ+6sT+1y/m1iGnb8wpuy85es9yZ411cpXVkhsWUy+ZhZ4x
9zxi5pTFs0hmSzeT3jSfXbwQGabNL7NcfsVq7Q3rpFvWm+/YZNXa7Lgv3ftY
euCZzbGXNsWvrEpeWZ59ZXH+lfnFV6ZX6wmm3aznM5hW/YK0p919yql9zL33
gHevjld3l3+/RvCwWvDotmnFeafczd5L5gdMm+y8I9nmYr5p43lJyznJ6xLT
9mLTdydMPx6VfDkkQYEYe4TYwTSpcZEkwDoJCZBdIsV8B8S5YJI7IrwR5PfF
K/CzU/Anq9APwvB3hpFvVSe2D5/d/uvytgFJbf1z2vvmt8mdaOt9oa1X5Zse
D9u6N7V1e9va80tDXzwdiPtDUCOPmyNxaQzOqeD4OGIgzzZGEg8rRZhthihq
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
yrUKC1dhwWpyXbhapnnLW2fEpoRFEGSLnJUcu7ho0RpIFU9pLX2V3lBah0WU
1tJXSutJRKlUC6WisW7Bpq80F0dJim/biKTsNnMnqbiRGbf9pDcylEK2Ewg5
i6BLmHoDUzLgmQPRs3em9+7x3qdJ3s1f8pCzh2O0YwJrvzL7qCr7lDo7RYud
qsO+pse+ZcDJnMh5bMzJMeUWmHNLLblVDG49i9vM4b7kcd99dePnyQfT+HQp
TQBvIXyFmCKkS2kiBIsQSmGaGBFizJCQOlq0RMZo3ZgWR2serfk2WEBrofyG
kgzZaIL7La/9S1ibSo+T+MphbbIz3CcRa5FJHnDxzpg8hSI14itiR5OaOALC
meDNpkltAayXfNP9SJGaCkVqp6B8EUo3oHSfzrwuhWI9FF9/Vvr0Tg2NOig2
xkOLrtU6af++l8jftu/xB0ta9P/t17vL/X+wE93vZGr0vUVtRL8O6p+R0ael
tu/bmoEfqwd1VA9F1XBUjUDVL6j8FZUjUTmK1mhUjiG9PZSqKI2lNY48QCYa
T1RDacI3qlX8VkrUtfW5VsohbuLSSbEx3imHeEV3jVCrLFONyldVqxJVUVJD
pRpNcOpEZVJw00CRFgq1ka+D5xS16eMpRW0T8cAIGSa4bYbrFgTZLshLbHt5
2MYnDUjxYvLoJtCZPEJhz4Te7kKLF8eW3l5Ya3WjRPnDoxHtF0a/3TOhcbVK
yVz1p2EamX6a6a6aqTaaZzmaxyw1DkzU2KOruUNLe6uGzhY1vU2q+ptVDZNU
Jm5VNdqlZrxP3eSwpukJbbNzuuap+hbXDS3vGVtlmVnnWTLKGMx6NvsVj1gh
ka4AO2k1jcY0TzmmBdhiqh2C6C0lxB6hdDBct0IpOcqQTVpc+xewJi2recnK
ai4BPXxFIiCRN0Dy5oMdXyRaEOsXQiLVjDfBcBtJdyI1tWOE1FSuQOU2lClS
y4NSBSE1ZXmYmh5em6OejRLaTuS2K8574+g07J1JUmhXryS/MsJ3ES+RgAvw
uAn7R58ZeS8GGJl+r6D2N+977DnO/y+fuUn3hD+olLbzGOMe3fF4rkRwKF+4
PUew5jF/cSYv9jYn8jor6DJjynlrnzNWPqesfE9a+Z+2nnaWGXaeFXWJPSeN
S2FaQoZg1UPhhieirbniXXnifYXiw6XiExXis1Xii7XitHrRjQbhrUbB3UZ+
ZhP3URM7q5mVI8U06Xhas0VZkxzTamlMq2LWVbAaytmNpZzmEk5LEfdFAfdV
Hvf1M97bHP77p/wPWfxPj/hfHgg6MwW4y8ctPm7wQSwoaH/+02xSzTpohWRL
MqS2mYN1Qqy2b433SJnplxgaEBvklxzsUzTNlya1QLhMg00wuGGwCIdeJBSj
MSIeQ9dh6E4MOYzBKfjpOgbex4Dn6F+Jvi/Q5xMhNUoD0DkEn0bg/a94PRqt
49AwAdXKpGcgXxPZesgwwjULpDBxmIPtQqySkKadEGdSAafOA2bLoHak0qwm
aSoiz58LarC/UTO67PGgmnO/mOnEmJkvMeNtYEw6xpt2yya2wGlFnWvSG48D
HT5n4XsFvunwuQefRyTZ1isPHoWYXAq3ckyqgks1nGpgXwvbOkjqISSYBk7t
F1ZNu3XVO7rvsdEsv9ost9Tk8TOje48mpt8xvJqmn3JO9/gR7f27NXdu1ti8
Sn3dYtVVc1WWzVRaEqq4yF9xqZ/iSu8JiW5KO9w1T3iYXvfgPHYXP3VwyOG5
FZj7lqgGl46IKx20tnTgvpL+KcV9bxf3fl5EkVr/2vtDWm78/O7CaIrUOvao
tFGkNsfovb/5GxvWQ4F7jO/UZs2Z9WOX1Y7ZXjPmZIVCeqlCbvG4mnyNl7mG
7U/N8YiFDOp/1wZpjrjoitMexKr3cAgOzEByLHbEY4uc1BZQpHYQM04i/AJC
r2HqXTLB554LhwKwS9uGO7l9r6D2d3Zaww9JTWr/+KecHqX1hT/x4CrtdrBk
LloQhwXzaS3AgoVYuIhWPBYuxsIlWCRVAq2liJdqGRZ3aznREuq6AktWYGFC
66zZKdPDE0NCYqNmJs9bVJSwEgmraK2E9H4prYTV9BdX00pEwhpaibL7JVKt
xeJ1RBTcxdNAR0Hcwo1fi3EUwcUmkQk4itpm7kHUXnqcjZ5im3YeU66T9AqT
fedN7u3zuhqZNJa9V5FzWIVzQo1zToNzSZtzVZeTrs+5a8h5aMR9asJ9bsYt
suCWW3FrGNwGejDttdw/pLOnf4hrD0zzE8KfwjQhgkQIEZHUknAxoqjDmIRm
NAnmSGSANleCOAnmSWhAk8jobNF3tLAHu83/ltdm0zNus2gPSSmshX4La14O
8JDCmitc3VtdvcgYiMsU8hjfLgg2oRCHQziD2D9y5n5DatKamjpFaodkYWpK
N0kDEsm8LodiMxTftSt3vFZHjT7yzXDPCtwRnv9mQU2aXfg7/1D//2x1N2n/
9q/+lIdIfzCmSRf18/PrsD7l9b0aG3q/bujfVj/wc/0g1A1F7TDUjUDtz6j9
BbW/onYkakfRGo3aMaijpCDXWKJ6SuNkaqA0Xq4JaByPxgm/kWJroUbKES7F
awTZjnCL7huiUYmoQVmmehWZ6lRRq4oaWtVqRATf1InKNVCmgRJNAm4F2sjT
Ra4enhri8UTclxfa0mh7/zPWxFpgHwtb2cQ3O06IcCcIo2G3svWqSev90Tiu
3JWk+S5Bp36WXnGQ7hMvnQxnnRsS7Uts7TMWWseMtA7oae/R1tmhobdVjQI0
g03KhpuVJ25RNt6qYrxL1XSfutlhTfMTWubndC1S9S0pTLtLMI2RZ8ksY7C+
xTS+DNMm09U0Xwn8bUjmY5AtgqnzG91ZPZ2eh43ocQ2nQ+JItiPNa0E9YM1X
CmuTvvpAUrBGymr+Ml8Rh1CZAyRFaiIyqtYqmE/iQoSL5OHXW6G7Gxr7v5Ia
mVN7TJLBlSqh1AzlD1ABNNCuj5cWqOOgSIwsR9xwwxlvHArB7tnYvJgEXs9O
Quhe4iVCHSNd70GQ/V5xxYb/zO//y9U9zi89Jv2A1KStj7/H9yAtpY2mS2ms
9HLuxRL+yULhgTzhNgrTHvEXZ/Bib3GirrFCLzMDLzCmnLOecoYw2tSzjOBz
zPDzrBmXOLEUpt3kJdwTrHogXJ9FYZpoZ554b6H4ULH4eJn4TKX4Qo3oSp3o
er3wZoPgTiM/o5H7sImT1cTKbmY873YRaTYnmNZoVVFPY1oNs6aaWVfJaqhg
N5Vzmku5LSXcF0XcVwW8N3m8t8/473MEH57y27P4nx8KOu4LkCGAtPWRDKnx
cImLcz2T1KzJkNomLtaKsMoWSx2wyBlz3Vtn+KaEBCROC4wNDEjxCyyaPI00
vvDCYBUOg0ioRGPkQgxLxNCtGHIAg89g0FX8dA8DszGgFP2a0KdNRmp9gIHA
UHT8jI8j8X4MXo1DsyLZu6pUUaqJfG3SAHDXFFctcYaFgxxsEWCpmBTX/CZD
HAzjpHLT+tQN+5KaJ+RnjX2fOur13nFxfHvTifPMGavMJduZnuf44fftFpU6
r2lw2/7O43CXz3n4XIXPTXhnwDsL3rnwpEnNvQSu5XCphFM1HGpgV0tSbkW1
ENSAW9PBrm5nVLVZVrwyL2kyK6g1e15u+rTA+MFTozuZE2/cNExN1T9zSvfo
Ae1927V2rNfYskJ9/SK1xDkqK6KUl4YoL5+qvDZQeaOf0lZP1aPe+qnelve8
BM/cbfPsHZ9x3QtN/MqUQsqHzC8btL5s4IHS/udL+t4t6Z1X/I+yXJrU0n95
f3H0p2NjO/eofFiq93GOUVug+Vs71my/gIfMgBatGY3jEuoVttaOOV6lcK1C
4UnZuMpilRf5eh+fmeAJAw95uCdBugMuT0KKB0744mgQDkZhbyx20qS2bgOW
bcP8PST2OuoUpl9CyA0S++v9BC6koNYx8U7u955s/wW96P/g9QNSk+7S0kaj
P7IN8k/HNOmSPsgaOHhMZFBF/BzExyJ+LuLjaM3D4vm0FmDJQrkWESXE01qM
pd1aQmKAZEqQacmi1pjoFIrXKFE3C+cXLV8GoqVEK5Zh5TJyXbEcK5fLblZ0
36yQXymtxPJVMi2jtJpcl66W0Zz0SnHcwg0E3+YmkbTTmCTS/UKqbNvJFJv9
uttzjJ32jOcdVOYeV+WeUedd0OJe1uFe1+PcNuBmTuQ+NubmmPLyzbkllrxK
a26dtOORw3vD434Qcj9LbR7taP8Q0vHIhwcfXgJZKS1AiGlCupQmIqW0SDFm
iDFLTBhtNo1psXJAm09rgQQLJWSwN96GaDEdlbuYVvdNvFw9kW0+XYOT8pq0
E5KCtRl0LpsU1oKkA2t0/pGnAyY7wd0Fbm6JU/yL3H2Jr4gD8RWBbQjE9Kga
P5rYPxJSWwyL5XRNbRN0pKR2mA5Tu0wbPz6mM6+roEiSZz+ookULpRORZY4b
1h3/ZkHt79z3+L0lPZ/8gNT+yCl+6bTsn/VAj9qFJPxhRQ296pp6v2ju8665
X3vTwM6mwWgcgsahaByOhhFo+BmNv6DxVzSOROMouUbTGoMmWs0KX9UyVq5x
MrX21Hi8GC+7vhjfWqqRvN2G/C6Y7Z1yjNNKYVerIlGLkkzNymiSq1FFpgZV
1NMiEEfhmzqq1FGhQditVAvF2vKKmw55pp2lR9qQMvVxTx/p+ripi2vauKOK
E6bwCkLAJEzltE+1fOljVuNmUuBo9FhseJdrcN1a/6Kp3pmJesf09A5o6+/R
NNihbrhVdeJmZaONSkablIy3KJlsVTbdqWK2T838sIbFCS3LczqWqXpW1w2t
7hlbZ5ky8iyYZdasOhbnJY/kP8owzVGOad5i+ElInshUGwTbINSWZD5Ol6Y9
0iOxPSW1M4pwQDjFaz2Ka4GOdLBjD1iT9UB6Y5IfnAPhNA0OwV8dIIlXf1yi
d1iKc7TM/pGEX2+F3i5ofktqSt2kRm0+H6Wk9tGANn7koYC2E7nqjlN+OBiO
HXTrY/x6RFHb/mEEpMAzHQ6POph5LwcYmX3vgdKfPgHx5y5q86EYVhrq8T1S
+12fGn0tpd2t4KSV8s4VCY7kC/bkCpOeCBIf8ZdkcOfe5My4xgq7zAy6yJia
Yh14VspojDAymMaalcommJbOS7grxTRhUo5o53PR3gLRoSLxsVLx6Qrx+WrR
5VrRtXpher3gdgPBtAeNnMcE07rH08yLm81LuzGtjlFdS2NaFauhkt1UwWku
47aUcl8Uc18V8t7k894957/PFXzIEbQ/FXx5LOh8KECmEPcEPVofebjAxVkO
TrCIncd+a5KktpWFjTxCaiu7Sc0N0R6I8EKwX6s/RWpTYwOmxvpPS3ENKRKG
wygSGjMxej6Gr8DQzRiyF4NPYlAqfrqFgVkYUIj+tej7Gn2+yGCtH/ATgTX8
jC8j0a6A9+PwegJalchmVaOOck0UUnuRPhmwvWmCVHOcsMIeJtazsZyHMF9M
jsQ19fZTytio9Xqhbvl0XYlRuLnZElPuOkunA6wpl0WzntgnlDuvb3Lb/d7z
OLwvwucavG/D+z6BEc9ceOTDvRCuJZhUBqcKOFbBvhq2NZDUQFgNXnUHp+oT
s7LNquK1RWmLeWG9WV6lWW6xadZz48zHRrfvTryWZnAhRf/UMd3Dydp7t2rt
XKeRtFx9wwK1NXNUV0WprAxRWResmhSksjNA9aCf5vkpRum+zCxvcaG7Q5Gd
cwF7ctHEKeXjp1cMWVQ+aFPZwENl/S+W9s0o6Z1f/I/y3P51D4a0UqR2afRn
itSSVT4u1WuPNfow1Xylr9cxR89Woymt2lHN45c0KWyuVzhcq3ClSuFx5bjS
8gktRdpt+UZduVZ4wsF9EW7bI80FFyfjlA+OTcOhKOyTk9raDVi6DfP2YtYR
RJxF2BUE3cKUB5icDft8UlAbaGzePZb1T+vv3PcoXf8lqVHXQnr9Md/PX+3U
SmBtyMiZARVLZmLJLCREIyEGCbNpzUFCLJZSmku0LI7WPFrzsZzWigUyrVz4
jVYtkmnp/NY5M8mxMzQ4lrpZtqB1dTwoJf5Ga6RaiDWLkLgYa7q1RKZEWuQr
8eRmdQIRuVmKVRTxUVhHoeJiLEtE/HxSE5y/HAnCAzvG8g8q8o+p8E+r8c9r
8i5r867pcm/p8zIMeY+MeNkmvDwzXpEFr9yKV8PgkVIam/uKK+t4/CILtubC
kUc6Ht1pTPOmME0gK6VRmBZCMZoIESJEiTBTjGixnNHEmCvGPFpfAU1C0xmt
BAmW0kqQ30tvpH+7mFa8RI5sdBluHt05OZcursXYfIW16bYE1qbZESsAv69l
tWQ/32RfP7h4wsmH+IrYB34dVZOSGnv+V1Iz7Ca1I3SY2lUo3YHiEzrzugaK
rzqVPr1XRZ0u8kyIl4inwrx/00vkP2MgPZf0CUm3Le2/JDXpLtE9xf+7GmX/
Yd6zP1jUG+IfPPBZY++qll5Nrb1fv+jT9qL/59aBna2D0DoYrUPRMgwtw9E6
Aq0/E5ez1l/lGkn0YhSt0XhJ68UYvByDV1IpyPS6p8bK9EaqcZRaK9WLnugn
75DQyOaVcd0Cb8aTo85rRbyiNIG+SqWEl0p40UMtymhRQbMKmr7lOFkxjjop
KZNmpBol1E5A0yi8+fneK7XDzfq3554s0b/5Ti/mtblnE8O2wpqfZ8V8aG5x
x9QszcjkooHJaT3jY9rGBzSN96gb71AlXLZZyXSjoskmRbMtimZJSuY7lS32
qlrKsiB1rFL1rG8YWN8zYmSZMp9bsMqs2fUsEgH5sbvp8Sum0bGPATaYZkMC
Hwmj2dKMRqc9zpSnOnZnO34T70gX10IdvoE1HzoR23MSGVhz9yBGl66+cPEn
+U2OQbAPlTtAxqS4RlKkRkbViKlIojz8miK1fVA7+m33I0VqVTSptRNSU8cH
Q7RaoYqPfFtkuiDVAyenYv8MbF2AVSsRt4n4BgedIObhbvcgzG7TOHDmewmz
f7f5/d+u7nPRD0jtd3raLx3dHRUcZfmwknmzjJNazDtdyD+cJ9idI9hCYdpD
/pJ73Lh0zqxr7IgrrNBLzOALjKDzhNFCzzPDzzOjLrGiL7PnpnEX3uQtvStY
/UCwoSemFdOYVi4+X0VjWp0M0+418mhMYz9tYuY2U5hmRVxECKZZEExrsK6s
pzGthllXzWyoYjVWsJvLOS1l3Bcl3FdFvDeFvHf5/Lbngo+5gvZswZcngo7H
gq6HQkJqd4W4JSCkJm197B5SO2yNfVa/ITVHLHKRkVqkN0J8EeAP70C4Tmt1
npbsQRKRYn1DU0RRrWpz8XMChq3H0F0YcgSDz2PQDfx0HwOfY0AF+jWj7zv0
Ib4i6NUD1kYAv6JrND6PxcfxeE9tYkpoVUYjvR1V0LO3BZokvuSZGvKUO0vG
4Ci/03rJF17AewdxszOzRGKRZCwxmzjflLHCXLLN2v0UN/imJO65w/JKl80t
7vs+ep2B9yV434DXXXg9gNdTeOTCPQ9uhcR527mMuATYV8K2CpJqiKrBr+rg
VH5iVXywrnhrUfaC9D0W1Jg9LzN9mm/6KNs4477RzVuGV1INUk7pnzyke3i3
zr4tWrvWaCQt1dg4X339bNW1UaprQ9WSQtV2h6genKp+NlD3WoBZpj83z9e2
1N253NatlOVRbOBfoRBROWRJxU9J5QOOlPVLLeuTWUqRWq+K3P71D4a8uPlL
22VCal3JKu3L9T7NNbo1TbxqitdLa8eXJr4vdCJbFOObFTY2KhyqU7hcO/Z+
7djC6vGN5erviwy78i2Qw8IjCsjtkO6EVHec9sbxqTgcgf1yUluzAQnbMXcv
oo4iPAWhaaT10ecxXJ5BWPRZ80jK955s/837HqXrB6SGP3x25veLKPqfLOrN
0TI2YBktWhqOZRFYFollUVg2A8tn0pqFFZSisSKG1myspDSHaFWsTKtpJc7F
6rnkmhiHNd2ah7Vx1ItbE2KKosOTpcg2NzJlXRzWzSVaH0srjmgDpbnYMBsb
5pD7jfOwkbrOxcZYbKI0F5vi6OscbKYUK9ccbJmNTRFIom4isTkA26KwwbFh
q5LPgQnCY8qC02qC8xqCVC1+mg7vph7vrgHvwUTeE2PeM1NegTmv1JJXZc2r
Y/Ka2LwXHO4bHvF4/NrxSKz4efJSGh++fEwRIECAqUIECxEqxHQhwbQZIswS
YbYIc0SE0eJoQJtPMZoYC8UkyiRejCVimsXEpOtgmRjLJVgupiUhfySS3xCC
E5NXJvSgtkU07smKa3RHpQzWbElYG3XKCrEjYyb+dGStp0ORl2tsQABc6Wk1
Z284+sE+AHbTYEORWgQxFeHOIaTGoEnNNJEmte1QT6ZJ7Rxt/HgPStlQLKGH
1N58Vu58rY4KAzwx67ph9eXfNOf/44et/uJLimnSdqzvkVpP+0fqnnoPf6dt
6g/2nv3ekg7L+Ib1y2rsXdLaq+7lP1pf93r7us/H1/2+vB7Q9fonvBpEAl5f
D6U1HK9H0PpZpje/4M2vRG9HyjWK6J1Uo8n1/Wi5xqDte1LAh7GttWoZN82S
d0li53glrnLOSDdD27iv+kBdxxO9p49A77tvaL3rqfGyv20biw9j8OkXdIxA
57DX6Hu6y9jjje+cfbf3On4pUrlSr7iqVmt6qb7XM0OnBwbiW/q8ND32RR3G
aS3rYxqWB9Qt9qhabFc2p7hs8wTzDePNN02w2DzBIknRYqey5V4Vq8Pq1ic0
rc9pW6fqMW4YMDKMmFmmrDwLVrk1u4HNecXj9phN4xNM85BjWqAEQTZfAx8j
5YGPs3pkO87uTnjsQW1R3XEhclgLoNOxCay5wMP127JaAF1WCyENkLZRRY5R
sVOCpKNqYCyD5WqYrYfRFujvhBZNaqpnf0NqL0jstQq6NNBmhBYGKgR4Zo+7
rrjog2PBSI7GpsVYmkgCYqYfROA5eN2A48NOZv6r7xXU/uZ9j/+0fkxq/+vx
jtQeqGJuqbH7uPX9SlZ6GfdSCYVpgkMUpuVSmMZPfMBbcpc77yYn5jo76gor
PJU1PZUZdpERdp45/QIz8iJrZip79hV2XBo3/iZv2T3q9TSmZQsJpuWLDhbJ
MC2lSpRaI0qrE96gMK2ef6+Bd7+R86iJ/YRgmsxFhGBas3l5k2VFo1Vlg3VV
HaOmlllXw2yoZjXSBTWCaaXcV8W8N0W8dwX8tjzBx2eC9lzB52xBR5ag87EQ
D4TIkJNad+sjGVKjk9SInYgldlohiY2NfGItRJFawrekFuqLQH/4BMJ9Gok6
E4e08sOKeCHJjtQ7HxTrOTPFKhHDkjD0AIacxqArGHQHPz3FgCL0r0a/FvT9
QLofpT2Qfek2yMHAMBmvYTSggE4FfBmL9rH09qVA9rp31I40vOPzr/vbDNYX
u5wLz8rVv9uqFldr4Fdg5JBpyBPqRpqYxZtx11k47mf5XRREZtoszHdMrJ60
/eXkw588qY/YZXjdhNc9eD6ExxMyiuWWB9ciYrvtVAqHcthVwKYSoirwKzu4
Fe2sijZG+VvLspcWJc3mhXVmeRVmOUWmWbkm9x8Z37078Xqa4eULBikn9U8e
1DuyU2ffJq1dqzW3LtHcMl9982y1DZHqWyPUk8PVD4epnw7WvBJkeHeadXag
qNzXodJtUrWNRxXLq1wvoGr0jKohSyt+2lYx4Fh5vytlfR6U9Soo7lX5rH/D
w6Ev5aSGZJXPq3Qb5lhQb2+NM+81w+GVqc8r3fAXSgtbxq5vVtjfpHC+Yey9
hrHP68bVVau8LdXvLDJDHhNPBXhgg9tOuOqGFC+cCMThcOyfg13xxPsxcSMW
78DsfYg8gekXEXSD5EZ5PCUFNWbp+4HG5t/7fP0FoeCPXz8mtT/ylPJXnlyW
jq0xzeNWBGNFCFaEYmUYVk7HynCiVRFYFUm0OorWDCRKNRNrKM2SaS2laKJ1
lGKwvlsUecXIlDizNT4iIyY0OTQoNio4MT48Y+MMbIoi2jwTW2KwZRa2RGEL
hV2RSJqBrVJFYWsEiRzaTikCO8KxYzp2hmFnMHYHY4cfdnpinz+SnbsOunbt
FzbuUok5MF50TFl4WlV4Xp1iNEGaDj9dj3/XgP9gIj/LmJ9ryi8w55dY8iqs
eTVMUkoj5iG0x+MHAeeziNNFLKy5cOJiEg/uPHjy4E1jmj8fgQJMEyBEgDAB
IoSIEmKmCDFSRhMhToR5IprRRFgoIoC2WMpoIjmgibGC2q1FWCmWaYX8K9Kb
FSI5wYnl4EZTG/XvxNOwtoBup4yjYW027f/fDWvBtlJYa/VxImMgnm5wdcWk
yXRZzZc0QNpNhU0IROEQzAR3NolUY8TDYhlNahtpUtsLlaN0mNo1KGWSQEwy
pNYExbZ2JTRpocgI9y06Z6ns/Dejwf7m9te/Xenp6d3b0fdIDfK0x981/Pov
ZTZFvSdGunqrDw/IbOyT19q77FWv+je9Xr37R9v73u3v+3S874d3A/DuJ7wf
hPeD8X4I3g/F+2G0hqON0gi0/YwPlH75qo+UfiVqH4n2X2mNJPo0Sq6RRJ9H
9dBofJFqTGujSsYd08TVzrGxXsl7xNQ9viiggzr2jEGHVPI/dtJnoa4x5L5r
NH06GgWMpE9Kw4Eh9NmpfyUGnMegRV8EnLeLPC89WTgTV0ya8hSulo5ZWzAh
Ols1MFNj8k0Nx6saNhc0hKfVeUdV2ftVmLuVGNsVrZMmWG8aZ7VhnOXGcVab
x1slTbDaqURyRg6rMU5qMFK0GZfpLMhMI9YTU1a+BbvcmsSL0JjGk2GaswBu
QhIp4is1qhUjiA58jJCGidAN1THSABE7OkDE7hvJQh7lyCatr8lgjXbyD5D2
QDrB0wWT3eA+mS6r+cBlCumBdAyGfRhsI2P9g4ocZpJUNc4iMJeSEHDzdcT+
UX8HtClSOwLVM1C53GNOTUpqJPa6UxvvTdDERLkITx1wkzovTcFh6hdBLGl9
XLSBmAOHHIXfJbjfgTD7o8bB7xbU/vQ68l9q/YDUuo36qb3of/6OSZ/JDJho
avGkmnGvkn29jAymnerGtCzBmof8ZZm8hXe4sensWVcJqUVeZkZcYobTjDaD
LqXNucKed427+BZvuRTTHlOYJtr5TIppomMlolPlopRK0aVqUVqt8Ead4FY9
/24DL7OR+6iRwjRWDhlPk7mI0JhmIcO0euuaWoYM06poTCvnvijjvirlvSnm
vSvkv88XfHguaH8m/JQj+PJU0JklxEMh7tOkdkeImzSpSf35U+ghtWMMmZ3I
DmtCahukpGYnI7U4N8R4IIomtan+8A3E5GlwDoZtKHjhsIqEUWSrQUSGWXiy
ICTWMyrRYUWG/jG6rHadLqvlYGAxBtSiXyv6fSSMJuW1vnJeG0RvO8NpjaDZ
bRh9T31xQCsG5WLIhk6BW83i6KSy/XZv88ZeLlZY9Vxxeqaq12oVLxOj+WaM
lWbirVZux9jT0kSzs+yWljpvbHDd89bjRIdHCjyvwOsWPDPg8QiTn8AtF655
mFQE52I4lMKuDDblEFdAUEEwjV3exih7a1VKYVoLCVArqDZ7Vmr6NM/00ROT
jEzjO7eMblydeDnFIOW4/qn9eke26+zfoLV7pdauBK2dCzV3xGrsmKW5f6bm
sSiNsxFaV6fr3gszfRrMLppqU+PnVOvqXifxqmP41ugEVo+MrhqyovKnHRUD
jlf0u1re52FZr8KS3lXPBjQ+Gvrq1i8fLo/uODEWe1W+JOquDp38PJjX5sR8
w7J/Y+79Si/ipcqCF2PXvhib3KpwtnnsreaxOY3jqusV31Rpd5Qao9AauTw8
luCeI6674oIXTgbgCE1qO+OxaRVWbSIW/TEHEHkKYamYdgs+D+GaC0HRZ83D
Kd8blf0rTEL9FdaPSY3afKTHod/72/jDvK//n5e0KeunQSNjXStWBWLVVKLV
07A6CInBSAwhWhOKNWFEa6fLtC6cVgTW09pAKZJoo1QRMm2iFC7T5ulEa0Nb
l4RkzAlKDpsWO2dackJQRlIwtoViWxh9pe6nYsc0op20dgVitz/2TEHyFOz1
xT4v7HPHAXfst8NhBxy1xVHe5yNWtfvVVh4aLzmuJD6rKrqgLrqsKUzTFhBG
0+ffNxRkGfFzTPh5Zvxiut2xmsGrZ9GlNK6slNYu4nZIOLDlwIELFy7ceJjM
gxcPPjz48RHAx1QBggUIFSBcgEghZggRTZfSvjKaSM5oIiwWYQkFaLSWiQiC
UVy2SkS0+jtaJZcU5brBbRkNa0toXlskpotr9ATcP8FamC2xbgu0Swz0zfCl
DkuOcHMhZTUXDzh5f22AFE8npiK8GLDjwFgESzmpaW+HGkVqx+gwtetQekDb
iVRCsbVTqb1NBbV6yDXBLasvWgMtv+el1nP9Feo1f+X1A1L7ve0f/0Tv2e8t
agsaNmTArox+Nxv7ZrX2yX/Vu+JN78b3vV619Xr3oVf7xz4dH/viY3+0DyBh
r+0/oX0Q2gfTGoJPQ/FpGNFnSsNl+jJCpo6fZeqUq+uXb4RfaKr612ptnZCR
YZSY6ESQLVlUVKQtp7Ce+oVMiJAT0XD6RDSYPin9RJ2a2mhGS8OIBIwI+iJi
vtlgeycndCV2OrXf0CnKHnMuZ9T6rNGx98YG3VD0vqLkel7Z4ZSSzREl4X5F
3u4JnG3j2FvGsjaNZa5XYGwcy9g8jpE0nrFLkblPmXlEjXlKg3mezhm5acC6
b8R6asousGBXMChM47ymMa1Lhml0qogXjWkB0jARCQkT6Zkk0h3vGCePd5xH
54bMs/v/2HsPqKjOte1//b/3OyeKMKJgjSY2sMWO0mF6offeO3axgRXFLlIt
WFHB3jH2LipWRBAEVHoVVHqH67+fvWcIMcbkPSd53+R8Putas7bDOCEzzp7n
t+/rvm7pqMclnUMe6ULbAgbWzD+FNWcrONrQsOYIW7qsZs2U1WaEuvkl2M9k
WtXIVDUy/3ojdMKgQQf1j9+PMUcwkiK1Sxh5R1ZTK4DKB6i2YjTaJqBWE2Vc
vDbEM0vccMRpLxyci5jl2LQJy7Zh7kH4noHLdVg+6uBkVP1aQe2r7/GT9QVS
wx+3mWS60sbuO673JJ9zN4d37Y3gfJboxCtx/EvxPlJNk2Ja8F3Bkpv8RdcI
qQVc5s67xJ1HMdol7oLLpJS25CpvOYVpt4Xr74lCH1KYJt7+XCLFtEyDoxSm
vTU4l0thmuRqJ6aVCJNKBY9/wjTSniZNEXmnk1uul1emn1+qX1jMLi7ilBZy
ywp45Xn8ilzB+xzBx7fC6tfCmixRXaa4PkPc+FLSnCppeSFpS5Z0PJWR2n0J
7opxS/xTk1rXOJF9etjFwTY+IsXYYiQjNZufSG2mG3w94eENJ1/Y+BOjsGQW
uHOgFYBJC6C6GANWVA5Z/mBKQKj5rCCn4FjRjgeTaA+kIgNrBVCQwVonr8nJ
kI0lu1Wg7m8G6wPk76L3DvSb3uLELotxOFmweiYuqxU9HnLx6behdwfNu/Sd
h9bkIC0dEvmobR6r73JaMPuO0fJU88151jGVdnH1DidbHc7D8Soc78AxCQ5P
YJ8M2xckN8MqExbZMHsDk7cwzIEkp02Y08R7W895U6P3+iPBtKxS7VdFdEEt
U/PZC81HTzTu31e/e2vazctTL59VSzg6+VTspCM7JsZHTDiwacKBdeMPrBq3
f+m4+KDxJxePP79w3NWAiQ/mTX0xh/16prjA17TI1arY2qHE0KVE16P4B/+i
QYEFSpvyFXfnsU7myV/PlXuSQ0it4CXr3VPlj3cHNF4Z3H5yKEVqCcsM9s22
apmh3WjDqeGZVms7V02eVTV6WdXQzR+H7Pk45NT7ITcrhyZXDs0tH/6xeGxr
3lS81kMGH88N8dAct2xx0QmnPGWkthpRm7FxG4noX3QYs89g+lV434fjM7qg
9pYU1D67X/rqe+xcXyY1xo5I7YWYq0Z/0u8QSq8/6cn/2EW3rfUVjg8OdUWo
G0LdsYWSJ8IoeSHMG+GUfBDhS8sPkTJF+SOKvo2m5Ee0lZKv7NYX23yItlPy
JtrhhR2e2OGBKI/KtZ4PArxDZ3oHBXnFrvd8sNsde9ywl5Iz9jlhnyP2OxIu
O2iHOGsctsYhU4JmxwxxTNh2StB2Qr8qfmpa7PDgw8OMT6oYnRtleGGM4ZVx
BjcmiO9MEt+fIn40VZw8TZyqIc4gjCbK0RMV0HbHMp6wgi/tSmuQ8FsM+R0U
o5kJYCWArYAwGimlUYwmJKU0HxH8OktpYswTY4EEiyQ0o0mwTILlEqyQIFgi
YzQJ1koIoK1nGE2CTRKEGhBt6SoJsa5v+YWYR26WURvDaxTxMby2ijZVrqBh
bQkNawvpHRcFazNMEnwcKFKDqxkczWFvCVsb2NjDygkWblIDpNFMSOhQEf4S
mtTWQnPzT6SmeowMU1O5ReYZkZnXhVCpalVprxqLPDpL5HeG8/+Vi8h/kfUF
UvtTk7H/IqFGv1zUXlG5T48TRQpXyuQfVPR4/kEus7p7Xl230oZu7xu71TR3
b2yWa22R62iVQ1sPtMmjjUWrJ9oV0d4L7b3RwUiJiBSzlGXq8zn17XLNud/P
D/r+8qCyckhCgl5oqEVQkFNsrDgra7TsyZVkaMbq3BS1okclmXzEugHFWKgu
gr5D4wz+h1iTx2nuuxDii8O6H28Pf5406OSDb8PvDAy6/u2MS9+5JwxxODnU
6shQ0wNDjfYOkcR8L9z2nSDqO374d9zI7yle424fyt1DRo1wj47mnh7L/XE8
7+ok7p0pZBZkihYvU5efxyaZSNVCAT3emh4sYiWEPY1p7gZknogfnVI7xwjz
jKUptYtlA0SY0SHLTejgWRMiEmpEHyw3lQ58XCIrsXXC2hwzEhc53Rw+5vCk
PZBODKzZEw+krKz2wN6PIjWYzJNl9dNT1dgboLsFmnRQ/8RYjD2MUae6kNor
qBZA9SNU2zAKreNRrYUSATKN8dgKV5xwzBuxC7B1FdaGIXAXZh2B10U43oPh
i+axh87+mrX4r3aN4n99fZnUmP3kv7NBkpbSpmmqXXyg/yiPeyeHf+WNMIHG
tEMvpb1pYY9FGx4IV90VLLvJD7zOo0ht4VXegivc+ZdIHY1itKBr/GXX+Stv
CEJoTNvyUBz1VLzjuWQPhWnpNKZlG5x6QzDtQr7kaqHkRrH4dokosUT4oJT/
qIwOeyznpL2TpojIME1Ximkl7OJiTgmDafn8ijzB+1yCaVVvhDXZotpMUf0r
cWO6pOmlpCVV0pYi6UiWgCE10qQmJtZHks8vwiWK1Pj0zGtZnAhFajspUhMg
UiIltbWWpKa2zA6LHRHggllu8PeAlzdcfGDnD8sZMJoF4Rzoz4P6fIxfhKFL
0H8t+oajz9bK70MfTFkcaj43yHF9rPBMlspzKGaiZz4UyqDwHgr1kG+FfBt6
dMhgrQk9PpKONvl0sBKhuAej5kLNvsmHXX7Y8nL+3FXYbVB74YfUu9+eujEw
9Hz/hd7DZmmqr9DmbNYyitGxO8LxvihekGS8OsMivMBmz3u7Iw32p1scLrQ7
XIdDIuyTYPcEtsmwfgGrNFi8glk2TN7A6A0M3raJ3jbz39RzXtfoU5iWXaGd
WUryHtPztNJea6Wkaz59rvnwocb9u+p3rk+7eXHqldNq5w9POb1v8omYSUci
Jx4JnXhkw8QjIROOLJ9wevnEC0sn3AiaeH/R5BcLtLLn8fNnGZX6mpe62BRb
OZZKXEu1PUvGzCwetLRQeUuB4t581ul8+Zu5ck9zu2W96V6Yznr3TLnq7oCm
q4M7zgzJilIPmuHaumxa6yztJlt2Hd+kVse5ZsrMmh+W1A7fWDM0pnrI8eoh
Vz4OffJx6OvKYZXlo1qKJiNXG1k8pBngqRnu2uCyI8544ugs0qe2KwSRoVi/
Dcv2Yf5RzDoP/5twf0joVZzVorJ522cLal99j10XhR5MutFnf9r5Wv2pmPb3
6tNhTqqKPQdO594Ks0OYPcIcEOaIcCdEUHJGhAsiXBHpgkhXRFFyI4qWaatM
2yi5Em2n5EK0w5koxoloJyNH7LLHLjvstsM2h8oNzg8WeITO8gpa5hYb7ZBF
cVmcJeLNcMgEh41wzAjHDXFc0HqS33KSXXNCt+K42uvdwyPjhjoeH2FydqTx
+dFGl8YaXh1ncHOC5O4kyYMpksdqkp8zmrQlrYxHQvg/CATVIn69mN9kwG81
5sOUD0s+bASwF8BRABcB3ITwEMJbBF8R/EWYKcJsEWG0+WIsFCNQjCVdGG0l
xWgSrJZgDcNoEqyXSAFtM8VoEhrKaIV3UYRMXe9hDsJoiAul//pPvEaX59YY
SItrKwyJE3IJPaxtgTG19cqaaRXk40k8kB6mcDaDvTnsrIgHkimrmXvQBsgZ
pFVNtAD8IHBWdiG1GIw+ANXj9DC1OxjxDCqvMaIUKnXNqng3AW808FAPgv7O
vxnO/8nI1K/rs+sLpMaU+/8MXvvLYhqzqDO2prhvfBEroUzhZoV80oceKdVy
WbXdcxu6Fzd1r2jpVt3WraH9m2Z8006a6DuvHsvTUpCxUk+6ntVVvWR2oF+T
kgy4OtXrcyLPVln5bUKCVmioWVCQY0KCZlbWENkvINcO+RrI50KB2kH9CKWd
UA7BBGr3ZdsYJKw8ZpKc7nIIgQsQbdJ4Ri3n2vA7twbG3xiw+fKAwB8HzDw7
0PPEt06HB9kcGGy+Z7DxjkEGWweJowYJwwfxIwfzo7/nbx/K2zucH6fKPzaa
d2Ys7+J4Mg4yUY3/RJ3/QoufpcsvYAve8YiLm8Y0us3WWkimirjSWbU+9MzH
WQYkpVbKaLJ8Wma2Y+egkFU/j6Ild5oQrTSWUttSmtcWm0qdkHPoYH8G1jws
iAfS0QoOtlIPpI1bpa0X6QuzonNFSAJkIG2AXAXOOuiFQisS03Zg0l6Mjceo
kxh5ESNvE1JTzYBqIU1q7RiJlglkmFqREBmmeGBDDEhH/LEnEGFrERyFBbHw
PwX3G7B+Am5mLWua1tfr2L9zfZnUmHMRk0b7Lzy5NId/eoBucgE7KY93O1dw
5a0wIfsnTNueLAp/ItqYJAxJ5K+4yV96gx90nbf4Gm/xVe6iK9StlNFW3OCv
uilYc0e48b4o7JE4+pkk5gWFaZJOTDv5xuBsrsGP+ZIrFKYViW8XSzHtMYVp
ZZ2YppdZQdrTKEzLIZimx2BaUQmnpIhbVsgrL+BX5Ave5wk+5Air3gprXgtr
s0X1meKGDElTuqQlTdKWKulIkeCZhCRMME1qiWKp9fGqCBeFJE7kNI8EPx5m
kziRvbq/IDULrLLGclsEOmC+M+a4YboHvL3g7gNHP1hPJ0Zh6huaNxe686G2
EGMX47sVGLAefaPQdyf6HIDygcrBoQk6S0PNA4IcQ2OFF7NUXqHnW/R8g54F
YBUTVyQrH6zX6JkGxUT0PoE+MeizBhresLKsD+GVnre4ne8TiRDn9ljtovMj
7p0fePBUv/Wbvp2jNXmJlu5aLVGUtsV+fZez/Jk3JUFPTNa+sogqtIn9YHe0
3u5Ms/2ldvubsL8HuyTYPoH1M1imwCIN5hkwzYLxaxi+aZe8aRa+buBSmJb9
UTerQjurjLSnZRRopedopb7SSn6h+fiJZtI9jcRb6rcvT7ueMO3KyakXDqsl
xE45vXPyyehJp8Inndo46dSaSedWT768atKtlZOSlk1+sWRq5iK93ABR8SyT
Cl/Ld862pRZOZSL3Mk2v0tFzigctL1IKK1TcV8A6ky9/K0/uWW6312+6F6Wz
KpKVqxMHNF0bXHlkNGkMWa/btnxa2xztZnt2vcCoTtepbtr0uvGL61XWNwzb
WjfkSN2QC9VDH9UMzfw47F2lSnPpRBRq4i0HGWIkm+K+Na464ixNagcoUluD
iDCs3Y7A/ZhzHDMuwecunJ7CLB36b2u++XbwZ09Ef+Vv4b/a6tq5/2esvx2m
dS7qpD1h6jjhuMBwU4SbIcIcERaIsESEFSIpWSPKRqpoW6KtMm2jtb1TNthh
gxgb7KS1i5I1dltjjxX2WhLts0SsBfZb4IAF4iwQb469FpXrHBIWuYbO9gha
6RgbY/LqOL/pOKf2hP7Hk7qVJzTyj0xKixt1+eD3q48NMzuravLjKONLY4yu
jjMkgDbR4P5kySM1ybNp4hR18UtNMelH0xHl0l7HIo6glEda0t4L+FUifq2Y
12jAazHmdZjyYMGHNR92NKM5U4wmgIcAXkIpo82gGW2uCAEiLBRhMcVoYmkp
bYUYK8VYJUaIGGvEUkbbQDGaGJvFCBVLAS1cjAha1Nk6UixV1K+Lehh5vAzZ
tkikyLaRfvJ1tKMyhPZYUrC23IjMa1tMZm0H+XpmzbAiDWvepnAzhZMZ8UDa
WtNlNWdpWY0YIJlWtUBwVkCXOn9vglok6VMbfRCqJ6BykY7oT4FKDlQqoNJU
OwZFk5Gmhdts/J6C2lff4+9ZXyC1rvGPf+Ar+be4jufm5iby77WnqOeJMtbF
SoVbH+QfVvd4UdvjVb3c26buhS3dy9u6v2/vXo1u9ejWRKpX3TukUdWd7NYV
3+S7cFynWL+izgfId3kGxlPUecA8OfkPVVb2TUjQCApyCAxyPJGg+SBreDZY
SVA8j957MCQYI2dA17HD3bRuE//deeOUV46nWuaswTrn1n2cstM/pFwafPHS
gD3n+68/1z/wVP9Zx/p5xvd3ih1gs3uAxfaBJtEDDSMHSsK/FUYOEkZ/J4gZ
Itg3XBCvKjgxWnDuB8Gl8fybk/j31fhP1flpWvw3egLq/FbJJyMgWwzpNCQL
AWyFZPKjGz320Zee+TjbgEwSYSJqO2eIrPh5Mm1nGu1aY1kgrbFUDLsxVbZl
pnQOrSkW0lmRc7vAmjsDa3TDmp0TbF1CPbyz7HxIXgKJ658Hw0WQLCEGSGmr
WgTU6fjHsXEYTZHaBZrUHstIrQqqHRiFlkn4qIsCEYkTuWOHs244NFtmfdyB
OYfg8yNcEmH0olVlU/SvXcf+Wuj/5fpNUqNeNGqz9C9cNZI5Hk/oPS3g3M/j
3XwruPxaeI6ppqWL970Q70gWRTwRbUoSrk3kB9/iL7/JX3aTv+Q6RWekH22J
jNGCb/JDbgnWJQo3J4kiHku2JktiUiR70yQH0g0OZRoc66ym5UmuFBBMu1Us
ulsivF9KZ/KXScMe02WY9obBtHK9/DL9glIa04oZTOO9K+BX5gs+5AmrcoQ1
b4W1r0V1WaKGTHFThqTlJY1pLyR4LiuoMU1qdyVS6+MVISE1ZuY1CX5kSK2z
piZGmBE20aS22horbLHEHgudMM8VM93h6wVPH7j4wn46LGfChPqGngtuALQX
YPIijA4ksDZwHfqHoe929NkL5UNQPg2lk5WDIhJ0loWazwty3EyqbKpJ6JVE
Ukd6XUHv42QQ24AoqCzCSH+IbTtmmtZF8kuvmd/P99jTETizLdyoIm5y6vHv
Lx3pvzu271oLlQUkSIS3Rct4p47dUY73RdH8RMOVz003v7bcUWITV217ot4u
odn+Srvdbdjeg00SrB/D8hksUjrMUztM0ztMMtuNstskr5tF2Q387FpOdpVe
9nvtrHdMQU07I08rLVsrJU3z6TPNh0ka9+9o3Lmqfuui+o1z066dnHb58NQL
+9XO7ZxybuuUhPDJCZsmn1835craKXfWTHm4anLKiinpSzTeLuIUBhi8m2X+
3se60sm+3Ny5TOBRru5TNnJeybfBxUoRRYr7C1nnCuRv58sl53V787Z7cUbP
ymTlmvsDmq8NDg2ySlgjxLbxHcHT2ilSs2U3CA0b9B0aNPwaJy1sHLmmaXhk
w9BDjUPP1w19UDcsvWZY6ccRTRU/oEQdeWxkiZBiSlJnr1Ok5oGjswmp7VyL
sHCsisGCg5h1Cv7X4P4Ats8hymoePGfRZzv6v06Y/e+uPwls/3dHFP0hi+lc
66WoLBkVFG3YFm3YEW2ErUaINsZWSibYZkrLjGg7rR0y7aS1ywy7ae2htdcM
+0wRa4r9pjhgioMmiDNBvAkOGeOQAQ5LcESCo+KOY4LWY7ym49y6A4LcjRbH
57gvnuO2aL3R3m1aZ+NUzhwYGnJiuGOCqumF0SZXxhrdGG94a4LB3UkGDyYb
UID2dKrkubokjS6iZemI3tCZIRSjFXMpRuO/4/NpRuNRjNZgwGs24raZcmHB
gzUPdnw48OHMh6sA7hSjCeAjgJ8AM4SYJcIcmtEWUIwmQpAIS0VYJvoFo4mw
XoQN4i6MRp2YRTSdybgsWoRoMdFWETmmbreJsa3LAXPMiHpYlIimNjEBvU94
bb2ENkPSTsuVdM7kEqPQ6a4Js+xJ7wnTsOZlChczONBlNRtbWDmSuH4zT5j4
klY1cQAJFeEsh14INGlSG8+Q2kmoXIbKPYxIJZPUVD62q7RXjEPWVDzSgbC/
y29miXz1Pf7O9QVS+zMuIv01s2d/uZiyPncGK7pIMa6s56lK1sUPCrer5R/W
yifX93jZJJfdIpfXJlfULleG7pXoXoXudejegO5N6NaGbjJq62S3rvjWleY6
ezq6//yYeeQnf6t7lwYQog7aVlRLstcUiqDwpHLArgRtHx+f2UFOKxN0PU+O
1Ar+fmLwmFErNMbvdJpyZjP30k27hEb/TVjq0x5u8HH/tKyTKnfPDjxxuv+2
U/3WnOi3+EjfmQf7eu7r67Srr822fubR/Uwj+huGDZBEfiuOHizcOUS0f7jw
sKrw1GjBjz8Ir04Q3pksfDhVkKzBz9AR5OgLSrjEJFBPZovwyWARS7rN1lkM
dzGZJ+InwUwDzDWQxh9J82lpRmNiaZlk2nVG0jRaShtoMcfrZCLs1oXXltMd
bUEmxAnJZEIysOZtDjcLOFvSHkiHBFf3WDdPOrGfmYI9B0YLZAbIEDJVTTuM
DhXZTUaqjT6BUT9i5C0ZqRXQpEaGqTVPwXs9Evz43Bw37XHGCwcCEE1bHxfv
gf8JeFyDzWO6oKb++YLaV9/jZ9eXSe1fw9tOx6P2i0K9x/mce7kkP+SSFNNE
h15KMS3ysXDzA+H6e4LVtwXBtwUraFhbep30o0kZ7Raf+tGa28INiaItSaLI
J+JtyZKdn2DaW8m5XAmFaZcLxNcpTCsSJRYLH5QIHpV2Yhod9lhBPHgkReSd
Tl65bn6ZXkGpflEJu6SYU1bMLS9kMI3/IU9QlUtj2htRXbaoIUvc9ErSkiFp
eylpT5UgRYJkAzw1wGMDepIaTWo3xcT6eJmOEznHBD92kpr+p6S2zhyrrbDS
FkvtsdgJ810w2w3+nvD2hrsvnPxhOwMWs2A8G6J54NCwNmURxgZixFIMXo3+
m9AvAn1j0DcWfQ5C+SiUT5Iq23cbE3TnBDlRp6C1CbrhWeMjMHA1hiyFxiyI
nOBi3BFkULOPX5xo9jDfOa5lzpK2VbbVUbpvdo+9vXfw0V19ty7uv0SLBIls
0JJs1bI8oOdyijfjmjjwodGal2YRuVZ7ym0OVdmeqrf7sdnuWrvtHdjc67B+
0G75uN3iWZv58zbT1FaT9FajV60G2S3i7EZBdj03mxTUyGtOF9S0X+Vrp7/R
Ss3QSk7RfPxYMylR8/4tjcSr6ncuqN86q37jxLRrR6Zd3j/14i61S9vULkWq
Xd6idm2T2p0Nao/Wqb1Yo5YZrJazTLtgMb8swPjjLMsP3rYfHB0rTV3KeZ7l
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
lnXTbWvcHKttXasMPT7o+VROmFkxZPG7PuvLeu8oVTxSwrpQ3ONekVxaUbe8
gm5lr1kbVpmf3qnfdmswrgzBcZrUNkzFIm146ZN+XpEFuC7QnIMpQRi9CSN2
YPgxDLuKYY8x/HX78IoWlfa6cXivgWIesg2RbIlbDjjnicPzsHclwjdj1XYs
pK2PnrdhlwxBduNnR11/nTD7L68/sMX4Lzii6E9a1AmZGX+gLKek3Vus08vA
rJ+X1+DlgcO3Bw7fsWX0OUpBw7d7D15u3s+Lkm4vw1E9Jin/oz/1VxS++a+h
/+g/rvt33B4TbOW5M8c6+o1z2u4benRtXNqvoNmvra7IxhRGGWSjfjdqA/xd
924xk0ZlijWarTmtNpx2Ow4BNEcunLlw5cKDCy8uATQ/HqbzMIOHWTzM5SGA
hwV8LOIjiI+lfCwTYIUAwQLCaCEyRltPMZoAmwQI5SNMgHABIgVSRqMAbbuA
nJVjaEnpjEIwWntp7ZMpltb+nx90/nSvDOJ200+ykya+HfTzb2N4TUg8llvE
oXNcYuc7kiQTag8WTM90CzKUwtpMY/iawN0Ujmaws4S1HSydYO5ODJCGMyEK
IPGP+sHQ3oCpnaR2Diq3oZJMT1Krrh/dUjCx45lme+iEa1/ACnz1Pf73F5te
vwa/f0j849831IhZBNYmTxXGDfXPGxRYohxS3jv8fa/dVb0O1CgeqVM81djz
x+ael1tZ19tYtztY98F6CIUnYD0DiwY3hXSSk6+QSSsLCtlQeE3f0mLRou5n
vQIrA6x0sNJIvaxnCnomo+cTemLRA5Kc1usWel1G73NQOgZl02A5pSH/pfB/
v5n8z2FeClwvBbaXgp6Xgo6XgpYnS4OCNU/FqR69prj1nujSm8Cao9JoB+WR
Dt+Nc56iI0M2A4ep08R9lUaz5JT+S9FQTjNK2S9cyX2LksNmJcuwPqZbBxod
HGp4apTk3GjCaLTdUfBkGj9FU5Chw3+jR2wDZTzeByG3TsJtNeHBknZxu9A5
SN5C+NPdtfPo1tpAMZaKqS0bgumO2rVi0kv7UyCtWBp2RNCM7qXdKsY2CX0r
xnb6dht9Z7SM2kjMEY1szBgRitfW0akjq4yIE3KpsQzWTBP8HUN93OkoSCa0
3+FnZTUmV0S8lBgg2RvoqWrbMJmJfzyNkVeh+gCqaVDNl5LaONRqoIiPlyZk
5vUJT+xbQKyPS7diRjw8L8H6EdjZn09a++p7/DfX76nsUy879QUxdv9JnZQi
/ScFnAf5vDu5/Ot0b1pCtuhkpuhIuugAjWk7nomiHwvDk6SktoEmtbV3+Gtu
ExvkesJopI5G/TQsSRT1WLz9Ge14TJXspzAtQ3IkU3KcNj2ey5Fi2rUC8c0i
0Z1i4b1iQVJJF0wrl2JaNoNp76QpIoVl7OJSTkkJt7SYV85gWiH/Y4GwKk9Y
nSuqzRHVvxU1vhY3ZUuaMw1aXxm0pxt0vDRAqgFSDKRNal2tj13jREhNjUeP
ve5KavrYwSWXWanPT5iR1AC5xhKrbUiuyFIHBDphoQuBtTk0rPl5w9sHHn5w
9YfzdDjMgM0sWM2GxRxSjTamZURpDrFHms4mHydrfzh4wcMN/nYIMCW1842C
lt2c2pOcd3f5bzMMH5VYxec5r7jtPWOXr/ei6Q7h8wz2L5lwdqHqbtehq7TV
lmvqhGgKwrRMdunYH2Z7JfBmXRUuTjRY/cx4yyvznQWWB8qsjlZanamyvlRv
fb3R8lajxd1GiweNZo8aTJ82GD9vMExtNEhvFGfUCzJqea+qOJnv9TLf0ZhW
QnyPmXnar95op2fqvHypk/pcJ+WJzvMk7eS72k9vaD++rPX4R61HZ7UendR6
dFTrySGtZwe1kvdqvdillRmjlbNdqzBKozxMvXKj1scQbu0KSUOgadM8qwZ/
u1pXpxprt2qJ50ddn/fjZlYMDqxQ2ljee2eZ4pFS1sUS+fvFci+Lu+UVdr98
bjxFao3P+rffGURI7eQI7B2HzVOxRAt++rDhQ2wGvhO0Z2JqIH5YD9VtGH4Y
wy9i+AMMJ86idpWWprGoUkcph7ivnzOk5oVDAdi1CqFhpElt3lH4XYLbA1JQ
G3f0/Gc3S/95drv/scV07v/7fq2/ePb1n7GoTRR1co6llxu9qG0nY0ekbpld
KHWnv7v/ypUrNwRviFodGbcu7tCauOtxV1PvvijLK/ujfhMG2T5pOWQqgN/L
dV/xw5Acc024cODKgTsHnhx4c+HLhT8XM7iYxcUcLubxMJ+HhTws5iGIh6U8
LOdhJQ/BPKziYw0fa/lYx8cGPjbxsZmPLRSj8RHORyQfUXxE84kPnQG0nXzs
orWbhz08KZoRFuNhP60DXXTwFzoge0wnwe2j+Y4CPYr4CLLxCbJRvEbqa8Ks
tSZBMzxIcW2jGOvEZEYAA2uBhlhghLlGmEF7IF1MSWK/jTWsHGDhClMv0qom
ngd+INgrob0eU8OlpKZyng5+TMWIIqjWvR/bmj2l474OKah9OZz/63bov7WY
Vg5mUZ8X6t/qJw/oGv/4r/Hv3x3TmEV9kMdNnsqLG+ORO2pG0aCFZf2CK5S3
fOy9tbrX7tpeBxt6HWtWPNXS81yb4oV2xavoeQM9b6HnHfRMRM/76JmEng+J
WI/Q8zER64n0oOcjWgyO3SdERgyNt2kuu4Zel9D7R5rOTkApHsr70Mc5VpF6
s1S7fWvXg+utYOCtIPZWEHgp8LwUOF4K+l4Kul4K2p4saXHNU1GN4TXX3uOd
lX5wonnNTlnF/vuxjlO03S2sCLJJJMZjRo5WlOv9f+SDFE03KVlFDzQ5ONTo
pKpBwmjJFeJ1FCRNJemOL7T4DKPlc3glPG6lkFsj4TSZcDssubDjkTZbdz7J
QfIVYLoAs4WYLyTxR0tEWE431YbQ7bRML23XRtpIOrYo+ucttDEy7aQVI5J2
0W7vpDaxFNnCZPW1DUxxjXZCLjNGkEnWPOsgX08yZ82XjoIk47BtSQ6kjZus
rNaZK7ISXDqrXzMaU3Zj3EGMPoWRlzHyPlRToZpH3I8j0TEO1ZrIF+K5Ga7a
44gvdgZh/SbM3wm/U3C7DYO01sGzP5O09tX3+HvWSnpRrx51+8tOZOaqEfP1
+tlNDuN4nHLtke4LCtMKOQ8KeHfyBNdzhJfe/IRpB1NFe1NEO5NF254IIx8J
wx8KQ5OEmx6Q2tn6RMF62ui48T4JGNlCMxpTStuRLN6VQkZjH3gpiacx7US2
5PQbScJbyYVcMV1NI6bHrpj2tIz7vJydWq6X/k43k04ReVuhk8NgWjmNaWWc
klJuaQmvvJhfUUQw7UOBoCpfWJ0nqs0lmNbwRtz0WtKcJWnJJAW1jnQDpEmk
pPZMRmoPft6kRkhNIHU/MqR2mJ6nFquH3fqI4ZLLuFFihBsSA+RGM6y3wBor
qQdyqaMU1ua7Ya47Znlguhd8aV7z8oW7DNmcZsBxBhxmknxIR3+SPeLiCzdv
eLnD3xlz7LDQhFxZXs/DVl5zPLf6Arf0kSA7yzCpzPx0lV10neuSD76ehdPN
788wOuBvH+TrMsvLeL4RN0BLc5UGd6Om4XYt6wN6ric5fhf4ATfEy5MM178w
iXptvqfIIr7M8kSlVUK11ZV6y+v1FrfqzRPrzZLqTR/XGz+rN0qpN0hrEKfX
C9Nr+BlVnFcf9DMrdbLo9rSsIlJQyyQFNZ30DJ20FzovnumkPNRJvqeTfFvn
2Q2d5Cvazy7oPDun/fSUdvJx7ZQjOqnx2i9jdbL36uTu0i7aoVUerfkhTL1m
o25tiKBhhVHzYvPmuTaNvg71Ls61lu41Yq8qbZ8PY2ZVfrukQmnTu967yhWP
lrEulco/KJFLL+mW+rKPj49P7oPvmpL7tycOwtUhOD0CseMQroaVWpipT7pg
jI0gcIS+H9QXYUIIRkZhxEEMT8DwRAx/iRHFUGlsHYO6qShnI0eCFNr9eM4X
8QuwPQQbIxG0j6Q+et2A3TPwXzd+dtT136tV/H9lMaWWX9tnUu8jU5f5l3nt
/0FM+2uuT5CNekekjk257m4jBuTaa8KPA38OZnAwi4M5HMzjIoCLBVws4iKQ
iyVcLONKGW0VD6t5WMPDWh45823gEUYL5WELjwBaBA9RPESTMyK287CDh508
7KJF6IzWPkpcxHJxgNZBLuJoxXfRIZniuxzEySRlNy5ht1j6CffS6LebJsEY
QWUEyS7IWmdC9l2hIuKEXC8mlbVVEnJRjcAaPeLW3xgeJiSx384C1rawcIaZ
B4z9SauaYBHYK34itZHx9NjrexiRgRFlLaPqS8e1vZjWfl2/9cvh/F99j/+t
xWAaBWjUSYk6pv6JUn/8ZJP5b+4w/5PAmfoU/zBFjX1wsnOOmmfh6OklQwPe
DVz+vk9IldKmmt5R9b13NfXe19zrYGuvw229jrcrnobiGfQ6h17noXgRipdI
RUyRVq8r6HUVilfIPRSLEV1E7wvonYDeZ9H7DJROksKZ0mEox0F5L/psQ58w
9Fmc228ou7vC/+1mKKfnxTL3Zpl6Kxh7Kxh6K0i8FYTeLL43i2I3theL+qmO
F0vLi6Xp1ZPhtamevaYwfkhX4oekkG2Mo/Ioe2VV++/GuejyGWRjs9ljB42w
Ux5xY5Lg7jRekhYnaRrvqQYZZv1Sh5upx32rzy3gckr4nEoRu8aQ3WjGabfm
kjZbFx7NaHz40ubt2QLMFRDn9mLasx1Mpx6tFf7EaNKkI3KRh1zqYbpoO/tn
mVbZ3ULs+bl2i2gnNg1unchGwmm78NpGOplkjdQJGeTnmTXPCvNMCaz5mMPN
Ek7WMg+kB6w6y2qLIV4OfgjYG6Ediak7SajImBMYdREjE6H64idSG4OPWsgV
4YkFLjohfha2rkRwBOYcgPdFEhWu/6bms0lrX7+af3NR//w6r68yB5/sMxnr
EdMewny9dr6kjOOxr7mtdnqJXkoRm2BaPoVp/Os5gstvhOezRaczRccyRPGk
PY0uqD0VbX0sJbUtSaRPbdM9AWN0DH1A7qHuj3hISmnbnopjksW7X0gx7VCG
5KgU08QJb8VdME14t1hw/1NM06cwTRr2SDBNJ+8daU8rLNcvIpjGKS3llpfw
Kor5lUX8D4XE90hhWk2eqI4mtcY34ubXkpYsg9ZMg/YMA7ykMY2xPnbGiXyJ
1Hg4Ts9Ti6NJbQ8d/7idNkBGGpCyWqgJgTXGA8nA2jIHBDlhsTMWuCKA5rXZ
HiRmZIYn/L3h60OSIX1koiDOzwv+FNO5YK4DFliTgfTUt/5GPUTptcVy609z
39/klCTzM98YPCgzP/PBdmuV0/JKD99CP6t0f17SdPVL/uPjnMavM+HOd3SY
6eY+3dpxMd8mQsfxiL7XWe7sy8KguwYhT423ZJjuyDHfX2RxpNzy9HvLCzWW
V2otrteZ3641u1drmlRr/LjWKLnO4EWd5GW9KL2On1HNffWRnUn7HrPKtbNK
tLNIQU3n1RudjEydl2k6qck6L57ovEjSTUnUSbmtk3JD58VVnZSLuinndF6c
1kk7oZt+VDfzkO7rA7p5sbpFe3TexWh93KpRG6bZuJHTvEbcssKkdZFly2zb
Zh/HRmeXOguPWqF3tabvx9Ez3/dfWqkUWtF7zzvFY2Wsy2XySaVyGaXd1q4z
fXx3eHW6UtPz/h33B+HaEJwdgYM/IEoNIZqYr0dOoeYSiOzB9YbWAkxZhTER
UNmHEacx4jZGPMeIQqjUU6eghimo1EMuRWoWuOWEM344sAjRaxGyFQEH4Xce
7vdg/BKfHXX91ff45cWcRr587ZqpSFbS61/4T3y9ZPcXXF2/Uyhku3z5MuG1
HnJuowbkumtgHgfzOVjAwSIOAjlYwsFSCtC4WMFFMBeruAjhYi0X67hYz8VG
LjZxEcpFGBfhXERwEcXFVi620YAWw8UuWru52MPFXi6hs/0c7O8ENA7iOIjn
4BCtw7SOcIiN/SibHDDHRzg/O2YexvwVwm4cAnrME+6nkY3iwd380PnOWZuN
yLW6aDrGZIsM1tZ0gbX5hqRhzZeOFnGQldXM3YgB0mAWCRXhLIfOOllN7TBU
L0I1CSrZUKmsHd2YO7H9oVaboL/zF7JE/rPbM/+MxZyUuu4qmXp01w3Svxz/
+J+UPdu5qNeqh7Ky6BrX7g3bJX+qR/E4vzKV2ZXfzv/QL6hKeVWt8sYGpS2N
SpHNSttalXa19d7b3nsfeu9H74PoHY/eh9D7sExHaB0m9yvFQekglPZDKRbK
e6C8k0azaPSJQL/NGLQG383I7a8T3Fvhn99M+uYHD5adJ8vGk2XlxbLwZpl5
s0x8WEY+LANvltibJeM1FtubpefN0vFmadO8pkEhm5fiNC+CbGoUtVHy6t2p
yd691BKiDjA1C3t7+3gn81um4jcCvVf67Ldc/VyefgFfv0SoV2GgX2WiX2/B
brZmd9hziIXbjQtPLrxp/zZhNKa7lo/FAiwRYDnt2V5Dt9NuEhCTdoSQmLQJ
oMlM2jFdmmeZVtl9tIgTWyBVrEz7hLQZm+a4XTJkI0lHtGcygm5222zAFNdC
Z7klBNiTtrVFpmTO2gxzeFvA1bKLB9JLWlYzXkAPVgsGZz10w6G+AxNjMfoY
HdR/B6rPoZpLT75G23h80MEbCZKsSJNa7DyErkHQdsw8AddbkLxs62tp/8sv
969zi35zfXKZiPqg/bJ/9pOhIZ2nI2nG4/oInZcles8JpnF/wrS3Mkyjwx4P
pIr2pIhinom2PRFFP/mJ1ELvC0LvS4to4Q9JHS3qMcmEJI7H5+I9L8SxaZKD
NKYdy5ScpDCN9KZJMe0ag2lFgi6mRzLhWopp73SkYY8VOnkVuvnv9AoIprEZ
TCsr4b2jMe19keBjobAqXyjFtBymoCZuzpYQTHtl0JEuQaf1sWucyH1ZnIg0
ol+WKHKOmafGJV/k8frYz4SKsMl2gXxVi0m3WpgxNpvSsGZJKmurbbDSDsvt
iROS4bVFLjSyuRJL5Dx3Mh2byBVzXTDPhczLXuiAxbZYak4iXNeKsZl6Zn3s
Zrcc5ddc5L67xylI42fkGtwrMz9ZabPtg93KCufp+R52qd4GSd7al90nxduN
ieCOWaY9baWm/np9w1Azx1WOHovcvefY+YYYzT0iXpFkuCHFOPKV6c4c84PF
FsffWZ77YHGp2vxqjfmNGrM71ab3qo2Tqo2e1Bg+r5Wk1ole1grSa3gZVZzM
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
PEy//xmDG2PgMUbraurpbM5sgcgu6GdzzTkBbo+B7xj4jYH/GNwZg7uMRiNg
DO6NRuAYBI7G/dEIonpAFTyKKIQqlOrhSKJHo6hG6jVKp4dEWv+JZAzkOh8h
TTjuAcU9Bv3u0d3XHUptvjRt7m1CuiJZXrvEI7m6U0LSCblfQmBtG7WCdDTH
HCtMmQbLRcRUxOwH4ihi5FvXLyZ9RMk93ssurXo3a85/msZ//P/Jf1WwqWwG
1pgLNjnQbBIb+tMe2fGQxjtbMO1/jJyiop1HjlsvWtV1pPQLY37PERb9Rs8e
MGr+wJELB49YNGz4khHD7EcNXTpmiMO4QYTXJho5mjK81n8Fw2v8viuFfVZK
+qyU6XlN3cvRvKeuxGbdfRkjm+4ONt0cGHCb1M1huYnTJWev/9Ufh/RmCwTf
2HaBb1/c7o+bhvAxhvcgeA2B1zB4DYf3CHiPhM9I3ByFW6Nwe7TmPN/lh0mk
UWTNXM995lovE7Io3W9ci/SpIWZJCdXr4Rg8HK3TozE6kTvHEoWORQijcUTB
DL5NQNAEpzXzNJclhNrYQpsv2xjJoyU2Adwor11ieI2el32M2kL+Qjsht1ng
S9oG2QhrUxcRH0jzjZBtBc8ZY49iyBU6qpYKo9rCiQixxIlV2LQPU+41YyTS
Mr//zwWbu24sqzF/ac1aseEDJ8+yXZF/7AaJXUJJla1nb4PVGwim6QpqJcLi
Yl1BjR1PqyiQVuW/XVDLJgW1ukxlY0ENGtr6mKQntbh3SE1NSK3RVOSBEvcV
bxog/dgeyCaw5qnnNXeKYNdppewdXaffvUEf6UX7J2/Rl7orrw+U1wXLax7J
n0XKymMlJYnC/FR+VhY/JU8YlS+7n6/yzrG4lGV5LN3ip2T1N7HKNRHyJcHK
OXdU07wV1ldk6nNi5Um+4ihXdczM4ripzSkW07gLrvKXugtXeovX35Z8eUf2
XZB81yPlL5GqQ/HmJ1IszmVYXsmxdM+38Cwwv1lo7lekDihWBZUoQ0sVpKD2
RBqlFceWCePL+Iml3GTq95hWxGAaJz2fm5HLy8ziZWXws9KlsRGTz52av2H9
/A3rppw/rg7xFhc9lpSES8seSZ6ESCqCpFWB0qd3Jc99JTW3JC+9JfU3xGBJ
7Rwd5TvCwz4JOfBjpyW2ToLTVKydgeWzsXAeGFKbtKSeITXespdjVtYOWLZ7
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
ZXfz/Tzz5AlLCBtIZuc7887MDUvp9skXP/jb+ncazxfhpDXH1PrtIeLDOvK5
QWcxHwg5uyffyJ8wmBKHUNJg3pLFJpEhlCq3tCGUPsRcg2SQm3EIZQ0m0xDK
HiLPcg+m3MErV0zKS7yJ8gZdNpS6OJC3ooFUPIBKBlCp3Mr6U3l/fopRVX++
ZFbdl6r7UFVvquxFlT2pwpfKferLvarKPYpLPUxFHtX1XkX1noZq96hSj335
Xh8f91SM/r/smTeYJhJQ9+jUrDNLtiMlrKa5MNYL9e/hve94t5xct6Jcz4o8
79pcX8rrSXl+lNeb8ntTQR8q6EsF/fg6O2sX+/M196IB5i7F3KvIcz5lA/i0
D5/5GUSVrA2kKt52bAvZsT2EqgfxVjOIL4GxVjeQ6gfyiWj+dpClDbR5Z6Bl
slqEsv7y9HVfeR7bT54+8hXjpUrqnkLd91GPcLp5CT04umxdSGZc47pH9i2N
uken0GDiyHa85LDTgOHh4TcHKv7+zCKxVa1RWLPmtctSm65hOx9WfyGsPkpX
F6WriZKqzBlNyzJacbzmYqK6IIkvpeWkhmalhWSkB+kz/BMzA2IyA89mKo5n
qA6ma/bKMW1bku6b+LDwaN1753VvnpJePaZ9/rDm2QPqp/aZk9riP0IX7gqZ
/6vcfuEZbeGv/Cj+ZXxjGj/mcfVe9dp9GnNMO2JeTfvofNjmaL5Ox2LaD8lh
21PCftHrdqbpdqdLe+WYdjhLfdSkPGHidY/nsoMv8Jgm1z2ymJZtrntMs9Y9
poUa2ReiV2YnK3PY15XAj0YpjNUUxWhKorVlF/iOvKozUvUpqfaEVH+UX09A
B7U8qe2Rk9pvclLbJh/8yJLa50H0iXyZmkhq6+WktlZOak+Op6WTaP6MlTOn
5U2bQRNm0ejH6f65pF1AwYvoziV0yzIauqrhslrPPdTjqBzW4smbhbV88qog
z/rL8pqn3LzEWlsJeSWS9yHy3Uz/XkAjRxVvuvPwSdQ9OiP720MctheCdiKm
46ZoelPiIHkv/yBKGUT6QZQqt7RBfLdIxiDKHEyGQZeXIQ2iHNYGUu5AeaJ7
IM9HyTdSwUAqHEAXB8hDqf68lfSn0n68lfejir5UKbeqPlTTm2p784Nna/2o
pge/27Ham6q6V1V6lVZ4FJa7mUrdUovcYwrcj+d6nC/zPFDg9ckJz9GL/9Jc
RhOwDcQF2I6URGrr7GcE7YgNMvv39ogzuRnzuxUUuJcVelYXetdd9KGLPehi
Tyryo+JecutNJX2olLW+fPG9vK/cpcitUm582qcfPxuNtVpLq+sfHq6LPHwX
1fe3BK7+NsmruSYSmWi95UIjP8vctY9ldORVSp6p1P049fyM/F6gv82iMfdX
rFOa+Pa0BkfRou7RGVl3/YuSJAcfINksrv15eVgTec0a2S7oeDtv0y7IAe1C
WF1UWF20riZaVx0jVcZoy2O1ZXGaknhNUYKmMEkspfGKR2N6cEZGoD7TP9EQ
EGMIPGvgq2mH09V707S79NL2JN2WeN3maN0H56S3T0nrj2lfitQ8d1DzjJzU
VuxVLWNJ7ffQhTtDF/7GA9qiX0MX/xa69LfQ5TuVT/KNaarVESymqV86oF53
SPPaES2Lae+e1n10ThcepfsiNoxlwO+TdNtSwn7W635LleS6R+3+TM0ho/pI
luq4SWmpewyy1D0GJGbzukd9lrw9zaDIyAzJTA81pIVmpSqzU3hM4wtqLIey
NBqrKY7WlkZJ5RekynNS9Rmp9pRUf0JH5tJHiZc+/mmzSY0lta2hlqQWKCc1
tZzU7jcntWcsSW2BnNSmT6dJrKOYQw/OpbD5FLqQhi2m/y6lfzxBA5+jvq9R
7/eoF+tPvie/Xy1h7Qz5xJJPGnmbqHuenMhK5beV5FlOXhd5hSRLcz4R5LeZ
x71/zaaJD1a8GZoV1Xi+CCetORf2wtFgiQ3/g10W37bW211/oC+lDCD9AEqT
W/oAyhhImQPIMIBvGMkaSCbWBlD2AHMxEq9H6k/5/amAN76efrEfFcmtuC+V
9OVjqrI+VN6HKljrTZW9qboX1cjRrK6n3Hypzptqu1OtZ02NR3mVx8UK99xy
94wS94Qi9/MFHiyj7Td57jR6vR/JM9p1111nJ6MRphpcToORUmc/HWgv7Oda
F9YzKts9Ld8t+6JbUZFHRbFnTYkXlXhTqQ+V+VJZDyrvSeV+VOEnL773oqpe
VN2bT/jUiGmfPnwrK2v1fWxCFm/h4VJk5B2XJy9r69Wo+VmWzEQuY627XGjU
3bJJhE9rF/F7ab1Pku+v1Ptd+vsS+tcEGqOufTEkb+8tX+9A3aMrsU4csY7I
8Xf9h4eHyzvXFoqwNvxSWLPmtUtNV88bS2dyiwmrjdVVx+oqY6WKOG15nLY0
XlOcoLmYpC5MVufrVbks16TzmJbOYprBP9EYEGMMPMdiWiaPaRFp2t/10k9J
um/jdJ9F6z46r3vntPTGCe26I5oXDmvWsKS2X/1UhGrFHuWy3aFLdoUu2Rm6
5Df+dulOltFCn9ipXPmHvDEtQv38fvVLBzWvyjHtrRPSO6d1H57VfXpB93mM
7pu4sK2Jum3Juh163a+p0q507Z8Z2n2ZmoO87lF1zKTkdY8mHtOsdY+JfEGN
1z2m8rpHFtMUmRkhhnQe00x6ZU6KKjdJjmnsK2Vfb6ymlEXUKKnyvFR9Vqo9
LdWdlC8pOKKzJDXJnNR+FceJyEnNfJlaEL0fKq+p6WjD/fTKg/T8KHp2DK0c
R8sm0kI5qc18jKbMpPFzaNRcum8+aRZS8GK6eyndtpxufIoGvEB93qDeH1Cv
L6jXVvL7mfx2U89D1OME+V4gnxjySSCfRPLW81pr9g57xPcY+e6knl/T4Dfo
5vl0xziarK16MyT72OCFT6Du0TWIgZDogthLCWrGuiw2Urq+p5f+UG9K60fp
/SijH9/Uz5qxP29Z/cjUj7L7ydtG+lFuP8rrR/l9eSvoS4V96WIf3gMU9+Hz
3qVyK+tN5b3kYZUfVflRdU9+HkhtD6r3pXofHtDqvKjOs67WvbLGrbjKPbfC
3VDmllLiHnvR/Wy+x9FcjwiT568GntFGLWo5owk4/tol4Xwkl8e3zSoUk+d1
P5PjnljgZihyKyhxLylzryx3r63wpEovqupOVd5U7UPVvnwJnvUktfJsT31P
y1ZWv+bahg0PRkb+x/JhPS9tfb2UxXxsmrcll4nNIF6WQiOPen63kVcev5HW
+wz5/EI9w6nXBrptCanH0bSg6pf8C3+94/CJxuVGuLfINTjLibWXL67FyO3y
1FYvNxbNRKuNDauJ1dXESdVxUiXLaPHa0gRNSaKmOEl9MVlVkKLKS1XmpIVm
s4CTGZyeGZhijmlBLKadzFRGZqj3WWLa1njdlzE8Vb1/Vnr7pHbDMe3Lkbz0
cc1BNU9qe1Ur/lQu/z102e+hy+X2xO/KFb+HrtilfIrFNH63NYtpGh7TDssx
7bj0zknpgzPSJ+d5+vs6VvddQtiPSbqfUnS/6KVdadLudO3eDO2BTM1hg/pY
Fo9pp02KcyZe9xhtU/eYYpLrHo3BGQZFZmaIISPUmKY0sS+KxU/21SWpCxI1
hQmaojhNSay2LEaqiJKqzks1Z6W607p6a1I7pDMnNetxIiKpfWdNasE2Se0+
ntReGEWrH6GnxtETE2kRG59MpVmP0bQZNHE2PfI4jZxHYQtItYgCltCdS+nW
J2joMzTgJTmsvUu9P6Ne31KvH8jvN7641jNCjmxHqMdhuR2gnrv5QZF9P6F+
b9CAtXTPPBrxMM0NrH09sGDvLd80sU8WdY/OrjUbacG1se496NZ/r1nsSRm9
KaMPGfqQUW5ZfcjUh7L7UE4fypWbef9IbyrsTRd7sZaXOmTlkxOpxI9K/ajM
j89+V/Sgyh5U5SuPrHyo1ofqvam+O9V71dd5Vtd6VLCAVu2WV+lmLHdLLXVP
KPa4UOhxMs/jUI7nn1k8o70X6TFqoTmjsefW4vNH3aPLc5aRElwF9jN+17/+
u/57txM5HtEF7vpid1OZW0GFW2lVt6oat9pa9/paD6rz5DM8rBsxr3NZm23U
8rVp/JENG0bGx//NJoVZs5iXpXlYChrFBhBP250gdXKJUT55ZVL3RPI5Rb57
qMfX1Hc9DVhF/5pP94+nuZqaV/2LtvtnJHs3KjdC3aOLcZZLIeVjIa+/6dkF
lkvWYsPqWbOks7pYa0DjrTpeqorXVsRryxK0pTyjaS4mqwtTVAV6JY9p6aGm
DAWLaWlyTEswBEQbgsRqmhzT5KvTknU/JOi+idN9FqX78Jxuk7yg9upRXvq4
9pBm9QH1M/tUT+1Rrthtbk+y9odypdxW/aF6do/qOfk0/pcvxTTtpZgWpfsq
Vvdtgu6HJN32ZB7TdqZKf6TxmMbrHg3qI0bVCVPoKVPIWVPweVNTdY9GS91j
ZqgxQ2lKU2anKnP1qrxkdX6SpjCRV3iWxGnLYqWKaH6OSrUlqfELC47Jd4Kz
pLa/maT2VeOkNoJeGUkvPExrHqFVY2nFBFrCktoUmjONpk+nybNonLys9sAC
khZS6GIKWEp3LKebn6S/Pk19X6B+r1Kft6nPR3Je20K9vuORrdf31Gsb+f3I
Exx7vPcH1P81+vsTdMtiUsyi8Y/QE6G1G/0Ld/unZXUbOBh1j67qSs+qBRcj
5uKu79ct6UiPOoNfvdGPsvz4aWzZfpTjR7lyy/OjfD8q6EmFPeVdJD2puEde
6qCVT06gUl9ep1TuQxU+8gR4d6rpTrVe8vjKo7bWo7LGvbTa/WKVey4PaO5p
pe6Jxe7RFz1OF3gczfXcn+35h9Hr50yvdw97XlFGI3k4hF6oi7A/UmK/xFyT
k2I/7HfeftsnxzwO53qeKfSIL3ZPK3PPqnTPr3YrqXErr3OvqnevMx9V7W6J
VLbN6/ImHvFcuXJ8Xl4fyyPWP+VuXSy7/H3z8lk1D2ieheSVxW818okin+Pk
u5t6siHT+zT0ebplId09gx4aR4vCql8PKv4xICtq8IKG5UaEeWzX1eLEUZ6s
45+YlViq9hgyOCRlT1h9HE9nIqDVxoXV8MYDGs9oCVJFgrY8QVuWqClJ0hQl
awpT1AV6VT7LMmmhOekhpkxFJotpBjmmGfneNMtqmmp/Ootp2l+TpR9ZTIvV
fR6t+/ic9O5p6a0T2teOadcd1b54WLP2oHrNfvUzEaqn/lStlBt756ndylVy
e3q3avUevjHtRX4av2Z9pOZ1uzHtZ71OxLQ96aLukce041lKFtPO8AW1RnWP
pqDUrOB0oyLDECIW1LLSldlpckxLUeezQMq+ZBZOWUSN05bHSpVyUqs5p6s9
w6/85td/HxVJTeJJbW/jpBZiSWqW6se35KS27gF68WF6bjQ9PZaenJDHk9pk
mjuNZk2naTP5strYOfTwPLqfhbVFFLrEHNZueZJuWkXXP0t9X6QB66nfW9Rn
E/V9l/p8SH3eM/9y0Gs09Fka8jT9dzmFzKYHJ9P00fSMVPN+cPGuAEOKd6Nj
+XHSmkuyvT4bw56uhv2MD/b1XrXIs8LoW5HlW2nyrc72rc7xrc71rcnzrc33
qS3wqSv0qbvoU1fkzVp9iXfc2Rs3rBtZV+5VV+FVX+lZx1qVZ12NR20NL24s
q+5WVOWWX+mWXe6WWeaul7ehRV90P1PgcSzX41C2554sz50Gr+3pXu8e8nx4
QQtnhjQJdY9dUOORkli/wHeC8woPD+/Vx2N7Vvd9eV5HCz3Pl3gklHmkVnoY
q93zat0K691LyK2C3KrJrYZsU5ub3Kxp67L35aTW2yaR2TZrNPOs4edge5aR
VxEvcfQyUfc08o4jnzPke5DfRcsz2nvUex39z9N0z1zSTaZJo2n5iJo3FaXf
B5rO3PL1T43LjXBvUVfQeNc/yb2Tg4R08+La0wstAS3+UkBjrTJRW5GoLUvS
liZpSpI1RSk8puXrVWIpLTsjJIvFNENQmjEwxRiQYNmbdjIz9EiG6gC/4Vr7
W7K0LUH6Nlb6Ilr69Lz0wVlp0ynpjeO89PGVSA1PagfUq/epntmjevpP1ao/
2VulaM+wtlu1Zq/6eX5+iGbdIc2GSM0bR7VvH9e+y2OaThQ9fhnLjyj5PpHF
NOnnFOk3vfR7mvRnujYiQ3PAoI40qBrUPdqc9xiYkh2YagpKywrOMJrrHrMy
lKZ0ZU6qKk+vzmeBNFlzkcc0TWm8vKAWo6uK1lVf0NWe09WfkS+YO25Jagcl
2ifxgx9FUvvFcpnat6E2SS2E3pGT2mtyUnvpIVo7mm9Ve2pC3rIZK2dNpgVT
ac5jNH0GTZnFw9qYx+nh+XT/Qh7WlEsocBndvZz+u4JuY3ntabrhGbp+LQ15
nq5fQ4NeoP95nm5YzdutT9Jdiyl4Hj0wjaaMo4Uj6Xld7cchxbsCDfHNzRdh
JO+q7JxVK6olkdBdlZiL8/+P5/kTHkUmr+Jsr5Icr5Jcr9K87mX5XmUFXuUX
WfOsKGbNo6LEY3/ELa+++kBFuXt5hXt5pXtppVtxhVthRbe8cjdTmVtmqVtq
sVtSkXtcofuFAo/T+SKgeURkef5u8Pw5w+uHVK/VX7sHPdTs2fv2oe7RGYU3
5eo+lXWkxAI7vhOcHesB/Pq6f2fy/j2v+4FCr5MlnhfKPOMqPfTVHhm1Hln1
7rnkXkjuxcRSm3sZuVeSezW5s+BWKzcW3+ovb+y7Ijevdx3/XQ/Wavh6mUcV
eVTIq2al5Fksr53lUvcs6p7BV9C8E8jnPPkcI9991OMXfmi238c04FV+Qe2N
bDQ1mx6eQDNG0sqwmreVJd8HZ5+44+CpxtvTsH+/S7Hu+hfjJQeJaYJ559rg
IXft/kKqlgNaVSLLaFJlkracZbRkLctoxSmai3p1Yao6P1WVm67Mzgg1ZYYY
DYoMQ1CqISDZ6G+NaacyQ4/KZ/LzmJai/SlR2hovfR0jbY6SPjonvXea71B7
/bh2/VHNy5GaFw6p1+5Xrd7L6xt5s7yzeo9y9Z+qtXvVL+xXvyzOD4nUWmPa
h2d46Pssiu962xKn25qg25Yk7UiRftVrd6Vqd4uYlqk+bFAdleseT4u6R8t5
jwmi7jE7UC/HtPQsFjZDDOzLYV+UWFCTk1oBi6XJfEGtJEFbFi+Vx+p46WOU
ruaCru6cfMfcSUtSOyxdSmp/2Ca1UPrWsqb2ieXm67d19PoIelU+/vF5eava
0xPjlz62Yc6jtGgKzZtGs6fT9JlyWJtDY+fysPbAAgpbRJolFLqUApfTsOV0
9wq6fQX9i7WV9G+W3VbQnU/QPcv4pjbNXHpoJk2aTI8/TE/q6BWpJlxZsjM4
+0KTxxnhpLUuosH12Y4zWQTtR/Ttg/y8li3ulp3tnpvjnpfrnpfnnp/vXlDg
VlDoVljEWrfCEtbcdu+9+YOPlLklbjklblklboZit7Qit5SL7omF7rEF7lH5
7mdzPU7keBwxeRzM8thr9Pw90/OXdM9tqV7vHPB4eAEvdLy6jEbYBuKcWCi7
rpHGLzFXBMXbLoN1BXcN9/siy2d7XvfdF7sfLvE6UeZ1rtIzttozsdYzpd4j
nTyM5GEijxzyyCOPAvK4KLci8iiWW8ml5sniEstiReR5UW6F5Jkvr5rlyAtn
BnntLEm+tCiafM6R70nqcYh67KaeP1HPL+V1tNfp+ufp5qV0xzxSzaDxY2ne
cHpGW7tJXfq9IudIQGqm913DGsQ0Qt2jk2D/cUMbabwq0XoOu+tffKU3rVzC
AppUwTJasrYsWVuaYs1oqoI0VX6aOaZlZYYYDIp0Y5DeGJBk9I83BkRbVtN4
TMuQz+RPkX7mdY/SljjLgtoZ6Z1T5tLHV49oXj6sfuGA6rl9qjV7L297VM/t
UT2/V/XiPvUrYmNapObNo5qNLKad0vKix3PS5gu6L6N5RSWLaT8m6XYkS/wU
ERbT0jR70zX7M9WHLq97PC/XPV7ansZiWnZQqonHtAxjCEtqxszQrIzQ7HRl
DvsaWSAVMS1JU5KoLU3QlsdLFbF8Qa0mSld7QVfPktppS1LjBz/q6KDuUlLb
2VxSU9C7Ktoo0RvD5UNF5K1qzz1Cz06IX/7Yhscn0pLJtHAqzX2MZs24FNbG
zaXR8+ghltcW0ohFJC0h9VJSLqXQZRSylEKWkIo9sph0C/ktbKNn0aSpNGsc
LR1BaxT0mqr2c3XJLkX2uTsONDFfhLpHp8Bvy2qk8WtKa9ieVYvXoC5C3I69
YG73VFO3tOxuGTndMnK7ZeZ1y8zvllnQLaOgW3qBW2qB247dN2/8QJmY7xaf
5x6T5x6V634ux/10tvsJk8eRLI9DRo99Bo8/Mz13pnv+nOa5Te/1zn4e0AIf
+j8ioLVyM1qTUO3mjFgvxF5TWF6LsHEt3wa2HHakBK0k1vRD5/p8lOXzTa73
jkLvPSXdD5R3P1rpdaba63ytV3S9Zzx5JpNnCr/RzDOdPDPJ00CeRvLM4m+9
svg75rfsBYs9YpCPBMnguYw3PXVP5sWN3lFyfeNx8mXpLIJ6/CHfOfs99fqc
H7/W/2Xqt5r+uopuX0jK2fTgVJo6mhZr6Tllzbuqkh9Ccg8Hpuu97x7WeJYJ
+/edheiLFJe7umlDW445cWRdXLth1UJtWYq2hMU0veZiqjmm5bEUk2GNacE8
pmUFJGUFxGexmBZ0zqg4ZQg9lqk8lKGOSNP8rtf+kqTdliB9Fyd9Fc2ClfTR
Wb6gtvGk9s3j2teOal6N1Lx8UP3CftXaiIbt+QjVCxHql/er1x2UN6Yd1b51
TLvphPa9U9oPWUw7yz8bi37fxErfxUs/JvKY9muKtFOvlbenafZlqA9mtlj3
GGSue8xSZBrZlxOSlWkT0+QFtYvJmuIkLUtqZQlSRZyuMlZXHS3HtPM6OiuS
Whg/TkQktQPWpKYxJ7XtovoxhJ/9+HkQfRpIHwbTe0rapOVXqr02gl6VCyCf
H01rJkUumxo+fwItn3QprM2eQTNm0rRZ9OhsmvA4z2tj5tHo+fTwAnpwIV9l
G7lQbuyRuTT2cX5l9tRpNHs8LRlNq0bQy0G0Maj2K1XpHyG5ZwLSjM3NF+FF
0PE1nrgWA6Rr+Zw4ga1LEX37gJ5ec+Z5XMh0izK4XTC4nWfN6HbO6HY2y+2M
0f3Dr+/+4Ou7jxvdjxrcIw0eBzM99md47E332J3uuTPN8xe95/YUzx+SvTbt
85j9SrfAB//PtSyi2cLx106K/e+z74F2/Sscc6QErSTCWsAi97eyfD/J9dlS
6LOjxHtXmffeyu6Hq7sfre1+oq77Gep+nrwukFc0dY8lr3jySqDuCfLbRLmx
d07k9Vu2ckK8HMpiyTuGRzPv8+RzlnxOks8R8j1APfZQj9+o5zby+5ZfHdvr
A+q9kfpsoKFr6KYn6JYldO88GjGdxk+kOQ/SChW9GFj7XmjpD8r8Q0EZiYPn
L2+8/iLmsTvl3w2uVHv3RQ54KaT5pBGW155cxGMaz2hpytz00Bxe8RiaZVAY
jCymBfKYZgqINwXEZAWdNypOyzHtsHzY4x967a/JLKZpWUz7Okb6LEr69Bwv
WXznlPT2Ce0bx7QbjmjWHVa/fFD14n5e32hpqhf3iaZ+5YBm/SGxlMYrHt9h
MU0uepRX06Qv5Zi2NV73Y6L0U5L0i4hpqdo/0zU2dY/KJusek6x1jyabmGYI
NbEQmq7MZV8s+5JZPmUpNVlTkqQtTdSWJ0iVcbqqWH7rd524FlwktRMsqYVZ
jujX8YMf98gniuxUX0pq4pR+ltTCA+kjltRCeQHkWzp6fTi///qVB/m5Imsn
RD4xJXzBOHpyAj0xiZZOpkVTeRnknOk0U15cY3ltymyaPIcmPU4T59J4lsvm
8OW2SbP5QZHT2IexcDeJFj9CKx+gtWH0upI+UNR+qyzbHZp7JjAto8n5ItQ9
OgX28ygmi/SXa6vP3+RGWnBJIq/16+0xdX63Q3r3g3r3fSm8RaS4701xf+vz
e1j7I8VjV4rHr8mePyd7/pTs+WOS19ZEr28TvN7a6/HgvL/8487/3VYBTUDd
o/Ni3wlTpkzpmL/LzkgJR4Y6Mtbn/Os/t4/e4vtyVo+3c30/LfT9ptj3hzKf
Xyp8/qj23lPjva/O+xB5H6HuR8n7OHmfIO9Tcjttbj7s7b68AUtXTmCh7AQ/
vNHnKPlG8hNCfCP4ISE9fqWe26nnFvL7jHp9SL3fpv6vUP/V1J9ltJX03yU0
bAGpZ9PoqTR1HC0YSU+r6FX/2g8VJT8qcw8GZcTf/OX2Jkt2UXPiRDqmL2rx
UsiOPyhS5DX3wUP+38bXlLkZoTmZISYD35iWaY1p8mqaNaYdt57Jr9fuTJZ2
JEo/xEtbYnmqYtnq47PS+2e0m07xYxvfOKphSe3VwyyOsbBm0w7wdTSxlLbh
MD88hH3wxhPad05q3z+l/egMj3ufiZgWx69m+yFB2p4k/Zyi/U2v/Z3FtDRN
RLrmQAaPaUeMyuNZoS3WPfKYZmRfFE+g2RnKnAyWSdX5qZpCPT87pTiZx7Sy
BG1FvFQVp6uO0dVG6+pZUhOb1E6FyUnt8svUbKsfrUntGwV9ISc1cVD/O3IB
JF9Wu49eHcl3q70wacfSKeELx9KqcbTSEtYWT+EHjLC89vh0mjOD10Oy1DZz
Js2YxY8cmTmdZrHfYh8wmRZOpGVjeUZ7TqJXNLRRReGhtT+oSvao8k4HZaba
mS9CR+T4xGaQa1xBa1GDjbRN9jaY0HYNom/v09t9/NxuP8d7/hTn+WOs5w+x
nmveVL31w63fxXpuifX6Osbrjd0eM1/sNvLxy9JZm38fou7ReYnREfuuELVG
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
65dQ9wgAQkREBOuIVq9e3QF/l21JEuaLAEAIDw8Xy/rt+reIjbHWuWvRF13L
7bQA4NpE17RaJhb6O2CwJHqq9v5bAMBZ2HZEU2QdMF5ioyPMYwOAILbK6mVi
G0i7/nXW67NRfQ0AdrBxkdi5L2qzre+3yT41AIDWsD1ORGxYE+909vMCgK5C
9EIN+iKMhQCgc4lOybqOxjolkd0wRgKADiPSWeOOqGMKswEARC/E3rLOJzw8
3DoWau/FNQCAKyUW19A7AUDHEBVHDR4RR2RjThsAOsCUKVMa7P4QVdnXeGkR
AECbE1NJ7b1PBADADrHijykjAOgsYr6os58FAHRdjaeyCUkNABwAkhoAdC5R
YoSVfQDoFOL2kMbzReiaAKAjNVliJLaNoCMCgPYWEREhtqc1eFz0Qp3xjAAA
OBHKbGuzxcVGKMwGgA7TeG+s6IhwoggAdAAxcd1g5INeCAA6ndi2L/oicZMR
Dn4EgA4mRkSs5xE3qeEEWgDoYA0mrkWnhAJsAOh04kBs2/NpO/sZAUCXwzoi
2ysd0REBQEey7YKsHRFiGgAAAAAAQKdjeU0s6yOjAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
+F2KGPM2iakfAEIDQKf2oFMAMgS0TmruLFpyJ1BiJaB1ZqxCcCKvse6Iea1V
9mozYos4tXFlO5FM7AwiNZpERD5kVyykFX9MsVVpwzQbY222n46t3mDEwmuu
z8zGsyaH8tlor4n3BODK7lJN0iY9iJTrq1SL5PKl16OxD5sLX258s4grGymD
sh9VD42lCyGSU/SNSR8g0JnSnQMsaGajw8gVI1sYxbcgTRNSo5bxWiiEtYoR
3tmuzYgtYotHeBY3V1ZWxpEam0RERFYsZHaqUsgDMRrCNOuklnZMSxbZtMrW
FKTmSvwMOtpputFOl+32mvhuEld2lNbmdnqRGt335qSWEeLTDlcWl2oXNdWM
I9tFAvSyVRAVWWV5RJQViYy9sg5rL5hlseQdaNWU1IIt7iQzy2vlIypko93p
VIhncXNlZcnq9InIDnZaMISseWRvx/AN+vjx4/D1PtDQl8E0K7Yd31LXY0Tr
aGxlGiTFNAuvmY3nsksypFK8JwBXNpLW5rbqTnhKRfa9yZM/IzIVOamx4n1r
ubKgVNs8qjaEtFEkmgzwy1/5DIcTmpMxb8OYRjIos25KYeK4ixUHyq3Ka8QQ
2cKCNagtRES2FubWZatVzo6rnZSK5wNwZTWpLoFUc41sFylMUx5sTVrx7y6x
CpS+K9iFOHW8liyy2XLmmmp8TUpqrtBPFKRGgmvPIa+ZdOWydW4A303iyuLK
uJga2femz/aMoCpOaqrifWu5so6URa+pzixiD40FioOtSU6Rq8kA0aydxQi+
2kncRTpGDrC4a4DkQ3KnK3vfKrWpGMMaawuyUVhraW79/e85rWzNuii10TmK
UxtX5kt1Okp10J8tnpWRGnzMEnmcLYxmwTTrpJbGNiOpqFyTRtZcKalRW3Ig
CaxBRzj0z6bBNZl4TwCuLCitvaM0JmmzDdnonXR/tvOwUbLim0Vcn1cEoOib
OPkwFUVqqoVpVGS5VSWinBqUdbHqru0sLJYyt5c6UGIZrBGHBcmRjfJaJwhr
v0ZUzdZb06kWz+Lm+owiExR93ZHJJBU71WwSEWAOthZa8Tu20sA067CWXphm
pTmk9tHYrsQyUnsiJTUB1szG8xHGsJyUy81zALiyiFTbPKalnJbue8tILSPe
efkbeorEpx2uzyLSKv//RKXirZwcGitLJaKC05femK9uTBNZpMw6nYnuxpBa
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
yWhaMTUZqUnuqGGaAGtfgbclwbuqIGki+tEfvMW8dkGEsgtq7MbYVeZLagMZ
uF1So7bLGtVtasjmdoOBNTa+JitbswXW2ARIWqpmU+/H/761FKm9Kgee/wKe
/AoSK4KHlcC9KuB2NXCzOrjmDi55gLOe4KQnOGoCq6qY+38X/dNXZUn7RLhu
hBMRWTrSJ4+y4z2NlwkdPwraFzV8W96tVQVjUONyUaHeB0JrHAj97UBH6JoH
OtY6gDHtYMfaBzsgTMOkVvcIcr2jofWPhdY/HoowTUpqjc52aXyuS2NMak0u
dsWk1g1jWnefa919rvdAvtHTV8C0Xn63wv1uh/tBTLvT2//f3v53+/jfw7YE
1Ho3Ry+QokWLak3jqj2cuTJCtCdtLvyFr1q1ytHOqWKHGdAVOk7TfV8Fvoi2
bt26//qdjstjItYfPnj5ToZiGkTCZgV/vuc85m7JGbdLLr5ZcsvVamdnjJjD
tlRlm6kaGRG6pID5uX+X2VVa5Wn0s7nwdZF2yQ6NhQM2LknC1h3rRUNMY0lt
ggLT4O9+vCKgNlZkNGJ5TG0KsoTUlKmPM5giNRHThhJMmy1g2uC5YNBcMG4F
2HUS/cwPwcs2YE5NMKEmmEj8G5iEPbmG4EjRU7wFTxUd5QWivOWehi25WcNi
BG41LeBGA22TaXyNDa41sqRBCrDmh2GtGfizBYggrUXYBMgA0Kc9LlULQqVq
pP2jQGpi78dW5Njr7pJ2Il64SK1SX1CuP0p9dBkIvvoDFBkGnEbjgNpUoJsJ
dPOA49/AYQlwiDLbeTctTuYrOKelZZqS0ZnB7osWtQuOCC+wYUbhDdPtNyBG
s98w1WHDFIeN0JGOm7A3RzpuiXTcOsVx2xSMaQyp7Z6m2zNdFzMDBdT2zdTH
ztLHzdbvFwNqFNMIqR3923BsIYtphtPLkM8sN5xdIcG0i6uRL60RMY2Q2gan
a9Abna4TTNtkWDgalfVZn3yIUnSUDJftYmP98MriMHyaVTLltzDaf6kitY9F
kZWMpkJqxeVhNZUom0ZMTUiGxLBGeO0/fEjk3ffA8yrGNOuGIHYBmx2o2kZw
sxJrE3nN7Tq2kteUmZBasCYLq9EOkCmJqeGT1GjqI+olUh4H1CrhgFoVS0Dt
vAc47QmOm8AhLxDrBXZ7ge1e/82rem14ue2dv5vpUcK/Wul6riW++z9Gdnb2
doXsC0EXcCxh+L7SN60rfd2+5jdDfMpOD/M81Nl0ELqT1wHMaPs7Qv+G3KEm
9IEOtbAhptWBPoRc93CHehDTGFJrgEmt4clODU91bnS6c6OzYY3OhTU+36Xx
hS4Y07piTJOS2o0evjd7Ipt7IlK73QuTWrjfv+H+d3sjI0zr0+x+32YPsFHe
o1Z5GhHfR8oc0T0lZdPsHC8IOPaFi9SffK7Z4ufNFj2vP/EcwTQIUNcfJk7f
dyZ0cUz14Wv8Jm4dtvzwugNXM4LUWrdu3axg2fvGEfecI++WjL5TcpW55J4d
JbaWKxNsqjDUq8KQJlXntPPaGui5I7z25X41r3WpFtuz6v6+VQ8MrHooourR
tt9NruLcqJpbzW9LfkM4LotU9GcjWT8xkE9EqZD1bR+CaUENBUybOAZhmuCx
Flgbz2AaJbVxBNMmqWPaaBHTKKnRgNoIHFD7azrCtOGy1MdZgiGpIVjDAbU/
5mJSmwcGzgcD5oM5W8HjVyDhw/u/wUECaDUsgDbZG0RiT/ECUxkjOjOBaRqe
rjC66YU/6wWmE4hjqe03kddq4Vq2umBSPeSJ9cWz2Cis+YBRbN/+5gjWaLUa
6itCStXai6VquKlIZ0VHEdKi3w83fmzQy9JOpFpfUIGkPg4ApQaCYkOB0wgx
oDYNB9SigeMi4LAM2K8E9ms+FZ57vWDPOXlr+tuVLVOU5g6Rc1RV+6opN6Jx
ZmOeMs4FurexH9k3/8a5dhtmF94ws/D66fbrp9mvj7JfjxltfaTDhkiHjZOR
N0123IyNSC1Sh0htCiK1nVN1u6IIpuljpuv3ztALmDZLv3+2/sAc/cG5yIeY
gBrCtL8NxxcaTiwynFxsOLXEcHqp4QzFtBWG8/8YLqwUMO3SasPlNdhrMaat
M1xdTzEN+cYmp33zHEk2kS3HlfKORhkhrcI0gGP91Uz55JhmgTUbSE24CUmt
GHLysFYcfCgu5zUtTFMhNYppJSXBtcfPQWQ8cDnP+IJiTOjsvIhpdHBBCm7W
Cc56qqQi0OZ2DZvltRvSfEhVWJOF1WjHfjYBUtb+0RqpfYKkRorUSOpjedxL
pIIQULtTFdyshgJqF3FA7YQJHDGB/V4gxgvs9Pq0xfvDeu93K71fL/V+sdDr
6TyvRzO9Hk71ujvJdGesyTzSdH2Y55UhnhcGepzt63E63ONUT48T3TyOdvU8
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
nXmNi9Re/Sz0EiEBtbtMQO2cBzjpAY54gv0mEGPCeY9eH9Z5v13p9WqJ17MF
Xo9ne8VP80KYNt5kHoWSHi9jTDvTx/0ExLTuHke7ehxBoTRPzGim2I5ekNH2
hUDX2Bv8G3JQzX1BtbBrxwbViQ2uExdcdz/2gWBIavURpiFSa4BIrUPDYx0a
Hu/Y6ETHRidDG5/q1Ph0pyZnOjc5Bx3W9EIYxDSfS118Lnf1udLV92o332vd
cECtOyQ1v5s9MKb19L9lwbRm0CKmNb/fpzkmteaoPK18+fJWytOocuc+Epku
MnRNley+d84WfO65VfX1W/bEb+ljvyWP/RY/9l/0uEJIlPWAmia13U4gmHbw
mNk3aHlY33Uz5x84eOS6jf8c/omPlGn58Kfu8d8OSHCJSDCOTXCemuA8P955
5UPnLfed48zOZ28ar152uX+iTPye8ve3VXiwvWL8jkqJuys/iqn8ZF/lZwcq
vTxc6dWxiq9PVnx7tsK7C78mXSqfdPWXD9fLfbj584dbP3248+OHw27Xe3/V
m/OaTDae6p4DJiJS5kOKg6DgAH5oyyRsu8gSiIxVgwXw+xYpYJw0CkCnhdTG
TVSJqY0hmMaSGhtQk6Y+0oCaMvWRkNoQSGrzEKkNng8GRVswrf/foN9C0Hch
6LMIjFgLtp1B/6+Hn153BeuqgenVGDoTOQuRV3WBxeZCewiDeR5oDD2P2F24
zsWeIxLcbNGI8tyFEBvLa7JMSAJrQoMRXLBG+vaP8EMJkMOa474i0lI1S6N+
NqYGSS0Mt+hnGj/WCUdFap59QJW+woHXKPVxCCg6HDiRgNo0MaC2GDguBw5C
QO293ZY3hba/RHmPux8ViHmYf++9fPtu50OYdiVP3IUvYyGmHf8SYdp+jGk4
mrZ1Tf4t/zCYNs9u/RwLpq2FmBZpv3aS/dqJDmsRozmsG++4bpzj+nGOG8Y5
bhyn2zRet3m8bssEjGkTddsn6XdM1u+EmBbJYNo0fex0fdwM/f6ZAqYdmoMM
Me0IwbT5hmPRFkw7Db3YcGaJ4exSiGkooIYwbYXTxX+cLq1EmHZ5NfKVNU4o
oLbWcG2dgGk3iDciLx1lD196kEFsnHxAruloROYowmhkgoLj9N2sZpOIZPCL
Yv3GL2L22CeDaQKsqWGadVL7KGU0K6TGwpoE3EpYTBktWVJDsOaM/NYZ8dp7
xGuX956+0mQXcDkjIJtrKmwF4qywG6Y2t4sY1pTIxsbXbIc1ElZTTYBMPqb2
8Xvwvgw68PplOfC0vKU5PwmoXXUHFzzAaQ9wzBMcNIF9JpT3uNXr4wbv96u8
Xy/1ev6315O5XgnTTfcjCaZ5YkzzwNE095M93Y91c4eYdijM40Anz7hQz9iO
pn0dvCCj7Q2GrhET9Bt2zb1BtfYG1toXWHsfxDTkunFBdfcH1dsfXO9AcP2D
wfUPBUNSa3AkpOGRDg0RqXVshEgNYlooxrROTc4iUmt6HpJaFx9Eal0hqfle
6UZIze96d78b3TGm9fA3Q0zriTFNJLW7YkANY1pziGkPutpQnkaVG/aRZCKY
Ro4NJWE1krefjgvsZPe9c7BICnq1kIl+yx/7LXuMSe2R3+JHfose5dN9ZWNA
TRPZbsWv3XIuYuyO6nWmVa81xbfl3D//2njw4BUr/wSyYXiJHx/8GvywbJf4
7/smuv2RWGpkovOkR8ZZic6LE5zXxjvvfGA89K/x9G3j1Zul7lx1S7j03eML
Pz47V/b5mZ9fnPnl5blfXp3/5c3Fcm8vl3t3pdy7az+/v1E26eZPSbd+TLpT
JunuDx8efP8h/tsPid98eOz64Yzz9QHFwzmvESXbGZsqu09EcDJRchlZF6XL
QkgZoFeuLeFTrmxRE8E0gdQYWJOlPk4Yh0wxzZL6OFEwxbSxIqYRUkNmA2pR
guUxtRlg+ExkQmp/4oBaBMa0oSKm/YExjZDaQCaghkhtESK18MXI03aBR69B
/IekeeBYNYbORNoidEYobL4HtidytAeIJlcPsMBTGM8XzVLbXIbaZhEMFMvZ
phNYq6ESWUOwhgvW0CFrJKwm9hWhB6sJpWpio/6uTO9Hkv1ISY20E0FnXvcG
7n1Qf/5y/cD3/UHpQegYNdScfzzQTwG6Gbjl40IcUCONRNYn2W2meY+PC+yJ
x3mPt/Ptu5k39mreuAt54s4ImLYPYloMxLS8OzaJmLa04KZFBTcuwJg2227d
zMLrcMbj2in2aybbr4GMNsFh7XiHteOgHdeNRV4/VrdhrA6R2jiB1LZN0G+f
qN8xSb9zMsa0KfqYqYa9UYZ90wyx0/Rx0/X7ZxggqR0USY1g2tF5hmME0xY4
nfjb6eRCp1OLDGcWG84uMZzDmHZeimmXMaZdwZh2dS0ywrR1TtfXC5h2cyP2
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
qTvl0xHTWFl7WTn7WIhpB/lMu3SUVcRg2hWCaadpprHLLrCve7JveLHKvVkV
PqxKX1aVH6vKn10tYBq7LphVRzGtIQxVY7gI01DdIoyGmVZAbRGBzzSD0PMO
n6/2ou9REn+XDPo3un/3J5n2J6WGqhupgRjTUHUvtS4G096bqXX+R4hsHWKx
WrtIpiYxVmNIjXxASO2NIjRTxZeaEl9qL3A9Jx5zoQV3Qt5/A9qXGK8fGKUq
UllUMR9nSbIbBTdy6k2Z9Fox1QkpEWt1jL0iwlJTfgPKhNQ6BENqKtClAu1D
oXUENI+Gl7/wWx9vTYBaPKF2BW/mz+RCEpfse3zljQ65RltEPLRq3DVurFUv
Wa5etIhgGp5Nm4aYFj9Z66ILNwZHaZH2OhH2uhF2ehF2+hF2vEg7gyg7w2h7
o1h74zgHk3gH00RHxLQUJ7M0Z/MMFybTrPKmWOW7TUJMm2pdNM26mGDadOsr
M0im2V4jmTbbrnyOXcVc+8p59tXzMNOQ1Bz4gdpCx8ZFjk2LHEWYdodm2jKn
+8ucHqC+x8mFnzKeRl//9z7Sey/yPaX/S9MGDpT7Y2ewSewtk5hbJtE3TaJu
mkTeNIloMglvNAlrMAlpMEFMqzcJrDPxrzXxqzHxrTbxrjL2qjS+UKHgpjxs
xg+j5g76/vd/fchekfLycgJo69atI34c/8T+H/cZ30LefyDrJ0gbLElqo5hS
61z/R9uKCe8Wqr2Zod7sqvHaVvOVKfelge5LfaNXuuavtK1fazk2q09umTi9
9Y85b39f2PbrsvZfVneOWQ+j3GHkDhjuAar7QeUwKJ0ApTOgdAGUvEGJwFow
KIWicE05GpQJr8WBcgIoJyGyIWqlYnylMyqDUemUzkigJVM6S6J0RlQ8NtpF
UIkFlRhQiWoccsZ9iNk/P1z7lPE0+vrabkT0obEx+Oruy8hD05ZMxUxjSO2I
JKkdFpGaGNMOCgdqIkzbL9z6uI9i2l7xIbVjqEimeWCm7TopHKiRmRozUDsr
FKgJhtQopq31FeznXyXW+oiYFoaktozaJbKUCtSWUIEakloallomzMuGOTkw
OxfWlEDULfRM+ry8o/80T/9Fnv6rXES2Zky2lkxeK/ZaWyr2GoU1HK7p8cM1
cs1ImA5/x0gAhTWyB5K/WoRc12/Ab4DcSy0VQYv6mVKbLiQ1ep2I2TIwwK2P
E1bBmNWgvA44W/Bp10cEgdqgsM6B0bjvEZ1z/aR/Ou57zK6Tyq5Eh1znFPfO
zkNHp6XESyVH9UsIQUyLvYA2PQqY5jEoaMegwC3SgZtRlOa/TtpvtQxR/qtk
/FfKBK6UDVolG7pGNnytXNQGudiNcnGb5RO3yCdvw0zbJZ+5m5W9BzEt7wAr
/yCr4BCr8DCfacXHWZdPsEow00pPs66eYV07xyo7z75+gX3Dk13uxS73ZlNM
Y1djptUE0Exj14ew64WZ1hSBjHaTZFoUyTQktduxqEaO6kcy7bPcfOBL2Wj0
eS+6iUjizZmcg8jIkAaQ/fNS+7NYk2Q0foImwrT3xWpdDKl1h7XOHxDTxKXW
Q6bW9hO0DeZLTchrQ/hYEywVUcCxGpNpwoEakpoyPMP1ygU9149fwpEG4ZcT
1EdVutJxZQiXmOZU6PeT6abKfAbWiiRhrYIRqzUxpPYYlJ+B8kuB1FQEUutU
hbZh0DISXo1Bx6g9/h2ddo0CNXW4RgVqqdzOi7jv0Vcwnla3VbN8HWLapUXU
pkeCaVM041y1Yp250U7aUQ7aEXY6YXa6YbZ64bb64ba8CFuDSFvDaDujGDvj
i/aYaQ6myY4E08wR05wtMl0ss10JplnlTrbKn2JVwGTaNJvL020Q02bYXJ2J
mFY2207AtLmYafMcauY7SGDaIqebi51uLXESZpozUfeJIpi21KWa+N6ZMGHC
J34nfpbu7i/7oheyfRkbDz7u8vT0HDBI3vjiLePYmyYxqIyjm0yimkwiG03C
GxDTQutNQupMgutMgmqNA2qM/auNfauMfSqNvSuMPMvHbz2tNFVx+CzOmHnf
TVgkpazxr+FjBmvgyxlf6/B1Cl/EA+LzxI+AH7//n/Vz+9XGyXUWc6DwB77U
0sWlNlJIalt/71r/R/uKCW0L1Vpmqr+ZrNFsp/nanPvKUPcVz/CVnvlrbetm
rsMbDddW9WlvJ85+98eCtt+Xdvy6suuXtTBmE4zaCiN3wvC9MPQAqBxBWFMm
sHaewlogCteUw0E5EpSjQDkGlC+iiI1PrUTsrxThSmU8TmbEZwlUxQkDLZow
GqhEgkoEqISDSpi7tB131Oh/bLj2ieNp9B/yVd2IiJsJ/b+XvLdI/DLi+47d
f7D78kY+0z4kU6OMRpeI1A4KZ2r7u8caP1M7jKV2pEepMbFGZmqYaaTUtp1l
dD+eR0WvE9mApbZeRGr+sDIAFb/1kZYawbQIJLVl5JAas/UR7xJZlIqlRgZq
OUhqs/JgRj6sKIGKl/hpf3ZL72G+/pN8/Zd5+i8Jr+Uir72h87U0faFwjdw0
Io61ILIHEm8X8dTE02oacIpugKRH1RhS20BIbTKsmgrLKKnNmgtT54PLAsGQ
mv4K0MQHXv+8BgZvwKddU4GatB+eUItsH3CxBR+g9gz3Pd7um92AT0+73jun
pHd2fq/MDAbT/HCaRjNtH2badhylbUJRmt9aGd9VMr4rZfxWyPivkAlYIRu0
UjZklVz4GrmodXKxG+RJpqVsk0/bIZ+xi5XpgZiWSzBtP2Ja4SHWpcOsoqOs
4mOsy8fZJSfYJSfZfKadZV07K8S0Cm92pQ+70pdNMq0GM62WwbQGokKpKI1g
GpYawbSbmGm3+Exjk0yjt4h8lpsP/S35F/187+rq+iv+WOZFTp8Npq7P8sOC
2UQk/jY1egdpcC+8P0T2f0NqYjQTLYbLgCqJUqOxJnj8g0BqErD2o+RCUhPG
Gi21t+JSU+QX7TU6U0NYUxZI7SnxUZu/E/JIPfVmr1ipkpVKVZpQib57TEZy
NNly8WgG7bUiamytlDGwVkWdrdZIjao9EJbaO4HUVIS2PpKB2oPxcHMC1Kih
zfyXNdFm/nRuVwIX7XsM0H5xXvvRce7dfVr12zQr1muUriCYppY/T8C0i65a
Mc7cKEftCHvtcFudUFvdUBu9UBv9MBteuI1BhI1hpK1RtK1xrJ1JnL1pgoNZ
EsE0R/NUJ4t0Z0s+01wR0/ImTyqYYl3oZk0wrXiq9eVpNiUE06bbls6wRUyb
aVs2i2SafcUcxLSqeQ7VBNPmOdTOJ5jmWL/QUZRpi51uL3a6s0Scac4Pljs/
/PTxNPL6v/eRer6Yg2k9v/X9BV/Ebf8H1THGcTeNL940jm0yjmkyjm40jmo0
jmwwjmgwDq83DqszDq0zDqk1DqoxDqw29q8y9qs08q0w8i438rxhdL7s5xXz
VKcPHjlHftyC/hpLpSzdpRw293Fc09t6fi+XJf+etfrfTtP/x8j8fyys/sfW
+l8rFvWK9u3/olK6uVz2bZl8eym7S1RqClhqShCuAoHDsNRGw/GxcHAcePxG
SA1IqS1Sa52l3jJF4429ZrMF97WRzmue4Ws9s2adSW+07Vs0Xd5qTH2nNrNt
wryO8Ys7f1veNW41/LIBxrjDqO0w0gNG7IVhB0H1KKicBOXToHwOlL1A2ReU
/UE5CJRDsdfC+V5DyLpImYtWG7MSGBUvrDNhoKlioKkSFQaqIbiCGxWOuv9g
/s9shvwsWfPXcyP6wME0wN93Y9jco7TRJEpNPFDbxZfaYVx8rO2BQ7iYUjso
HKsdOICYJhSrUUxDRUltD8U0iZmakNTEhtS2YKa5U5naJi/+LhEJQ2oBsCJQ
QusjKTUUqFFDauTWx0W49XFRGixMF0htdi7MzIPp+eBWAEtK4MbzzoSmR3qN
Jbr3CvQeF+g9zdd/TuZr2VRLJOG1NBSutafwOpIZnZCxeC0kjbUQ4R5IMlYT
NEAawkF6qQhe1E9mamspqS3Ex17PpNaJ2OEhNXI/v/pK+GU1qK5By/nldqOV
j7KncaAWCIPCOwfGvP0uofnb5Of908i+x0ap7Bp0yHXulV54i0iv1ESpJMS0
/nF+38R6fhd9egCfaXvRiWkE0wI2S/tvlPZbJ+23RsZnpYzPchnf5TJ+y2T9
l8kGLpcNXikbvppi2ib5RHeCaay0HayMnawsD1YOZlr+flbBQXbhITZi2hFW
8VE+066cZJeeYl89zb52hlV2lnX9PPuGMNOqfNnVFNMIo9URJcQ0dmMYm880
wmiYabeicEWjuo2Yxr4Ty55HbRGBz3TzIa+/aKNRQkKClJTUzz//PGvWrKam
ps/+55MXuXjfzc2NuGnQjz/6TxMfTBN5kol/y/eD/93YOBBABtfHSe2jsfYB
TAMxpom2RApLTeiXPwhhTTxW6/gRlZDUKKaRJYQ1sUyt5b1SY2CNkNoTFYS1
5iPoqb/7BrRzxd4Nxu8Pq1LFf0M4Wewd41QG7tKFyZZDeU0EayKxWh1jVI2W
2iu+1Oh1IiroGLX2YdA6El6P5h+jhgK1iVChDqUaUKgJWVqQzO2IwX2PXtpP
T3LvHtBq3KFZuUHj6kq1S4vV8phMc9GMduJGOnDD7bTDbHVCrHWDrfVCrPVD
rXmh1gbh1oaRNkZRNsYxtiYX7UwT7M0SHcyTCaY5WqQ7WWY6W2W5WCGmuU7C
TJuEmOZmUzzVBjFtmi3FNLtrM+0Ipl2fZVc+m2SagxDT5jvWLyCY5tS4yKmJ
MJoQ05yJksC0BW5oLf+nMw2+Yn18yCUymPa1DdGQF3HD5wwdaxR/0yiuyehi
o1Fso1FMo1F0g3FUvVFkvVFEnVFYnVForVFIjVFwtVFQlVFApZF/hZFvuZHP
DUOv64YXrhmeKx3ipjps5o8/z5X5bWFf3VVSdjul5p6QWu8vtTtC6lRin6Cs
PolFvS9d711V0+deY7+Hdd8+rRnwslL6TbnsuzJWRymnq/h7MakpCqTmPRLO
CUttwx8dKye2L1J7N1u91U2jxUHrjRW32Vin2cDgjb7pG12rFh3bVi2nd5pT
2tSnt0+c0zFhYdf4pfDbShi3Dn7ZCGO3wOgd8PNuGLkPhh+EYUdB9QSonAYV
Ems+oOILKgGgHAwqoXyyoQgsGhetNpGiRUY/oHSmiuMzAmh8nYXiIo0WBKqB
oBqAy79R4SBXWuEf1Qz56eNp5PWV3IjIrQUf8oIQHVbIQUzrSWqMk9SOCEvt
sLDUDjGkRjDt4F7ENKbUCKaRUiPn1PZjpnUrNTpTEwvUdjLXiZCZGhmo0Uwj
ux8x0zYS5Y27H32oTM2PL7UVpNSCxFofKanx14lQWx9JqS0kpJYBC3Dr49xc
mI0DtWkFMKUQnApgbvG7ZZn1E1JT9B4V69wu0HtSSHhN/3k+Ctde5fCac3gt
2Rhr6fpo30gqwlpXkj7QY2sxeGYtXAfNrJEDayhWw9Nq5/BeEfJgNVJq+2mp
2VLdj/g8tWXUYWoz5qJ1IuSZ1+a49VF7BfyxCkatBoUNwNkOcvsZgVpo18Co
tgFxLd8lvfwm9XH/9Hv9Msm1/BV9cq/2zr3UKyurd1pSn6Tovomh/eP8vxUw
jTw0bRcaTENM2yDtt1bad5WMzwoZ72UyPktlfJfK+i2VDVgmG7xCLmyVXPRa
+dj18vEb5ZPc5VO3stJ3sDJ3srI9WLl7WHl7WQX72YUH2JcOsYsOs4uPsC8f
ZZUcQ0wrPcm+eop9DTGNXXaWfeM8u/wCu9yTXeHFrvRmV/mwqzHTavzZtUQF
IKbVB7HrSaYRRsPVFEZFaQym3Y7GFYOKYFrgLhl60/XnuvmQ11+00ai5uTk7
O/vMmTME1nr16hUVFfV5/3zidSB5hiPzBaH4Zz78Yp7qKPEi/vAJaH+IDKP+
zljtvUxjC+kMusPa9wC4RPK1rh8kZ2pCvxSX2o8SpCbe/djandSURKX2nBmr
qcATVXisysfag9egnU2NTiQxZijIkvhLuph8S2OkbHQ/JLkSjcbaFeFYrZYa
VRORWgvO1DrpQK1Tlb/1kdwl8pARqBVrQq4WpHE747jvwlHf49PT3HsH0RaR
qk0a11aRTFPLnqXOZ5qzZqSjVoQ9N8xWO8RGJ3iSTtAkvaBJ+sFW+iGTDMIm
GYZbG0XaGEfbmMTamsbbmSXamyc7mKc4WqQ5WWZgpmW7TMJMs86fbF04BTGt
iGDaVFvMNLvS6XZXZ5BMs78+yx4zzaFyjkPVXIJpjjXzHGvnO/KZtsCpcWF3
THO+t1SYaUsmFzo6On76eBp5fRmbsT/79d5lR1/JRfzfjDVsnGF8k2F8o2Fc
o+HFBsPYBqOYeqPoesOoOqOIWqPwGqOwGsPQasOQKsOgSsPACkP/ckO/GwY+
1w28rhl4XjU4d+XXLSeUpikPn/3D6PkD/1giZbheymWv1KIzUpuDpQ5ES51P
6ROW2yetpHdJRe+6eilCao/qvn1WM/BVpUxLuVxbGauzlAOXCan9B3J/xFIb
0pPUdv8G28bDhgmdKyd2LFZrm6P+dqpGq6NWyyTuGxOdNwa8Fp5Ji55lq47N
W23HNi3Xds1pHeqzOyfOhwmLYfxy+G0N/Loexm2CsVth9E4YtQd+3gcjD8Hw
YzDsBAw9BSpnQeUCqHiBCuE1f1AJAhXCayGIbKhTMQKTLQpXNP+BKvVRlYzM
IvFj8gHW2dAwXKEwNASGBoNqMAYabTQ/GOoHqr4w1IeoRsX97jKW/5Bw7TPO
4H8NNyLif+CHbKgjh/R1hrod3QaoxLB2dAeqIxTTiAdHdvGLH655CDONKTUG
0/hYo5jGz9QOCgphjZKaYKPIUUGsRkqNztQQ1k6h2nFaSGrbsNS2nkdYo1f0
b6JOUkPdj0yp+QuG1JaTTJPY+kitE1ksMqSWAfOz+FKblQ8zCmBqIUwuBMd8
sM57x4uvHx+ZrHfvhnbjJd37RXoPLuk/KdR/XiAYXkPhGu6EbEvnb/KnsKaH
dkKS2yDDdSFUF/VA0tNq53EDJNoAiUfV0FIRvP6RzNS20FKbCkunCxY/TqaG
1FDr43LU+vjbKhi2Bn5yB5YHyB7CZ6h5o0BtYDhaJPJd4utv0TnXD/Ba/nqp
nKo+udd65xb1ys5BR6clR/dNCO0f7y9I08JIpu1Eq/gDNkn7rZf2XSPtsxIZ
zWuJjPcSGZ/Fsr6LZQOWyAYvkwtbKRe9Rv7iOvkEgmmbWWlbWRnbWVk7WTke
7Nw97Py97ML97EsH2EWH2MV8prEJpl05LmBa2Rn2dYppFZ7sSgbTavw4Nf4c
ZDSKaQ3BuEIoo4Wxb4Zjo5FMi2Tfpph2JwZXLLvgvBwNkM81nkZff/VGo87O
zilTpgwaNOj+/fuf8Y8lngcyRGN+ktxB9BE/I3rebk3empzd+gsz7VMytT+F
tQ9kWo9SE2Rt4kz7QVCk1LoYQBPK136UgDVaakKjakOEuh9bMdMkSo2JNTJQ
e04x7akqktojXM8no7+Jxy/gSA3VnxPP6NXprhIYrT602pheSxcK1xDW6Jm1
UipWq6QaIMlRtfvCUmsD5S6m1FDrI7VLRBCoaUKBFlokkshti+S+CeCitfxH
ubd2a9Vu0by+Rv3yYrXceWpZwkwLt+eG2moHW+sEWekEWOkGWukFWhJSMwi1
MgybZBRhbRxlbRJjaxpna5ZgZ55kb5HiYJnmaJnhZJXlPAkxzWVSnivJNJtL
U2yK3CimTUNMuzbDrmyG3fWZ9jcQ0xwqZhNMc6ya61g9l2aaU/0CJz7TFhJM
c7652PnWYufbi535TFtCMM2FqPvLiMJMW+7ykLifEFL7mG9pSddXviVD4kW+
p/TFv25870XckxW4ZoYJjZhpDYYX6w1j6w1j6g2j6wyjag0jawwjagzDqw3D
qgxDKg2CKwwCyw0Cbhj4XTfwLTPwvsrzLOWdL+GdLR6xfK7qjCEj57DHLvhW
Y6WU2WapaYellntKbQuVOhIn5Z3eJ7qgT9bV3teq+txskrrf2P9x3XfPawa+
rpRpLZdrL2N1XWVKbbCw1FQhcDhfaifGwqFf+VLbOKFrFZJa+1z1d9M03zpp
tVpzW0x1Wgx5rQbGrfoW73St3+k4tHNdOrSmdmrM7FKbBxMXwh9LYfxK+H0t
/LoBft0Mv2yDMR4weg+M2g8/H4YRR2H4CRh+CoaeBdULoOoJKt4IUAhTgRhW
wVQcFk4VCTHql0OZRdKM0hm/gmAojs/QR38ENFS+MMwHhnmjGu4Fwz1h+IVG
lT3uPxj973qNjIc+12ubL/5GRL4Eeu/79uRroXkGnke3ds+0naiO0EzrXmqi
mdre90jtAENq+yipkdVDpuZxgpGpCUttm3CmtoVqfdzMOPNaRGqiQ2pirY/L
yNZHLLXFcUIHXqPWx0wktbnZMAdLbXoBuBWCayE4FMCkgndGmQ/UkovUrxZy
G4q1m4ox1or0n1zSf1bAI7z2Mg9NrrXk8FqzDN5l8toz0PlrBNYgmcdP1mIp
rJGrIAOpjf3k2WqntPijaoeM+FLzoLsfXZDUVhJSwyv6Z8/B60Sok9SMceuj
2kq8S2QD/LAV5PaB7HEcqPnDoNDOgVHvBsQ1f5v8Au97JNfyV/fJLeude7lX
Tl6vjNQ+ybF8pl3ETIskmbaHZNogxLR10r6rpX1WyHgtlfFcLOO1SMZ7oazP
Iln/xbJBS+XCV8hFryaZxkrezErfysrczsreycr1YOftYRdgphVRTLt8hF1y
lH3lGLv0BPvqSfa1U+yy0+zrZ9g3znLKz3MqLrArMdOqvNnVPuwazLRaf05d
AFHseoppjUQJmMa5Gc4hpXaLwbQ7DKbdjWWPHM3fIkL+jP68sPobNho1Nzf3
79/fx8fnr/4XkcfFEh//1D9FyJd4ErrzL3lrcnf/Voxpf1sD5Idnau+L1fiP
mVgTYdoPiGldYljrQWpkD2T7YLEeSBGsKaBq6UFqyqJSIwM1gmkPiRoKj3Wh
/Q48ewZHqqkZCmbrjkgbD/N3yZmLeGG1JQvnazTWCqhtkHSsRjZAMqX2iNr9
iKWm0kV3P3aoogOvX+NdIg9/h1t/oECtTAOKNNEikRRuRwy3NZj70pP7+AT3
zj6thm2aFevUryxBaRrJtMTJmGkOWqF23BAb7aBJOgGWOv6Wuv4WegEWvCBL
g2BLw1Aro3Ar48hJJjE2ZhdtzRPsLEimpTpapTtNQkxzts5xscZMs6GYZnvZ
zbZkqh3FNPuyGfaYaQ4SmDZPjGkLnQmp3VokiWlYag+WuSCmkWv5P0vfI3l9
nWcY9XCRC9neuzf7y77Ie/Jw+7kGiQ0GCQ0G8fUGcfUGF+sMYusMYmoNomsN
omoMIqsNwqsMwqoMQisMQsoNgm7wAq/z/Mt4vtd4PqX6Xlf0L1zWO1ekd6ZQ
eY7GsFk//jxP7rfF/XXW9bXe0Xf28b5rfPvuipQ6kSgVkCUVX9Qn/3rvito+
d2/1fdj4zdO6AS9qBjVXyr4tl+8oYwGS2g9IanndSe1nNKdGSm0PX2qwamLn
ErWOeRrt0zXfOWu9teW+NdN5a6T/1sDoLc+8Tc+6Xde+Q9u5kzsFNKeD+hxQ
WwATF8MfK2D8avh9Hfy2EX7dAr/sgLEeMGYPjMZYG3kURh6HESdh2FkYeh6G
XoChXqDqg2IvAlaIbEH84ssrhLJYCCUy5mPiywKpwjob6g/DsM6G+aIa7kPp
zAtGePJr5AUYeR5GniOqUdXDjTOO8Nqf/Yn8Wa7Pshmbvr7gGxEZ0JOvf3p+
0shdamsdMxDTtsKxbahoqZFqY0rtyJ+S2l5+fYTUyO7HvUdRCaQmzDQRqe1g
dj+eY3Q/XhB0P9JMQ1LD60TWfMKQGn8/f6bwkBqWmksh2BcSUms1KXiukV42
PidXq6aEW39Z53aJ7t1ivYfF+o8v6T8t5L0o4L3O573J47XkGrzNNmjLNCCw
1pnG6yKwlkRjjdouQq4WEcRqGrgBkhxVM4IDpqJSWzsFSW3JDJiPpYbWiSwE
uyVoP7/hcuDi1seRa0FhE7B3CQK1QUEwMKJ9QGzLd4mv8L7He/0ym/pm10jl
3uiTW9I7p6BXZjo6Oi0hrF98wDexXt9Gn8HnpmGmoUPTtqDBNN+10j6rZLyX
oyjtwkIZzwUyXgtkvRfI+i2SC1oiF75cPma1fNw6+cQNrBTENHbWdnbOTjbB
tPw97MK97EuYacWH2JcPs0uOsK8cZZcSTDvOvnaSXYaZduMMu/wcpwIxjVPp
yanyYld7s2sQ0zi1fpw6f049UQEcgmkNQezGIMS0phB2Uyg2GmbaLaIiOHyj
4SKZdjcGGY2oMdQWkfd+H33E9bdtNJo4ceLq1av/0n8FGajRPaIfctHDs909
D+SfmZExqHum/W2jap8jVhOVGmU0YHhNotQ6haUm5DXMNKbU2iipiWCtpWep
4UztBVNqKvxMjZDag6GoHurC20voL+ZIFTVJQc9T0FMYzMd0kXxjko32Wipj
eC0bHwVLYo2O1cgGyDpqqcg9SmqvQbkVH6ZGnaSmgofUcOsjCtTGQ/0EKFeD
KxqQr4UWicRr475H7tPT3PsHuU07NKvWa5QuUyuYPzFrllradI1EMk2z1wyx
5QZbcwOttP0tdfzMdX3N9fzN9QPMeYEWhiGWRmFWxhGTTKOtzWJtzONtLRLt
LJPtLVMdrNIdJ2U6kUyzyXOxyXe1KZxse2mKrTDT7CmmOdyY6VAxy7FytmPV
HGy0uU6181Ahps0nmObcuNC5iTDaQmQ0imkuRN1d4iKBaQumBn2u8TT6+to2
Y/d80QvZvpKpGYkXybSxS3byEht4ifW8hHpefB0vro53sZYXW8OLqeFFV/Oi
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
wx/bENZ+84BfCazth3EH4ZfDMPYoUhKKtE7hhOsM8tSoc1hYRBHaIszlJSiS
Y+ixp1Chr7yAPo5m6GzMWVxn+DX2NIw9hYsC2i/H+TXuGIw7iusIrsONP292
/4FHLhv5K7z2V7QefXk3IpEDPnq40DZ+Nvf4lm6YJlFqIlijmEaWuNQOdzen
tp9fopmauNSYc2rHBFLbfRx2Y6l54NbHXacYUjstkNo2Manxux8ZQ2qi3Y8i
Q2pYaksZUlscKyy1VFiQBvMpqc3CUpuWx5eaQwHYFHRaFraQUptYVDvhapV6
RYVmdTm3sVznTrnu/et6j6/rP73Ge37V4NUVg+bLBi1FBq2XDN4VGLTnGXZk
G3RlGUA6gTWqBxLFarr8WA01QGrxGyBPa8EJXTiKF/UjqU2iMjVXWE1IbRos
mglz5sI0ckhtMZgvBd5y0FgF41aD8jpg7QC5g3SghheJxDejvsf0B3gtf61U
Tnnv3JJeOXm9M1KlUmL6xQV9E+v9bczZAYhphwRM81+PVvF7kR2P8wmjyZyZ
IUvU+Rny3rNZQQtYUUvZCavYyWvZ6RvZWe6c3G2c/B2cwl2cS7s5xXs4l/dx
Sg5wrhzklB7iXD3MuXaUU3aMU3acc/0Ep5ww2mlOxRlO5VlO1XlO9XnKaF6c
Ou/vCabV+3IaMNMacZTWhJl2MxgbLYRzKxQVzbQ7Qkzj3IvGQMN1P5Z9/yJ7
xOj+dF/3Zx9Po6+/7TXA3yM1oE5Y664l/r2nOpJDEBu63R/yeafV/vZd/QKs
dSM1wEwDXF3CRTOt8ydUQkwjHgwWwxoltXcMrLUoSsAac6MIGas9VRHeKEJJ
7S4ttWHQOBwer0d/Zw9egk40faYPXkrmz3+Alp4FUqvPsN34C6vD8JmwkdSx
sBfx8FoiTtZwrKZMx2oluAGyHC8VEZfaO3qdCGp9HI62Pj4fB/d/h6YJUKUO
VzWhgIsCtRjt1kDu87NoLX/DDs2K9epXlqrlz5mYNl2NYppmiLWWn6WWtxnX
y1Tb01jngpHuBSN9L2Oej7Ghv6lxkJlJqLlZhKV5tJUlybQk20mpdtbp9jb/
n7y7gIpya/+Hv9az1vsoYOdhBrtbaRgmiRlSEaRTxUQEu8VADKQFDMQCCxXp
7u5OEcVABbvzeu+975lhKI/nHPE5/n/3+q5ZIwtFQTbzua9rXxszbVGGGcE0
o2wLI5JpBVbGhdYE00yKbU0Q0xabli8xrSSZZmdWswwxrX6FuZBpt1eZN60m
0oFp9xxQ7q+1fEDE0ZLPNEfLR04iTHO0zvvp29PI6//CZOzvX8RLxF66R/d7
XcT/rsFDhkkfDeYkNqjGE6lXjatTja1TjalVja5VjapRjaxWjahSvVnJCavg
3CjnXCvjhJZyrpRwLhexLxawg/NZ53NZZ7NZQZnMwHTGiRSGfyLdN37ymvlT
l0+YtZoivX4IfWc/3YPilj7iDqfFnUPF3aPEApPFQnPEEkv7Ftb1uXW3z6MH
Ym3N/Z83DXp9a8i7+mGf2qUmxZda9lhI705q5wipzQN/gdQOKIKzEmyjwQYV
cKDDCgYsYYEF+9siztcFqt90NL5paYGmHnAXgoYRqJmBmhWo2gJ7GbBWAtMe
GI5AX49OoKVtAdp2UN4FSs6guB/kD4D8QZA7ArLuIOtJmAj5CBWzCDH5Y0Yd
x7A6CfOIENoiEghzT+MECZ6QCWzPvED0nsT7zyN/4wmc4yB9HD8G4PiDtB8/
MiI6k8VAk/USiQfIoTTN3uE8RvWne+2nT8Ymr99uIQoKCuppY6BwfsiffqLI
10KqU20IpqH0UFDz7cq0rmW1vyI1fvfjURGpiUwUce+ppiZaViOlJmSaYJNa
131q7SP6T7W3PpJSE3Y/EkxDUrvQsftRWFO72llq5ElqawU1Nf4mtS5SW4ql
Zp2NxokQUjPI+aKX84aQGif3nkphk1Jpg0p1PaO+jtVYy75Xq/qwWu1JlfrT
SvXn5RovS7lvirlvC7nvC7gf87ifc3hfMrlf07mQSmBNA21Yi9Xgl9X4u9XI
Bkg8AfIEE/wJqXHx4ddYai5YatsJqZGHqS2D5SvBxp6/SU1nPb/1cTYezi95
mF9QGxICg0M/4UEi+AC11PsS6bfFM2r6Zpb8NzP3v2nJfZMixWOu9AtHTBsY
5jeIYFooYtrQdqY5oeEhgauGnVw2zH/x8ADbEScXjzy37I9LqyXD11HiNlOS
tlFSd1Ey9lCy91FyXSh5rpSCQ5TCI5QiN0qxO6XEg1LqSSnzppT7UCt8KZXH
KFX+lOoASs1xas0Jau0pbLTTlIYg0miUxnPUxvPU20QuUJqCKXdCsNEuUu5i
pjUTuSIwWijlPmk0nAeYaQ8R03BwKa0FZ85sceGOj15afMjrl000+ulSKygo
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
MB2Bic+hZWwB+jZQ2Qk0Z1DeB0ouoOgKiodA8QgouIGCOyh4grwXyHuDPKEn
Xxw/kA3AOY4icwJkRUJwTIZ8u+ARPSHf318QP5xjIEcGA01OoDMi6CN6ohBG
k/fAccc5ioL+YmSIv+RhIk1ztzqP4fzz/Wu91yD0ey1E5CrUrdSIVYU84+PM
mTPfeWFJWm+bSUo707DUjn1Hai7dSM37T6V2mJ8fr6mJSu2oKNO+K7X27sfj
3exT29dxokgHqXUc0Y+6H3sY0d9ZalFYauTgx3iwT4DVibAyGVakwvJ0sEvn
S80qG8yzkdQMCanlvtHKfaZe1MoqbaGV36PVNtNv3WESZG5u5Dy8pfq4Qb21
Tv1ZjcaLKo3XFdy3Zbx3JdwPRdxPBbwvebyv2bxvGVxIw1gjeyCj8cR+sqx2
CR+sdoYOJxkQgKXmSdbUsNR2m8E2S3TsteMSWL0c7FaBFT5Jbb4Tmvqosgnm
bYYJzkA9BMN9YdhpGBrybfD1T4Mi3w6Me94/id/32Dezsk9W4X8zM/ukxInH
X+8XeaF/eCBi2g3MtCuiTHPkdzweXzLc13KEr8XIk9aSF+woN9ZQ4zZIJW2R
StshleVMzd1HzXehFrhSiw5Riw9TS45QS49Sy9yp5Z7UCi9ktCpfatUxarUf
tSaAShit7gS1/iS1/hS1IZB66zSlMYjSeIZKMI0wWtN56p0LOMHUu5hpzZdw
LlOQ0a5Q71+l3hcw7cE1ZLSHN3CERsNMe0RILULyUSQl+OAIUX30auvLr5xo
1Es1tU6vcMjb1MRj1/cnFyiy4bzrKx/iD6GO/f/+ltH+nbvV/iHWRnXGWrva
RndgmmhZ7U+wJpBaJ6x1qKmJzH7sJDVynEi71GbAbSy1+plQOwsaeOir+OQ5
cC+RR/mgzDgJ00+hTCOPFgqCKWdQJp+FyYTaLmCvXYJJVwRYC4dJUTApFiYl
wKQUmJQBE3Ow1MihIqJSa8NSe8cf0T8ZvuEDr9/MgTYZVFC7hQtq+QxIYX2L
RAeovTjFeuTBbNpHr9yiUuBAy7RTjrehCZjGIJh2Wpt5UpN1gss+rs4JUFc7
oaERyOWd1dQO0dK5rKNHMC1sgX6k/sJYA4N4Q8PERYuSjRalmRhlmBhlmhpl
mxljppnkk0yzMim2NiWZVs5nmnn1UrOaTkxb0ZlpzfYoAqNZESGY9rAD06xI
pj1Zh9LqYHPR3t7+J35Td7p+o8nY5C1oob++/87kMiV8HUX+3k43nUipkdf/
2X1qxGeSMm0OK7melVzHSqplJdayEmpY8TWsuGpWbBUrppIVXcmKqmBFljMJ
pt0sYd4oZl4vYl4rZF4tYFzOY1zMoQdn0c9n0M+mqQSl0E4l0o7HKftHK/lG
KHqFTVihMnXFhFn2FJnNw+l7+usdkbA+Jr72jLjzdXH3GPFTqWJXc8XiS/vm
1/Wpv9vn8aO+bQ8kXtwb8PrO4PeNQz/VD//KlxpVRGrjsNQmdJDapVlYatIQ
gKV2VAFJba8y7KDBZhVwYoA9E5azwJYN5hwwVIX56qDDQ1LTWgCaBsA1Bg1z
ULcC9cWgZgeclcC2B/ZaYDkBcwMwNwNjK9B3gMpuoO0B2j5QdgFlV1A+BEqH
QekIKB0FRQ/kNUUvUPAGBR9ENvljIO8H8v4ociLp9Et+/ASPfshl8phm8mTI
P81bEC8MQxwFrDMFYY6260zxsEgO8aN0sGneJucxbNJrf6OVuje2pwmv32gh
IlehTiuM8CKniJCVenJhId7SaW0hp/FvtOzItJ6kRmLNBeVHamo+QqxhqXl3
lJoXDsJaT/vUPDrMfvxBqbWX1UQOUyOk5tJtTU1EajuFE0Vw9+NmQffjhhDM
NBGpIaZd/zGppcDyNCS1JRkCqeWAcQ4Y5n2Zn/tWO/8Ft/gpu/wJvaqFVvuA
3niPeaeZde8O58Ft1SeN6m231J/Va7yo1XhVzX1TwXtXxvtQwv1UxPtcwPua
y/uWxQMCa6k8IOdAkhP70VwRsgGSCWfpcIqUmgZ4acNR3P24zwh2mfGPvUaD
H1fAErxJbdFa0FkHqhvxMWrbYew+GOHeXlAbFP5+YMyr/gmt/VLuSaQ1imVU
980q7pOV3SctQSzxZr+YEMw0f8S0a0KmbcVMW0t2PA4PWDzc22KEt9kfJy0p
l5dToxylEjeNSt02KnOnVI6zVP4+auEBapErtfgQNpobtZwwmge1wpNa6U2t
8qFW+1JrjlFr/Kl1AdS649T6E9SGU9RbRAKpjaephNFun0VpOke9g5l2FxkN
pRkz7R6RywKjXaU+CKU+uEZ9gJn2UMC0ljAcgdFQIigE00Jdh4p+f/Xq4gO/
dqLRT5faq1evhB1ExPIufJkkLEd2usizYsmVqtMCRfwWJTQ/ZCjOP2Har9mt
9mul1kFto7uRWrdltc+dpEYy7TvdjwKmfU9q5Ca16UhqTVhqtwipzUBSq5oN
NVroa0lgjReMh57hzAqAmcdhxnGYfhJl2il0IOzk0zAlSOC1YBGsheEeyBiY
FA+TkmBSGm6AzMdDRYRSa8YnXxNSe4kHP/LHiXydilofX86Fx7JwVxEN5y+h
QyYT4tifrrFen2W1+jDvHmDUbFcpcqRlL1dOIphmQSf3pgUTTNNiHuexjquz
/dU4fmpqAWoaJzV4QTztYC3dy9rzr+kuCJu/MErfIHahoYBpRmnGBNOMs0yN
MdNM8vhMMy2yMsVMMyuzNcNMM69CTDNHTLMzr1tmUb/cgmBa4wqL2ystiTSt
shQy7Z691b01VvfXWPGZttbqIQ7BNKHR2pm21ibf1NS0985I6vbgjH/nJTwl
pOu9o26vrneTgoKCiDeK9nKTiz+5T424yJvhXV9W/T98EZ+iP6bPZabUMZOJ
1DKTapiJNcyEamZ8NTOuihlbyYypYEaXMyPLmBGljPASRlgR40Yh41oBIzSf
fiWXfilbJSRT5UK6yrlUWlCScmC88olYJf8oxWPhCt43ZuzcPdFu6vSV4+Y6
UeS3D1Z16WfoIW53QnxDsPiBCHGfBLGzGWJhBWIpFX2Lb/W5fb/Pk0diTx/0
e3lv4Ns7gz80DvvcMAJq/xBIbRSW2lgRqU3sTmqy4COQ2j5l2EmDLSqwjgFr
mLCCDYvZYMkBI1VYoA66XNDRBu35oGUAPCPgmoGGJWjYgPpSUFsOqquAswZj
bR3qS2JuAcZ2oO8E+m6g7wGVfaDiArQDQDsIyodB+Qgou4GSOyh5gBL2mqI3
KPqAgi8oHAPFY+ixp8iL/tIXKU8B60yBDOE+L0E8MQYx0EiaKRIhkOgmEmw0
JQw0Jb7OQMlVJAeINMlsdB7FGduv/186f434yd57O0R+o4VIsH0jhVyIun4C
yZvzxKs+clUhXxEJyUb8S8lp/HsdmzozjZRaTw2QPyI1V8Q0UakRTCMjrKx1
kprnURRhWc3DA8W9Y03tqEBqbj4d96kdE2CNlJo/HAwQ6X480S61/bimJmSa
aPfjTtHuxwsix16HdKipOfUsNQdRqSXxpbYMS21xR6kZ5H5ZkP9ep/A1r+S5
auVTZk2rSu0j+u0Wxt0HrPv3OS13VZ/cUWu7rf7slsaLeo1Xtdw31by3lbz3
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
4iQstWl8qV0QlZoiHFYCF2XYowLb6bCJAU4sWMOGFRxYrApWamCiDgs1YD4P
9HRAdz6Smo4RaJuBlgVo2gBvMXDtQGMFaKwGdQdQdwS1dQhrqptAdQuoYqxx
dgLbGWGNtRdY+4HlAkxXYB4E5iFgYq/x44bgRj/KD8m3DoJzR29sD1YejbTe
ERQafkQFu0MiOYhCGE3FFeeAIC44+0UipFl3QKM7ozEpdGF2Nck5OI+ji44c
+TUj0f79CxE5B1u0ofr7UiM+b+R9HtG3EyvSHGUFrrYziTU/3ADpsQuRbd0a
N1GydTAamf1wzIVfVmvP35PakW6k5vkDUjsqbID0bZdah31qIrMfu5FaIIro
eWqdT74Wkdr6kC41tVD+7Mf2mlokOEQJpBaHpYYniiwXSi2zvfvRNA+MCsCg
CPTLvupWfNSqfs+tf6d6+y2z+Q3jwStWywv246ec1lbVp4/VnrWov7jPfdXM
fXuH+66R976e97FW83OV5udy3tcSzW+FmpAnKKslizRAXsdDRS4QUmPACTb4
CaR2kJCaKZIaGvxoBytXgC2ez79gHWp9VN4E07eA5AEY4YN3qF36Mvjme3yA
2mOJ1Dti6XV9M0r7ZGT/NyVBLP56v5jgARGn+EwLdRl6efewED7ThgcuH+5n
NdLfcPQ1o+lN1wKaLp16XlZK/sd7d//Js9yaxqPhjUcjqp3OFRt6lhh45Sg4
p1LWplGc0inr0qnrM6gbMymbMilbMilbsyjbsinbcyg7cqg7c6m7cqm7c6nO
edQ9+dS9+dR9+dT9BVSXAuqBQqprIfUgitShIqnDRVJHiqXccI4WS7mXoHiU
SnnieJWheJdJ+ZRJ+RIplzqG41ch5VeneAEnOFM/SPQH9J+ec/ETr1850cjE
xKT3pnn/yCV6j5rc8dGVw6TXxg4bYL9SkmCakGx1dVP/CtP+ttd+utR6p6xG
Sq0z1rqV2vjuGyC7DhXptvuRlNojkXEizQKpka2Pdbj1sWI2lMyFAhnIloU0
eUhUhBhlqD6FvqKnE0FpNyjuAfn9IHcAZA6B9BGYexTmeKDiGsKaP8La5EA8
YCRYUFYLxw2QeKvaxCyB1KoFUnuCBz/yx4l8mwwfZqBZIo/koEkJKumQw4QE
1udrrNenWY89mbf3qJStV85eoZxsQ4vETLugxwgkmKbK8GIy3VVYR1RUPega
viytk2rzQ7j6VzUNbugYRugZxS4wTtA3SVpokmpomr7INNPILNvYjGBanql5
vpl5gbl5oYU5ybRSa4syG4sKG4tKW0uCaTUk05Za1dtZNSyzurWMZJp10wrr
Oyut7xJZZY1KaauR0TDTbB62M83m0Vqbx2txHY3PNCS1VifMtPU2bdaLlv+a
HVK/12Rs8vqHUus0DemvjnwkySa8E/Uvf3nZ6SKZNsczUCmjWim9SimtUim1
UimlQjmlXDm5XDmpTDmxVDm+RDmuWCm2SCmmUCmqQCkyTzEiV/FmjmJYlsL1
DIXQNIUrKfKXkuSCE+TOx8qeiZY5HS598oZ0QOg8v8tzfYJne5yb5XZ6nJPZ
pBXTZ9iPx7NEhrBd+i3wlLA5KeEUIuF8U8IzUTwwSzy0UDy+UizvVt/a+30e
tfV52ir26nG/dy0DP94f8uXuMLg9AkuNgqU2qgepTcFSm4mlNg+CpOGELByT
B09FOKIEB7DUdtBhCxPWs8CBDSs5sFQVrNXATB0WaYA+D+Zrg54e6C4E3UWg
YwraFqBlDZq2wFsKvGXAXQka9qCxFmFNfT2obQC1TaC2BdS2guoOUN0FnN3I
a+y9wN4PbBdguQpCkg2rjSlQGxPDTTR0HPTkSMcc5ocAGv0QPyq4x5LuKgim
Geq9dOGHcBmdzD5B9uLsEcRZJHyaiWQnCoN43NEkbx80RZc1gjpr1qxfcyj8
v38hEkpNeJEHf5DPO91VI8dfd/vnkK9/Bo2UIotr/N1quI7msVuEbE5Bh3bU
dWAaTk9S8+0iNR+SaT9cU+NLzb2z1Ny9ukjNF9yw1I6ISs2/XWqux/llta5S
66b7scvJ18Ka2josNafvS42sqcXAaqHUkvhSQxNFBFKzyAWzfDAuBMNiWFgG
epWfdWo+8uo/qN/+wL73nvngLfPRa/aTF5zWZ6pPW9WeP1Z/0aLx6gH3bTP3
XRPv/S3ex3rNTzWanys1v5ZpfivWhAJNyOHh3Wp4rkiMYFb/VTz+EQ3qZ/Gl
5kbW1ExhhxVsXAxrl8EKvEnNeC3orgPOBpDdBBN2g6QbDA+Aoee/DblGDhJp
65dyTzytQSyjom9m3n9Tk/rGh0nEhAyIDBwY5jv4+tEhoQeETBsesHTEXp2R
vrxJBznjDquNq4sJq/MIrfO4lmt8IHq0TcyoxbGjlsZL2cVTlydQVyRSViVR
VidT1qRQHFIpjqkUpzTK+nTKhnTKxgzK5gwRqWVTdmRTduVgpuVS9+RR9+ZR
9+VhqeVjqRXwpXaoEDGtq9Q8cBDTsNS8S6V8Sqk+ZdTOUquQ8q+QCiAyq/8s
UUH8msUH/so9259yrVu3TkFB4Zd9uG6vH9x3TI6UHDuiX1BQv7a20eHh9O+S
rSem9bbUflZZ7TtY+2GpfRNIrQPWRGpqfKxN6Ci1Lt2PQqk9ndyhptZZaniT
Wj3epFYlskktSw5S5CFeESKVIcYQHhXD08ew5jgo7QTFXaCwF+T2g6wrSB+G
uW4Ia7O8YYYvTPOHKSfRQEjUA0mW1YQNkCkwMbNjTe0eltpLPE4EbVL7MgXe
zEKzRO4rQIMyFNMhlfk1goUGiRzDfY+b0CHXqYtp0Wa0UEP6BT06wTQ/VYYn
g+lGYx1SVnVT0fBmap9UW3BRY2GopmGYjlGUnnHcApNEfdMUA9M0Q7OMRWaZ
RubZxua5JuZCphVZWBRbWpRYWZRZW5bbWFbYWFbZWlYjplkhoy21arAjjGbd
uMz69nJrxLSVfKY1I6bZ3Fttg4xmb0Pk4RobAmjIaHymYaDxjYbSSoRgGpG1
Nvt+WSNQr04J6KXrR6TW0/t0HTPyt+c9diLbv3/2CNl8NcP3jFJmtVJGlVJ6
JZZahVJKuVJymVJSqWJiiWJCiWJ8sWJckWJsgUJ0vkJUnkJkjkJ4tkJYpvz1
DPnQVLkryXKXEmVD4mUuxMicjZIOCp936sbc46Fz/C/N9r0wy/PsjKOB0w75
j102e+qqybMcxkhv/ENx9wCNw/2MfCWWBUlsviJxIFrCN1X8XK54WIlYSo1Y
8Z2+jS19Wp/2ed4q/vpx//ctgz4/GPKtGUvtliSWmhRUElIbA8VjkdRyRKQW
K5DalTlYajJwQg6OKSCpuSmBKw32qsAuOmxlwgYWrOXAag7YqYKtOlhogLEG
LOTBAi2Yrwd6+qBrCLrGoGMO2lagZQuai0HTDngrgLcKuGuAuxY0nEBjPahv
BPXNoL4F1LeBGsaa6m7gOIPqXuDsA44L8hrKAWBjr6Ec4odQG+swtlvHMA4j
0zEOoScoh1AjZYeI6IwhCNIZdhlDECHN0Aa6Pe0hXMbANGMIswtnZ5fsQCMu
ReJmsXqZEv/U7N6bQAu/w0JESq2nq5PUyBkI5MrQ7b+LeH/is6qh6+zn3GGT
mh+O5+62XRvCEdlW8ckmlFrnstp3pHaos9T+vAHSvUtZzUsgNa92qbkJampH
jokMFfHnY801QORItROCrWqnOkwU6XH243nYEownipBT+kPA6SI4XepRag6R
7d2PhNRWxcPKRFhBSC0F7NLQRJElgvPUSKmZFMKiYjAogwWV33Rrvmg1fOY2
fVJt/sh6+J756C3ryWtO20vVZ8/Unrepv3ys8aqF++YB910z730T78Mt3qc6
rS/Vml8qNL+VagIqq5FDIAUNkORWtascCGGh8Y9IauoCqS2CPWawHUttzTJ0
5rXlGjB0RK2PjI0wexuMOQB/+MBwVFD7PPjmO3SAWnIL7nus6ptZ+N/01D6J
EeKxFwdEnh4YdmzwDcy0K87DghyHuer/sYMtuYc2NkBG7oSsQvAM7s1xxuFj
TSPGmEeMsYwabR09yjZm1JJYqaVx1GVxlOXxlJWJkoTU7JMoDsmUtSkUp1TK
ulTKhjTKxnTKJiy1rZmUbVmU7VmUHVmUndmU3TlU5xzqnlzq3lzMtDzMtHzM
tALqwQKCadTDWGpHiqTcipDRENMEUvMUSM0bhSqQGpWUml+5lL8gATtG2LFY
LPJHqvDn8q/57u7VwbZdrxs3bvznP/+pqKj4ZR+x6/WXdv+R69VYSfGUlIGE
yETJRjwRkO07TOtVrP2ag9W+I7UfKat1lRquqbVjbWI33Y8vBN2P/HEigpra
g6m49XEa3qQ2nT+fv2YmVM6C0jlok1quDGTIQbI8xCpCuDJcUYFri+BlCzxu
BZWNQNsMijtBYTfI7wPZAyB9CGFttjvM9IbpvjA1ACbjHshJwXhiP9kAGYeH
ihBSy8eHX5NSu4+l9oq/SW0yfJqOC2qyuKCmAjkMiGN9vMp6eYL54BCjbrtK
4Rrl1CXKMRa064vowXr00zw6YhqdcUSJ6arIOUTjejF1A9UWXuIaXtc0itAx
jtEzSVhgmkQwbaEZwbTMRebZRuY5xuZ5Jhb5phYFZhaF5hYE00osLUutLAmm
VdhYVdpYVdla1Sy2qkVMs65fat1gZ42YthwxDZXSVhBGsyHSvMrm3iqSadho
JNPWdGDak7WIaa2OGGg4bSTTTNWO/MoV4zc6w0h4/YjUSJV0ep9uB0KSd7/J
nWh/77Ui2TzwLycb+Umb5ntGIbNKIbNSIaNCIb1CIa1cIbVMIaVMIblUIalE
IbFYIaFIIb5QPq5APiZPPjpXPjJbPiJL/mam3I102WupsleTZS4nyFyMkw6O
nncucl7QzbmB1+ecuDo74OLMYxdmeJ2Z7n5q6iG/0Q4mE1fMmG4/cY6jlNzW
4Sr7+um497M4LmF/QWLHDQm3BInjGeIXC8SjKsQyG8Qq7vVtftKn7Wnfl20S
b5/0/9gy6MuDodA8HJpGYqlRoea7UoucBjew1ILnwRkZOCkHfgrgRUhNGQ7S
YJ8K7KbDNiZsZIEjB+w5sFwVFquDlQaYcsGQB/pasEAX5i8APQPQMwJdM9Cx
BG1r0F4MWktBazlorgSePfAcgOsI3HUIaxobQWMzaGCsqe8AtV2gthtU94Da
HuQ1VcJr+xHZULDX2iOE28FuwhSNK9r71jkuwNzPD19n+/hhYp0xRXTGcBaJ
qM4EQGOS2YHC2CFitG0oTJTwhY6E1IC5tUlhlfN4Gtk5/KdTIv/e9TsuRN/p
fiRbRsmVoacFob24ZpsiyjR+cCnNY3fbzo3hhNeIEE8Q2Vw6Yq2r1Fz5TGuX
Wqey2pEepOaO0i41z26kRo5/5BfURIaKkN2P/LKaUGoiU/o7zX7kD+rvcp5a
++xHLLX1uKzWvdRuCqQWhWY/8qWW0EVqeEq/dQ5Y5oJ5PpgWgVEJGJaDfhXo
1X7TafjKa/qs3vyZ/fAT69EHVus79tM3qs9eqr14pvaqTeP1Y+6bFt67+7z3
d3kfbvM+Nmh+rtX6UqX5tVwTijUhH5fVMshx/bgB8qZgqMhZJpwSdD+66SOp
OZvBNjz40X45LF0N5g6wwAnUN6Bj1KY6wyg3vEPtwtfB1z8Min49IPFJv7S7
aCx/ZnGfjIz/JkWJx17uHxmET7h2H3J27cigNSNdNCgec+d4zZt3caLW5Qm6
oRMWXBtvcH2c0Y2xJjfHmIWPtogYbRU5yiZKyjZaakkM1S6WQkhtRbzkygTJ
1YmUNVhqjskUpxTK+lRJQmqb0imb0ylbSKllYqZlUXYJpZbDl9r+PMy0fKpr
fgepHRFKrQgzrVjAtBIpLxw+00oR046hdJBaQOwfB4R3PMhRzMR3kPB2R2//
VP3FE42+fPmirKwsLS3d3Nz8yz5op4vcyvHjn1tyvWLNlXZeM7qpaTBZRCPJ
RnhNQLZp/wus/fHDWOuFWf1/qaz2p+Mfhd2Prybx96k96yI14TgRUmr8+fwz
oHomVMyCkjlQOA9tUkuTg0QFiFaEMGW4pIJODrnugL6QsVmgsg5om0BpOyjs
Avm9IOuCOiHnHoHZHhhrfjDlBC6rnYdJl0QaIJMFUiNrardh0gM8ov81uUnt
61R4PxOezUPD+RuUoYgOKUw0SOQs64kns3G3SqmjcoadcpwlLcxI5eJ8epAm
3R8xjX5IkeEizzmozPNhzT+rZniVaxSmaRypYxKrZ5a4wCxF3zzNwDzD0CJr
kUW2kUWusQXBtAJTy0IzyyJzy2ILy1JLyzIrq3IrbDQbq2rENOvaJdb1S6wb
llrfskPB1TSbphU2d1bwjUYy7f5qlAf2tg/X8Jn2yMGWyGM+02yfONq2EiGA
hphm27YO5emyhQnk0kTuou3t1elXNoH/xOtHpAZ4qn+nc667PalWeDPtn9/S
/9eSjfgnDxkyZKrvGfmsSvlMIhXyGeXy6eXyaWXyqaXyKSVyycVySUVyiYVy
CQVycflysXlyMblyUdlykVmy4RmyYWky11NkQpOkryTMuxQ7Lzh67vmIOWfC
Zp++NvvklZnHL844dn6ad9BUj5OTj/hN3O82ZtncKaumznQYh2eJDGYf7Kfv
08/2tMS6yxJ7IiU8kyVOZ4uHFovHV4vl3Rarfdj30bM+z56JvW7r9+7JgE8t
g78hqY3gS62ekNooqByNpTYOCsZDzgTInACpkyBxMpbadLgxC0tNul1q3kpw
VBkOkVJjwHYmbGKBEwfWqMIKNViqDjYaYM4FIx4YaIK+LiyYDwsWwnwj0DMF
XQvQsQIdG9BeAtrLQGsFaK0CzTWguRZ4TsBbB9z1wN2EsbYVNLaDxg5Q3wXq
u0HdGdQJr+1FIbyGsh9UXVBItaG4oqCKmzAYcSzBG1miccE74AQhgMbaxw+a
ZCLMHpE44+wWZJcgO0WyQyTbRbJNkK1E6jQ3bLVdgQ6SE6RJYWXQFC3WMGq3
U0f+yfWLb2j/rOs7Uvvx4+H4xTU9Z79OUiOxJiileTh3IJv7nra/hrXDXbDW
SWruXaTWU01NBGuHu9bUAkSGioiep3ayfaKIqNR2dZKacJ9azzU1R4HUHMLB
IaLDPrX2mloy2KW2S82GkFoeX2rGJbCoHAyqYH4t6DaA1u2v3OYvqg++sB59
ZrV+YD99x3n+Ru3FS7VXz9Rft2m8ecx718J7f4/34S7v423Nz/VaX2o0v1Zq
AllWy9XkN0Am4gbIcDW4xkZDRc4RUiO7H3XgiD4cMAJnfJiaEz7zerE9mDii
1kfWRpi3DSa6gKQ3DAuCIVc+D4p4OyD+KZ73WC+WWdYnM7tPSqxY7NV+UWcG
hvsPuuEx5Jrr0LjV4w7MmuY/USVwIufcBG7wBO1L4/WujNcPHWd4bazRjTEm
YaPNb462jBhlHSFFSG1xNHVpDGVZLGV5nOTKOMlV8ZL2CRSHRMraJCS1dSmU
DamSG1Mpm9KQ1LZmULZlULYTUsvsTmq5WGp5fKkhphUQTMNSK5RyK2yXmodA
aphpVO8SAdNEpOZXJuVfJpDazP6zhN9KontjO/1U7aXtBr9+otGnT5/WrVs3
YMAAAwODp0+f/soPTV7kPWpyCORfKq6hzWtDBzlvHi7a9NjWNoaQGjnhn3hC
/PJXSe2PjvmfblXr4LWxKKTUvgrLal1qal33qSGsiXQ/PsPdjz1JrYmQ2nRo
mM6XWvksKJ4D+dKQJYtbHxUgUhGuK0OwCpykgwcTSmK+PXoM9NVAd0AbZJW2
ok5I+T0Ia2RlbZYn7oEky2pnYVIIHtd/E0stqaPUmrDUnqLBj5O/oILaNHg9
C1pl4I4iKqhlMyAWDRJ57s+850Kv3kjLWa4cb00LN1a5tIB+RpMeoEpHTFOg
75PjuCpp+XLMz6svus41DtcyidExS9AzT15gnqpvkWFgkWlokb3IMtfIMs/Y
Mt/EkmRasblliYVVqSUyWoW1daWNdbWtdY2tde1i6zqCaUttGpba3LKzaVxm
c3uZTdNyZDQ+01YSRrMlgoy22hYxzd62ZQ3KozUk01DameZo2+aEQzJt6aIS
HR0dch86eYent28o/S6TsTtdPUmN3DAi/CVZQRO+G/m7Om1Sg94ZmPCvOpSN
+IcPGjp06rEguexKuawK2cxylIwy2fRS2bRS2dQS2ZRi2eQi2aRC2YQC2fg8
2bhc2Zgc2egsmchMmYh06Zup0jeS511LnHc1fu7lmDkhUbMvhM86e2NWUOjM
U5dnnAiZ5nduqu/pKZ4nJh/xnbj/8Ch7wwkrZk2znzzbcbTM5pHKewdy3foZ
+0ssPyex5ZqEa5zEsXSJ8/niN8vEU+rEiu+KNT7u2/qiz4tnYm/b+n14MvBz
yxB4MAxL7Q9opPClVjUaysdAiVBqEwVSm8qX2tW5ECINZ2XhlDz4Y6m505DU
XFTAmQE7mLCFDes54KAKq9RgmTos1gBLLpjwwFATFmqD/nzQ14cFi2C+CeiZ
g54l6NqAri3oLAWd5aC9ErTtQcsBtBxB0wkdVMvbALxNwN0C3K3A3Q7cHchr
GqTXdiOvqeMSG1LbPpz97WpD2Y/rbsLSm4ugbXJ/l+xDQTrbyw+bfNyDh5kQ
ccbZLZJdItkpkh042ztmW4cQRmPxXUYwrQ4dybu5SzY1KS53nqhITh35KSW2
33Qh+o7UAO+8+8HVW1BcG+Vom9IJa6I71EivHdpZt2VdEPGjgU+2vW09ToDs
SWoda2pePUvNQyA1956k1mmoiABrwvGPnaQmLKs5ix6pJiK1refbpcYvqHWV
2nVYKyq1SFgT3aX7MRmWpcDSNCS1xVhqVnlgUQBmRWBSAkblYFgF+rWg1wA6
t0Hz7jf1B185j76yWj+zn37kPH+v+vKN+suX6q+fabxp5b57zHv/kPfhHu/j
Hc3Pt7S+1Gl9q9YEYVktmwdp+GC1WA20Ve06Hv94jtFBai7GsNsCtuBxIstX
gvUaWITXEeKl0ozdMPowLqgFA5rMH/uyf1KLRPptPJY/r09aIpoiEnVuQETA
oDDPIdcODr3qPOwIe/yR8XK+E+gnxnPOjOddGK8TMm7+5bELr45ZFDrG+Ppo
s7DRFjdHWYVL2URQbSOpS6IodtGUZTGSK2KR1FbHS67BUnNMknRKllyfLLkh
BUltcxplSzplWzplewZlRwZlZyZlVxZldzbFOZu6J5u6NwczLZfqkks9kEd1
zaMezEdMQ1IroPKZVoiZVoSZVizlWYylVkwVSs0XBzON6ieQWgDBtCVD9EV/
NHe7PU10u8FPv5X9P9lyHhgY+J///GfIkCH379//xR8a/tmNer7XRvR3dhYX
hRgBtLq6aUFBPCHZehlrf/x1qX0faz9DatBRal87zhXpqfvxbafDryeJjBOZ
LBjRP6X9MDWh1Bqx1GpnQBWWWtFcyJOGTFl+62OEEoQqw3kVOM4ANya4mxBf
vi+OLsBYAfS1QNuAsKawE+T2gIwLzDsMc9xFympBeK7IVZgUBpOi8VCRDIHU
amHSHXyY2jOY9A6dpDYFPkyHZ3PQcP4GZSikQzLzyw3Wm9OsR26Mhu0qRauV
k23RFJEr+vSzWvTjJNMU6ftkVA+oLPRnL7qqbnyTZxqtbR6vY56kZ5G6wDJd
3zLTwDLb0DJnkVWekVW+/bryNevK9x2oDzh5N+DUndCbzVcj7qTmtKTmPai6
9bTqVltVY2tVY9uTZ29RnrenlZ93KM/IvK9tfFF762Vtw6u6htfZuc9zcl7k
ZL+KuvkyOux1cOCr4MDXIYGvfQ+9JLJv43Mn26frBDFRX9n1G6dXbyh1O/Cn
l65v377l5OSkpaV9+vTpH/5R3UqNbHckLtG3kC+lyI3/5JPvHFPbGxf55fsf
HspG/HsHDh0ml1Mhl10hm4WNlllGMk0mvUQmrVgmtUgmpVAmuUA6KV86IU86
Pkc6Lls6Jks6OkM6Mn1eeMrcsKS51xPmhMbNuRIz+1LkrOCbM89dn3Hm6ozA
S9NPXJjmf3aqz6kpngGT3Xwm7j80btP6scvmTl49fYbDhLnrqPI7htMP9NP1
krAKlFh7SWJXuMTRZIkTWRKXisSjK8Uyb4lV3O/b3Nbn6Yu+r56Jv2vr//HJ
wK9Cqd2RxFKTglpCamOgfCxfarlYammTIGkyxBFSm9FZagGK4KMEHjQ4rAIH
6LCHATuZsJUNGzjgqAqr1WCFOizRAGsumPHASBMMtGGhHizUB30D0DeG+aYw
3wL0rEGPwNoS0F0GOitAZxVorwFtjDWtdWh/ieZG4G0G3hbgbQXeNuBhr3F3
gsZOPtk0nFGQ2vaKkA0HlduEdTdBOMLs7RA2mT2COOPs7phd/BAiYwuzg592
oG3rkq0i2YLCRhxzs1gVbuAgpFnHbCTTpLgsaCqPNZzyz0tsv2wh+omrEOBv
ru9AlZwQS67eP/Knte9c61lq5D41Ih572vZtzd68LojwmpOD275t2T1JzaeL
1Ly7lZoo1n5Man9SVjsuaIA82eVItS6HXyOpnYVteKva5vOw6QKWWrBITe1y
B6k53sBSI7HWSWoJHaS2FEvNNhus88CyAMyLwLQEjMthURUY1MCCBtC7Ddp3
gXcf1B59Y7d+Yz39zHn+UfXle7VXb9Rfv9B4+4z7rpX3/hHvwwPex2bNz01a
Xxq0vtZoAVlWK9BCp2BnCCZARqqjoSKX8aB+fvcjIbWFSGq7LGHzYnBYBnZ4
Pr++E5pPJLcNJu2DkWRB7eqnQZFvBiS0onOu0Vj+wj7pKX0Tb0pEnR8QcWJQ
mBefaZe2Dt8zbs6RcQpe4wipqZ0Zp3l+nG7I2AWXxhhcGWMUOtrk+ijzG6Ms
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
2p94Q+mvDqj/21d6erronLTHjx//gg/649ffe3n5N65feSgbsX5KTp8hn1Mm
n10qRySrRC6rWC6zWC6jSDa9UDatQDa1QDYlXyY5TyYpVzohRzo+SzouUzom
Y1502ryo1LnhyXPDEuZcj51zLXr21chZl27OCrkx83zojDOXZ5wOmX7y3LSA
09N8T0z18pvi5kkwbeLuXaNWGo5dMW+K/fQZayfNcRolt30k/cBAba9+Fqf6
2V/st/2mxOFEiYAsieCi/5+9+46K6mrbx//Hu9YbEUxijDIzgB2U3nsv02fo
oGDDLiICUhSxYG9YUECxYRfpvSMd7KYnppne1FgSe7l+5+wzZ5gBTEwR8/7W
d69rzTq6fEDzwGE+5773vTXLPhjY/JnGpW81vvhlwPU7r92+pXH3pubDG68/
+WUwfhrSLbUvGakN70Nqrfo4PQ61hqg0QYlZt9QO2iHbAZlOSHdGmgs2umGN
O1Z6IMUTi70Q740YH0QJMFeImUJME2OSGKFShMgQ7IegQASGIHACAsLhPwV+
0+A/HX4z4TunG2tygjVZHGTxkFIhXpMkQbJE4TUaa8RrouUQrSBeY8hGIlDC
rVd82FA081nZHe+VZMIkk+WKMEDzWqaIN3ORopKlbJK7Q+nMa4lKFqsnicp1
QQL9pkXAnPTdA2VqQOuRq46zcgyFHm/z6PNSBYL169e/+Jd3/9yI/sW7EPMw
WfmhmKpijz/D9D//jfsz9a7V3NleKEtlpJbVW2pru6WmzLY11ymmxS1MY8i2
miLbRmRsoqPE2q7NCqYxZbWdSqmxDZDpf9wAubMn1hipbXmxrWo9pcYeqaaQ
2pFuqS1mpHb8BaTGdD9SUqtCVHV3A+Rc5VARIrUZRGrTzmHKRUy6jLD3MOED
hHyMoCsI+AK+X0H2LcQ/gv8LvG7A8+Yzr1uPve889Pn9nuD334T3bgkfXBc9
+Fn88Afxo2/ET65Knn4mwcdifCDBZQk9rr9TTDdA1gsVQ0XyPegj1Q54Eqn5
Yksw1oRh2TTEz0LUPEyPRmgcxAlwSoZBKoal4+2cZ4PzH7xZdef1xp+0Wr8c
2P7+gLbOAc01A2vzBpXvf6N01+CizUMKVr99aunQE/FDU63GrB5hs22kS9ZI
730jRQdHyI6M8DsxPCh3eEie3sQC3fBC3clFOlOLeRGl3Bll3Fnl3DkV3LmV
3MgqblQ1d0ENd2EtN6aOG1fPXVTPjW/gJjZyk05zlzRxk5t5KS2Eaa28Fa28
lW281Hbeqg4ezbROnbWdhGldOhvUpbalh9Qu6G6/oEMz7aKCabsuEaYppXaZ
ME0ptRlDApWCYCam/r1vyX/4KLufJxqlpKQYGBi8vI/PbMlXbgZR9hf9W4Ov
eyz25LU3UlMGP2+WSA+yXbli9M+w9jym/W2s6byY1J6HtX8mtfs9pDZWTWrX
DdRG9CuldpWV2hUy+JGS2iUznLNAhxWabVBnR29SK3TCMWd6k1q6G9a5Y7EH
kic+qK/93TvwmedkuM+B2wI4x9N3I4flsFWW1dJhlEnG9R+CwQkyVISRWisr
tU/JiP5r9CY1/afPDHDXEDcs8S0pqLW7PavwuHfY45dtbl+kuFye79Q8zbks
1OWkr+sBgWuGm+tmW5+1LlNPhKYUH6g5f/HqV9/fvvH9nWu73zm1+93c2Q3L
rU8G2OT6257yt8vzs8/3cyj0cyzycyr2dS71dS7zdSn3da2Qu1XK3avk7jVy
j1q5R52ckZp3g8y7UeZDS40wrVkmaCFMo6VGmNYuFXdI6HTSoZgmVTBNzER2
Tiyncl7MSE1+QUTF9yIdfoW7TCb7G3WWf/5Aqd8q/teuXXvttdeUb2wKCgr6
4ZO++PqrQ5D++VIl28soKFA3ZG0TU7uud+y6Ltt1XrajjEYz7aJt2wXb1vM2
LedsWs7aNJ+xbjpj3dhp3dBhVd9uVdtmVdNiWd1sWXnaorzBorTOvLjavLDS
LL/c7FSJ6YlCk6N5JodzjQ8eN9532GjPfsOMPePTM8Zt3W6wfv3YlctHLZqr
O9dxzHxzw4XjTeNGWyXxHFe97bVFK3C31owjWosKtFZVae5o0TxwVjPvnYE1
nwzsuKrx/o8a3/w64Nc7A367PfD+Ta1HN954do2S2tv4YRi+5eBrHr7UxWd6
rNRG4fJoXBiDs5TU9NFq0C21UjMUEKkdtUWOPfY6IItIbasrNrlhrTtSPbDM
E8neSPBGrA+iBYgUYrYI08WYIkaYFKEyhPgiOABBwQgKRWAYAiYhYCr8I+A/
E36z4DcHvvPgOx/yBZAvpLEmp7C2SIE1aSLJYtprEqa+lgLxMuI1hmwkwhUq
odTGhh5IohIfEsXFcvUQlHUnhWSpIl7MqwrN1FzG0sy7p85Ukpg2Zf4VaRxt
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
D5vy5/bevNaLbCPLytz+CtlekGl/tazWJ9P+htT+rKz2tM+tauoNkMp9areZ
mpo+fmWl9jPb/UhJ7Vul1JhxIkb40BjvUlIzxxlLtFnhtA1q7FDqgDwnHHHG
Hhf6wfUqN8S7P5zudtvP44FQAn4IvKfBcy5dVnNhy2p2a2C9ERZbSQMks1Xt
GJFaOdv9eJ5I7Qvo/wD9m+TMa7r18aYFvrWjC2ptbk9LPe4edP9ps9tni10u
zHGqn+RSGOB6hO+WbhWwwixwhVFszKTylQZ7gwz3BxkfDDQ5FGh2OMD8qL/l
MX+r4/7WJ/xscv1sT/na5fna58sdCuSOhXKnIrlzidylVO7KSK1S5l4lc6+W
qUhN6t0g9W6U+lA5LaWkRpgmoSJslQjbJKI2iVJqkk6SLrGq1GRnRbJzIjmV
84r4Eqb5EqYF7vX+d8dZvPgDpZcx8/CP1y+//PI///M/1Fua2tra/vy8f7pU
H6kx9/b+HwP1b52j7eHhMZwvoIxm33XRrvMCbbSO83bt5+zaztm20kazbe6y
be60aeqwOd1u09BqXd9iXddsXdNkVd1oVdlgWV5nWVptUVxpUVhunl9qfqrI
7ES+2bFc08PHTXKOGO8/aJy91ygzy3DnzvHb0sZtWKu/etmY5Fi9SH+9SLux
UeaGMYZm8aOtFus4rBrqlTbIf7fWtMNaMQVaK6u0tjZr7j2rmfuuZuUnA9uu
arzzg8aXNwbc+H3And807t/RfHzr9Wc33sS1Ifh5KH6kpMbF1zq4SkltOK6M
wEcjnyu1KiK1QlZqh+yx3xG7nbDLmX6ItIX0Zq/2wEovpHhjiQ/i+YgRYIEQ
80SYLcZ0CaZIEC7DBDlC/RASiJAQBE9AUDiCJiNoKgIjEDADAbMQMAf+8+A/
n8aa3wL4RROvxcKXeE3OYC0B0iTWa0qyKdW2VKU9ko1QPQKVUCgTLCU6W6oe
FZr5LFEPEZlPL511J1ElCaq5IotNnjGPRll3FqkkrpfL4ujfVCS2V2KYXHWe
njrabqSmFkU2SklhYWE9vsL7+Ub0z+9C1HtL6o1Qj9lEzNiiHn+Sugn/w84i
5jH1aGOP1fFXVaWWtY6OUmrMhUJqGxVSU2QTtq27vowl27IlZRtXX9n1h1JL
J1LbwUpNDWs7u7HWU2p/uFWtz1PVFFLLUZPaHwwV6ZZaISu1UhWpVXVLLZJI
bW4z5rRiNmmAnNmF6Wcx7TymXsKUdzHpfYR9hAmfIOQzBF1FwNfw/RayHyH+
BYIb8KalBu/fnvncfcS/d19w73fhg9uihzfEj38WP/le/PQbybMvpXRZjWmA
PCemj8BuIkNFKKkVeuC4G71PjZLadn9sDEXqZHqcSPRcej5/SCw9OtZmMUZs
hHY2huQ+oQeJNPys1fKlRsd7r7W1v9ZQplV19PXy3YNLtg4pXEsxbSjFtGNR
ww7O5MbrGa/Ss98y3C1juM+e4eL9evLDegFHdYNP6E7I1Qk/xZuUz5tSwJ1W
xJ1ezJlZypldxplbzoms4M6v5C6o5EZXcWKqObFEavF13MR6blIDd3EjN/k0
d2kTb1kTb3mzSkGtjbe6nbemnadgmlJqXURqFNNUpLaNkdp5wjRWaruI1DIu
KaSWRaRGmKazh5LadPW+x5da1erxKJu6Vv2u7M/RasyipBYVFdWfn5F5mtSj
+/El/WdnJ/m/kZo85EWOV2PIxh7K5vaHZHtxqb0g1p7HtL+EteF9S+25ZbXn
b1XrltpYRU3tV6b70UAhNeXgx69YqX1KBj9+QEnNBBfM0GWJVis02qDaFiX2
yHXEIWfsdkGaKz0He5Hbs5nudwM8HohEEAaBPxnes+ExH26x9NMjp2WkrLYe
VkwDZBbZqnaUjH9USu0C9D8gUvsJ+reh//gJKaj9Yo0vHHDeBXXuj056/LrT
7epyl8tRzk1TnEucfJab+iWNX7Bg7KbJozJCxmQFG+wJGr830Gh/gMnBALND
/uaH/S2O+lkd87M+7mdz0tc219f+lNwhT+6QL3cskDkVypyLZS4lMpdSmWuZ
zK1C5l4p9aiSelRLPWukXrVSrzqpd73Up4FimsTntIRPpUkiaCZMI1KjmdYm
FrWLxR10JJ0kKlKjmaYuNV9aakI6F4X8cjfqfctL6rj70wdK/f8cKTs7m7pX
/O///u9PP/3Un5/3T9dLHf/4V9c/OZSN+sGnJxDad12g03meMpq9gmln7Fq7
bFtoo9k2d9g2tducbrNpaLGpb7aua7KuabSubrCqrLMqr7EsrbIsLrcoKrUo
KDbPKzQ/mWd27ITpkaMmOYdN9h8wzs42yso02pVuuD1t3MY1BmtSxi5bNCI6
TGee+6go63ELTUziDCyTRtimcFzWvyVK1wrdpzXnhFZiqdbaeq1dHZqHLmoW
fqBZ99nAM99ofPiLxne3Btz8XeP33wY+vKP59NbruDFYTWrfUFLT65ba+5TU
xuDC2G6pNbFSKyNSO2WN43Y45EBLbY8TMlywwxVpbtjogbUeSPXCcm8k+yCR
jzgBooWYL8JcMWZKECHFZCnC5Jjgh9AAhAYjZAKCwxA0CUFTEDQNgdMROBOB
sxEwl2AtEv5R8FfBml8cPSGA8Zo8EfIkyKgsJmRTqm2JQm1ilYjUI+wVgWqW
KMJnslg9Sd3xoZLYVxLUQgNNgbLrwjiKFVdkMfAhLvNRJq473QqL6xNlz8lC
JledIyJ0x1GiMTU1Vf0K/xvFpn+yXsZdiHkX1PsEkDSymEr9P/n49JgRro7E
J1XBNCYqWMtUxVovqSl3q22lyLakbEFUMhXqYsPqKwqsbaWjVlYjTGPSU2rP
r6ltVkqt96z+vb22qh1Q36p2CEtVGiCTSAMkLbXjiGOwxkiNbYDslloZognW
oirZBkgitXmn2QbINswiUptxFhHnMe0Spr6Dye8j/CNM/AQTPkXIlwj6Cv7f
wvd7yH6G6Dr4N2mpef0G79+f+tx7JLh/T/jgN9HDW+LH18VPfhI//U7y7Csp
XVb7SNkAKUILOf+6ghypdtwVB7yQJcb2AKwngx8TZyKKbX30SIRJKobTBbWn
g4vIIJFm0vfYceZ/T1cNrD35enn2m6Xb3ipaRzMtN37YsSjtnBncTd4jlulZ
r9dz3jbcM0NPmK0nPajnd1g38JhOyEmdsFzepFO8yfncqQWciCLOzBLO7FLO
nDLOvHLO/HJOVAUnupKzkEgtroYTX8tNqOMm1XMXN3CXNHKXnuamnFZIbUUL
L5WVGs00Falt6GSZdoYw7Sxh2jmdbedYprFSo5lGknGRZRqR2u7LDNN09uwf
ukj5ZIMZbdHPW8WV072YYV/9/Gy2/6XGNGz3eL70Up+SMaW9P2uGVIMYQzZ2
wr8b9cuXXFb721jrk2l9Ym1kH2W1P5rVz07p7yk1tqb2w7juwY9fGpJxIkb0
OBFKau+Y4DwlNQu0WKHBBlV2KLbHSUfkOCPLBVtc6bNl490xy+NhsMcjiRCi
AAgmwmcGvObCfSFcE+C8FA4rYbcW1pthvgPGmRi/DwZHoJ9HDr+ux1hKaheh
/xE5TO0XcpLa00fjccsMP9jiQ1JQK/H4fZ/HD2vpvsc2iVeWud+S8VHzR2+Z
MGpbyKj04NEZgfpZgeP3BBjt9Tc+4G960N/8kJ/FET+ro37Wx3xtTvjanpTb
5cqJ1GSO+TInSmpFjNSkrmVSt3KpW4WUkZonLTWJV63Eu07iXS/xaZBQUlMw
jUiNME0sotJGR9wulnSQdIrodImkXSLZGRJaakJWakLf80IF0y4I/S4Ko1aG
98+TnD4fKDHnHvbDZ2fWF198MWLECOpe0c83qBdc/Tz66UXWXz2UjboVj50W
4XDmgkPXeYeuc/adVM7ad5y1bz9j19Zp19pp19Jh19xu29Rme7rVtpFiWpNN
XaNNbYN1Tb11Va1VRbVVWaVlSZllUYlFYZF5XoH5yVNmx4+bHTlimnPIZP9+
4+w9xlkZRrt2GO7YMn7zGoO1Kfor4kfFTdWZJxq1wHrsAgujWCPzhNHWS/Qc
Vg3zTHtDnqU15ZDWgnytZVVam5s095zVPP6OZtnHA5u+1Lj4g8ZnNzR++X3A
7bsa938f+PiOFm69gV/fwrW38fMw/MjB9zxWaiNwZSQ+GqWQ2kWl1MbRUqs3
JlKzQJEVTtnQUjvsgAOOyHZCpgvSXbHVDZs8sM4Dq72wwhspPljMR7wAMUIs
EGGeGLMlmCHFVCkmyTHRFxMoqQUhNITGWkg4gicjeCqCIhA0A0GzaKwFzkHA
PAREIoBgzT8afgvhF0vHl3jNNx6+CcRriXQ/pCxJESkLNwmznW0JxOoR9c5i
cmQblcWKCFSTpJJERfjMK4GY6qtPPAu0+O7w45UiS5sS2RkQreYyOrF9h/ZX
bJ8cg4/KNR3qY0YrXkmuOk/jvj6M2ZnC3JeYwlN/fEe9hLsQ9c5HeRRI7xNA
mINlmYdm//ATMTP8+QGpWX9Xahkq+9Q2rr6yOIE+lC2KIltyWdrG6wqp/RWs
dW9Vy1TBWi+pKbHW8/xrRmqkrLY8h92qdlhNagmqUstFrEpZLaYIC1msRZep
NEASqc1vIFhTblUjUpt5BtPPI+Iipl3GlPcw+UOEf4yJnyL0cwR/hcBv4P8d
fH+C9BpEv8LnNiM1+Nx7yr//UPDgrvDhHdGjX8WPfxE//UH87BsJviBlNUUD
pAitQjQIUEmkdsIdB7yRKcG2QKwPw3IyTmTefITH0K3Sjskw2ATeXgzJe/xm
5Z1Bp3/QbLsyoP38a60NGo0Fr1ftf7N0O820/GUU04YeJ0zLDtNZMtYoVc9+
k55buh4/S0+8T1eeoxtwRCf4mM6EE7xwSmp53Kn5nIhCzoxizqwSzpxSzrwy
TmQZJ6qcs6CCs7CSE1PFiavmLKrhJtRyE4nUljRwk1mpLW/irWjmraSk1sJb
1cpb00aY1s5b18EyrVNnk4rU0s7qbCWhpKbGNFZqGSSZqgW1y4Rp7+hkG79u
ptr32P9HjjIDmZlHRv3/07+fpcYwrfejJMbIL/XUV+r/5RdohuzptStXjFQO
ZXN7yT2Q/7CsNvyFsKbWADm651Y11fGPPWtq+vRQEeXsR4XUxrNSM8QVSmpG
eN8Yl4nUOonU6pVSc8BBZ/rtEC01V1pqczyfTvR8KudD7AtRKATTSFktCm5x
cFkMp+WwWw2bTbDYDpMMGO6jxz8anFJIjT75+iI59vob6F+H/l0Y4L4xrlvg
S3u6oFbj/vCY+/Vt7l9Eu7c4BKw1WDhn9JoJozaEjNoSPGpb0Kj0gLG7/Mft
9jfc42+8z8/0gJ9Zjq/FIV/LI77WR+U2x+S2J+R2J2X2uTKHUzLHPKlTgdSp
UOpcJHUplrqWStzKJO7lEvdKiUeVxLNa0pNpDRI+LTUxv0ksaBYLqbSIlVKj
mCZuF0k6SFimSdWYJpST+KpLTZzq1M+bWKH+QIla/fYcKTMzc8iQIdS9wtzc
/L8GIma9kh8WL7h6kK33f0CmRcooOdnhzHmHM+cI087ad56x7+iyb+8kTOuw
a223a2mzbW61bWqxbWyyaThtU99gU1tvXVNnXVVjVVFlVVZuVVpqWVxsUVho
kZdnfvKk+fFjZkcOmx46aHJgr8ne3ca7dxlnbDfcsXn8ltXj1i3VT00YlTBd
b4FcL8pxdLT1uBhT03gDy8WjbFN4zuuH8NMHBe/TmnlcK75Ea3Wd5o52zQMX
NPM+0Kz+dGD71xrv/azx1a0BN+4N+O2uxsPfBz65Mwi33qSldn0oftZmpaar
LrXReIdI7Zw+Og3QPg7NjNTMFFLLs8EJOxyh7kuO2EukttMV29yx2QPrPbHG
C6k+WMZHsgCJAsSJEC3CfDHmSjBLiukyTJEh3BcT/TEhEBOCERqK0DCETkLI
FARPQ/B0BBOsBRGsBc5DIMGawmsL4R9DvBZH6mvxisgT6DBb2JRqU7RHJhGy
qUSsEhGTJEWEPZLYHYXREtQTT4evmkV9JY6OT1xZSBQltb5oFqNy0SML/zDR
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
uF6JZYEWq54Y2mK9kjZ1XlnofAgW0uH3eI1WhBbZAhWdLYBAPXxlov4gzpxX
1vfYD6vPoSIv772oohOSoxs7q6mPHsjeWGOl1jfWeswVoci26fqqld1kW7fu
ynYVrFFS68ZanxMgs3odgZ3dU2oKrKlLjZkrknyYSI3FWs+y2ikitXzEKHer
sVvVmLLaghosqCNYIw2Q85oxj5FaB5HaWcy4QJfVpr+LiPcx9UNM/hiTriDs
c0y4ipBvEPQ9/H8iPZC/QngbPooGSPAfPBU8fCh6dFf05Jb46TXJsx8k+EaK
z8lckXckOEOGitTyUUJJzZOW2i45NocidSq9SW1OFEJj6WmtZmuhvRdDCh+8
WXuDzHu8NKC5jp4iUpY1uGTzkMKVQ/MSh52I4hyarrN3gl6G7/A1bsOTdC1T
dRw36nhs1xHs0pHs5vnu4wXkcEOOcsOOcyad4EzJ1Z6Wpz09X3tmIWdOEWdu
MSeyRDuqVHtBGWdhOSemghNXyVlUxUmo5iTWcJNquUtqucl13KX13JQG7nJW
aqlNvFXNvNWM1FoJ09p4G9pZpimkxqOktpWV2vazvB1EajTTzhGmnSdMu0Cq
aRdZpl3S2cNk6tBgZX3nVSlJuV5J3yOzXrbUlEzrvXm2x+r/d4OKZsihr6em
av49r/Uim/jKFeN/aWj/vyK152NNtQFSdVw/U1a7x0pNuVWtT6l9+xypXTZm
pWbZLbWTjjhISY0cL7vWHUs9EOOF2d4I5yNABLkfpCEQT4FgJnzmwzMW7klw
WQaHNbDZDMsdMN6N8TkwYKWm30VG9F9lzrx+PA63TfCVLS44P6t2v3/Q/ae1
bh85BS4bHuU/fJHv8KW+w1Plw9fJRm6SjdkqM0iXGWbIjLNkJnukZnulFvul
ljlS60NSmyMS26MSu2MU08QOJ8UKpuVTTBO5FInpglqJyL1U5F4m8qCkVimi
mVYt8q4RedeqMK1BJKClJhQ2CYXNQhGVFqGoVSim0kaY1k6Y1qFkmkB2ho6S
aSpS4/te4IeUycPCwvrz+6LHelXl/v/4+k+Nf3yRRd2Bqfuw8e5Mx7Od7g11
kqOHw1esoMm2eZP4cI5DewthWpN9y2n7lka75ga70/W2jbW2DTW29dU2tZU2
NeU2VaXWFcXWZYVWJflWRacsC05YnjpqcfKQ+bEDZkf2muVkme7faZq93WT3
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
zV1coyiopdRzl9VzlzdwVzRyVxKprW6mQ0utRSk1wrQOnc0dNNOUUmOYRkvt
rE76WYXUdrFSUzJtNxuF1Ia+ps3cBP4L9fRXW9F7qVJjnho9b/X4w8wzamZq
WT+/M2SPXXszNaXPsZB/wWuA9vXro8vK3BmyURfPIdvL27D2IqNFnjNXRCG1
0eyRapTUxrDjH8eyUtNnpWbASm0cK7XxRGqGtNTOm6CTkpoF6qxQYaOQ2iFH
7HGmDy3a6I6VHkj0QpQPZvAxQYAAKXwDIZsI8TQI5tANkJ7xcEuGUyrsNsBq
O0yzMF4ptdPQP0dG9H8L/dvP9J/9ZohvbHDe+VmV+/297t+vcH1HIszUmyvX
i5XpLZHqrZAMXy0etV48dotk3A6J0S6JcabEdLfYfK/Ycr/Y+qDY5pDY9jBh
2jGRw3GR40mRU67ImWJavsilgGaaW7GQZlqp0IOWmtCzQkhJTZVpfCqs1ISn
BQqmNQtELQJRq0DcKpC0CWimtROmEanJOmmmsVLj00w7y/c9R8ePMM3vAn/u
ykm7du3qz++FHusVlvv/++v/imGpH3aD336LMK3d6Wy745k2xzOtjl2tjp0t
jh3NDh1NDu2n3arL/DLSw5enRMTFBm9Y533yqF1DlV19hW1duW1NqU1VsU1l
oXV5vnXpKauSk1aFxyzzDlvkHrQ4vs/86B7zQxlmB9JN92012bPZOGu9UXqq
YVry+I0JBmsWjEmZNippgl68iBfjMXqRvcEiK6MEU7MlhtYrxtiv1nPZNNRn
1xsBBwdF5A6KKRu0vF5rS7vWnotaxz7QLP1Ms/Hrged+0vj4psZ3dzVuPhpw
79GAx4808EAL994gUnsbt4bhBoeVmh6+Ha6Q2meU1Mbgg7F4V5+W2gUVqZ02
RR0lNSuUWaOYSO2kI44601Lb74Y97sjwQLontnlhszc2+GAtH6sEWCFEighL
xEiUYJEUMTIskGO+HHN9McsP0/0w1R+TAzEpCOHBCA9F+EQF1iZOwcSpNNYm
TFdgLZTC2mwWa8RrdDNkpHp9jcQ/mkRFbb7KELXJ2cgWksSQkAuF1BYqInlO
xNEqYX8pYrKAvSDXwgVpU+de8ZvPXCte6UT1jIC5mE+ivGAhJlRNJARsVK8F
kc7c/1/1PSr36VP/qCay/mC6Wv8chtLdCblBRWp9Yk21rLalVw/k1j7OVkvf
rjaxf3PadUpqlNdosi0rW7PxSp+nYG/u8xRspqy2l0hNZbeaQmoHsSyHSO2Q
mtQUZTWmAbI31lTKaswp2Go9kGQI5PwmRLawWOtisXYBMy9jxruY/j6LtU8x
6QuEfYUJ3yLkewT+BL9rkP0KMdMDScpq/IdPhY8eqJTVviUNkB9KcJEMFWng
o9wLuV7YL0J6ANZNwpJZiIzCxDi6r2jEVrx94vHg6puDWq5qdF58rbFcq/bQ
m5U7hhStGlpAmHY4Qmdf6PAM2Yht3iNXW49K0rFcznNcz/PYyhOkcyVZXN9s
buABTshh7bAj2pOOaU85oT0tV3tGnvasAu25hdrzirTnF2tHUUwr5SwsY5lW
yUmo4iRWcRZXc5fUcJNruUspqdVxl9dzVzRwVzbyUk/zVhGprWlmmdbK29DG
29ius6ldZ3M7b0sHL62TjoJpTEHtLC+dSI1mGpFaxnnCNHWp7SFSy+a/6aHa
9/hqf9S+7IO2/3S9bKl5PH/1/vOvtslKOWmkV3Htr0lNyTGGbOw52j3I9oIb
1v5eG+SfYU11txpdUyNltb4bIMewR6qRshojtV/08RMjNQM1qV1RSs2ISM0M
LRaot0IlkVquPQ6TGWvpLtjsjtWeWOKFGB/M4WOyEMES+PlDPgHSKRDNop+s
elE3qiVwXgn79bDeCrNMGDJSK4d+Mzn2+grGfg/93x7r41czfGKPFtdHJ9xv
bHb7NNbtrHHIXL0oqV68WG+pWG+FcOQa0ZiNonHbxIbpYuMMsWmW2HyP2HKf
2OqA2DpHZHNIZHdEZH+UMO2E0DFX6HRK6JwvdCkQuhQKXYuElNTcVaVWKfCq
EngTqfnUUkwT8OsF/AaBoJEOkZqAZlqzQNxCmKYmNT4VWSdf1kWHNhrLNPk5
H5pprNQmZQcvWLDgVX074P/1Pf7ZeuU/Pl5kUW8L33x7iBNlNJppbU5nWp1o
prU4djY7djQ5dpx2aG90aGtwaK13aKm3b651rSjyTd8WnrKUIpvvjjTPYwds
qotsKgusy/Osy3KtS05YFR61zD9kmXvA4sRe86O7zQ9nmB3cYbovzSR7k0nW
OqOdKw23JY/fHG+wLnrsiumjksOGJ8p0FnmPWOSsH287Pt7cdLGx1XIDu1Uj
ndZz3bcPlmS/HnZs0NzCQYnVg9Y2a6Wf1Tr4rlbeJ5pVVzVbvx94+brG53c0
fn4w4M7jAQ8fD3j2aCAeDMK9N/H7W7gzFLe08SsX13j4Wbdbal+yUvuQSO0y
K7VOQ7RSUjNDnQWqKKnZ0FLLt0euI44545ALDrgh2x1ZHtjpie1e2OKNjT5Y
J8AaAVJFWC5GshiLJUiQIk6GhXJEyRHpizl+mOmHCH9MCVBgbVIIwicQrIUj
TIm1CDWshc5W85py8xrttfnsfMgolmzMKWzq8SWRM1nIXkRDph4piUQ1C9R+
KV7wnESRUCiLokIxLWfSPOZaJfPVIuydSPb1BUIbbR6VJsfgHm8P/k98o/3x
Us57VK7nbdtXNhf1eb7Gv/tXMnd2EElTKaypei2rRw/kZmSSqGItg3pNo9Nn
A6RCasrRIuxckU1p1xMXk0PZFiQnLy/bsO26EmubVXoglWerrd+jcgo2hbW9
NNbUGiAPYvlzsJbQJ9bIQdgx6merMVhbUMn2QNYreiAVWGvD3A7MpbB2lmDt
Iou1DzDtI0z9BFM+w6QvEfY1jbXgHxD4swJrwjvwUZTVIHj4WPj4nvjJbbqs
hu8ligbIyxJ0itDIRwUlNU9aajuCsGYKEudg1kIExMNqJTh7n75VcveNpu80
O997rbluYPWRNyp3Dile87aCadN094UMz5SO3O49cr3dqMQRxik8+zU8ty08
/nauOIMr380J2McJztGeeFg7/OiwKceHTTupPf2U9qx87TkF2vMKtSOLtKOK
taNLtBeWcmLLOHHlnEUVnIRKmmlJrNSW1tJMW6ZgGpdm2mne6ibCtGbeuhaW
aW28Te08iml0Qa1DwTSl1HaQ0ExjpZbBSi2LZPcFlmkXdbL3DEtQ9j2+8u1p
eKV9j8zq/5Ov/2D9F27ItC4trVLjeX9XasN6TIOkvEYZLSdHzB7K5k79zr+x
Z+15Unse1kb8OdZoqY3qLqvdVSmr9ZbaDwb4zoDep6YqtY8M8b4h3jHCBWN0
maHVAg2WqLJGiS1O2eMImbGW4YI0N6z1QIoX4r0RyUeEEBPECPCFbwhkkyCe
Qf/I9o6BRxJcVsBhHWy2wjyDlVoF9FvIiP7Pof8z9O/fN8R3VrjoRBfUdrt/
m+x2cbpLpe4ciW6MSDdJqLtMOGKVcPR6ocEWkeEOkfFOkWmmyHy3yCJbZLVf
ZH2QZprtYUpqQvtjQofjQqeThGl5Qpd8oWuB0LVQ4FYkcC8WuJcIPMoEHuUC
zwqBFyO1GoEPlVoBIzVBgwrTmlimtfBJQY1Pp50YjWFaL6n5dhfUfKiElMnC
wsJepG345a3/E4MNX+Hq56PA/8ai7mZvDKWY1kbnLGW0FqczzY5dzY6dTY6d
px07Gh3aGxza6h1a6xxaa+1bauybquxPV9o1Vtg1lLmU5Mq3b46IjaEi37rB
I2e3dclx66IjVvk5lqf2W5zItjiWZX54p9nB7ab700z2bjTZvc5410qj7cnj
t8SP27hwbOrM0SnhIxb76yYIdBe5jUmwH5dgZZxkarHM0HbVGId1eq6bh/lk
vhGQM2ha7qDoskHLGgZt6dDafVHr6IdaJZ9rNnwz8MxPAz+8qfHNXY2bjwfc
fTLgyZMBeKSFB6/j/mDcHaIiNR0iteH4dgS+HokvR+Gz0QqpvUdJzQAXxuHs
eIXUmsxQb4FqK5TboMQOBURqx51x2AUH3bDXHbs9sMsTO7yw1RubfbBBgLVC
rBJhhRgpEiyRIFGKeBli5Yj2RZQv5vlhjj9m+iMiAFMCMSUIk4NZrIUhnGAt
jGBt4jRM7O010gzJFNeU9bXASMU8f5ps8xVk8yfxiyJZQMdXJXL1yHpFqpoo
+lXCJEoRce/MpzkmjrriF5k8Y05Pl9GJJGEvFObqQbN56td/GFpqc3v0Pf73
v8tefFE4YmpqzEXv89TAFhD7p7lIMRPS2EOJtSwiNSaK+tomhdQyVYpr3VLr
E2vbe5bVVIdAbtx6fc3GK0qyrVjTqcCa6m41FaytU8XaPgXWUlWxlkOwlqPA
mnK3GjOxX9EDqT4HksFaDNsDqcAaU1ZTmQM5v5nGWmQ75nWyWLuAWZcI1t5j
sXYFkz/HpKsI+wYTvkPwjwj4BX7XIb0F4W/wuQfvB+A/hPDRQ9Hj38VPb0rw
k4Q0QErwHhkq0sRIzQP7xNgWgtXTEBeJaTH0MWr628DJffhm7TUtuu+xbUDt
idcrdr1VvPbtgsXDTs7n0kwLHpEpGbndc9QG21FJow2SdWxTuS4buN7buKKd
XFkmxy+bE3RQe8KhYeFHhk0+NmzqCe3pudozT2nPzteeW6AdWagdVUT3PS4s
4cSUcuLKOIvKOQkVnMTKbqYlU0yr5S7rLqhxaaad5q1pYpnWwtvQSoeSGl1N
YwpqHbytTEGtS5VpvOcxjZGagmmXdLLfVul7fOVdPf8FKvr4+MTGxr7av4Ny
/Ud60RXNkNqD1Mf4/1Ws9ZzeTwGts9OWIht7KJvtP26D/AdS690DSUttFJHa
KFpq3bP62QbIm2O7pfYzK7Vvx+GrcfhyHCu18QqpXTTGGVO0maPREtXWKCWP
r4+RoSK7XbDNDRs8sMILSd6I5mOWEOEiBMvgHwjfMEgjIJpDz3D2TITrMjit
hU0akdoBIrVK6Ldi7DtknMivT/Wf3DbDFTs0uz465n5tndvHka6nLQIX6kaJ
dOOFusmC4SsEo9YI9DcJx28TGqcLTXYJzbKEFnuEVvuE1geENjlC20NCmmlH
BQ7HBY4nBU65AudTApd8gUuBgDCN71bMp5lWyvcs43uW870q+V5VfO9qvhrT
aKnxhY184Wm+sIkvauaLqdBM40taWab1kppcITUf37Mk53z8zvkwUpu7KGLP
nj2v8Lvg//U9/ul6VVtrX3BRTNM1Hu90rtXpXIvTWdpoTmeaHLuonHbsbHTs
aHBor3dor3Noq3VorbFvqbZvrrRvqrBrLLdrKLWrL7GtLbKtKbCtyvM4tDto
9QrqXxoREy3btNrhcIbFyT0WxzLNj6Sb5WwzPbDFdN9Gkz1rjTNWGu1IHr81
ftymhfprZo9ePmlkcpBeklh3kcfoRCeDRFujJHPzFGObVAP7taOcN/A8drwl
3ff6xGOD5hQOSqgetKZFa8c5rQPvaZ26olV5VbPl+4EXr2t8ekfjxwcDbj8Z
8ODpa8+eaODxIDx8A/ffwt23cWcYbnHwKw/XKanp0VL7jpLaKIXUrozBR2Px
vorUugzRZoImc9Rbooa0ZJfaodABpxxxwhlHXJDjhn3u2OOBDE+ke2ObN7b4
YKMA64VYIyJlNQmWSrBYigQZFskR40tjbb4f5vljNoW1AEQEYqoSa6E01iZR
WJuE8Mk01sKmIqw31mYp+iGVw0bo+to8RZWNIVvA/O74R8GfvDJk831O5FGQ
qUfaZ+bTkTw/4vnX5ZHU//VX/OfRcBNHqkXEhr6ex/5y3nOjFFn378ztjoh+
derV9/h/aDfoiyzq/efIkSOVlTXq+nmD+vtnsTMh9VYnXc3qU2oqWFMwjUgt
I+35WNvOYm1H31hjtqpRZFuxujNhcQ7ltZi4tOVrOntgbQPbA7lOpQdSFWsr
D3RLbRmLtSWHidSOsGW1Y4jtc8NaIYs1UlZbSKaLRKvMgYxqRBSDtVYWa2cw
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
2YalBb7Ls2U6aVzdeBvdSCPdE0tNTmo5nNPkx2hKkzTd0zS8szT88liBhaw1
Jaz1ZayNFazNVawtNaztdayd9ayQBsS0vZhpBwimtWkebsdMk2se79A8gaUW
1qV5qlvrdI/WmV6tsxe1zmGpRQ5oKZk2rB0zrB17iWSaFqqmkQW1qzTTRimm
kVLLoAtqWTgE03JuTGQaKTVzFTPyJjAXeg6f7tfQ399PAI24Y6xYsaK8vPzB
gwdP6yuZds3NpnS6uKb2W4trv4w1mmy6eML/TGR7zFhDUls+uayGpKajbICk
ymp68CmW2kek1AyQ1N7FW9XeVjRA4ndHIxYwTM/qb8H798u5qKyWKYBkEcRI
4JwMTjjDflfY7g7rPSHQD/zXgPcm9B7A5QBITgD/HLDjwDoDS60B9PvwiP73
QO/LH8wevmsLQ/yfioSfhPFf2izptfE/pr1fuuiYeOkpiU6ExCBGapwoM02V
mafLLLNk1jkym3wZYloxZloZwTQZu0rGqZFxa2W8OhkhNX6DTIClJmymmdYu
lcilhNQmMc25D0nNtV/mOiBzG6SYRkoNMU0pNSnBNGS0Uan3GA6SmtRnHIfB
NN+b0m3hQU/3nGuYA2OOHtNith4RTCOvZ8ca+c0mLea5SHOhPYO50PRaVzH3
5hDKjUHujQHu9QHO9X7OeB/n2kXOWC9ntIdN5GoXe6TT6UqH02W506V2x+FW
xyGCaU0O/Q0OF+vse2vsu6vsOivsOsps20tsWgptmvKsG7KsatOtqlKtKhIt
y+IsSi6YF0WZ5Z8zzQ6zTjositi3+uCuTXt2eB/eahO2dslZjyWnZCvCBIan
nEzP2FmctbKJMnOIMWLH6/BTtCVZL3oUq66tVd3RrnasTzVqRDX1pkrh6yq1
f1KRf6Ay9NGC658veOureX/7Yd69B898B888QFKbDw9U4efn4KcX4PuF8B0L
viGkpo2k9gVDah8SUtOFd/Uoqb1BS+0WvheN0lLrs4UeLLU2NjRxoZ4H1Xyo
EEKpEIrEkC+BHClkyiDdGVJcINEV4twgxh3Oe0CkJ5zzgtNeEOYNJwis+cBh
XzjoC/v8YK8/hJBYC4CtK2fAGt0JSWJtQjOkor62lcIaRbbtsJLwGvm6AwJw
/HdOiB8jCGs4iGk76dedFNy8GfHaCd47sdR2UlgjLjyVIZh2J4DxGY9ZsgOH
eY0/JGj2aPmP73ucZZHb1pifIbeBPK09IOS2tUlYy5mCtWwF1hh71iZgbVJZ
LZWWGo21lFmxRu5Zi2aQ7UhY6dmkO0hqU7AWXgTnimmpldDTRejKGjUKshK3
QVZN2bPWNM2AEQJrB7oR1vZjrO0bwF4jsTYCu0cR1kJuwK6bsPM27HwFdrwG
296ALW9BMBNrH8OqfyCsef0LXL9Fu9WcfwLX+z+5P/zKAz7DDZBveMA1V7go
hTo3yA6E81th9wHwiQHT0p+e7/9c5fpLKiMtz8pTSKZpl61fWuC9Ikuim+qk
m2CpF2WoH7rcOFTL8awmL1pTkqDplqrhlanhl8Nama++ulh9fSkrqJy1uZK1
pZq1rZa1sw4xbXejxt4mjf3NGgdaNA61ahxu0zzazmBaJ8k0TSXTLmqF92lF
4oLa+UHt6CGSaVoxBNMuacVf1kq4gpk2gpmGQzFtTDv9GgrBtEwUJdNIqeVi
qSmZdlp9O3kTmCObL55u3+O9e/euXr36ySefPK0vYPZF3J+fZHv2r1qZmZmq
qqoRh5b+eqxpPDrWSJQxyYYn/Js9Bawhqa3AZTVCajqoAZIqq+nSZTU9+AiX
1f6qD+8bTGiAfE1RVsPvjsgJkFRZjQMlPFRWSxdCghjOS+G0DI64wG432OwB
a3wgIBB8g8BzGzq1R3oMBGeBHQs26WBaBAZNYDAA+i+hM68Nv71r/vAVx/ty
0bdxgj/tEg65y/K1d0u1D4uXnhTrnJPoR0uN46WmyVLzNKllptQ6W2aTJ7Mr
lNkXyxxKZI5lMqcKgmlSTrWUYBoXMU1KMI3fKBU0SYXNUmGLVNQqFbdJxYhp
UmmnVNollXVLZT1S516p80WpS5/UtV/qShXUpCiIaVIPIpelHleknkQQ01AQ
05hSG2dKTUIwze+GZENe4H/7Hh/fmtRlRJ72OOk42klr6uPuSYv59PupL+Kf
uaVuEu6tQe5NbLQb/dzrRPo44xc513o513o4Y93s0S72aCf7agd7RO50pc3p
UqvjcIvjULPjYKNDf71DX619b7V9T6VdV7ldR6mtvNi2tcCmOZdgmnVtunVN
ilVlomV5nEXpBfPiSLOCc6a5J00yjxqnHzRM3qMfv9U0Mkh6bFPgvs0bd2/1
2r/W4YSLyVkH83M21pEWdhdMnOL1eclLRekaLgXPBlSqbW5W29+tenpYNX5c
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
rwmUTBsX+F3HuSEIDg966mP54Y/X9/i41++4xXXSIu4biy30+a/IUV5u572M
jfZSC+82MhrvVhP3ZiP3RgP3Rj33eh1nvJY9Xs2+VsUeq3QaLXe6WuZ0tdQJ
Ma3I8VKBwzDBtFyHwWz7/kz7i2l2PSl23Um2XQk2HbHW7ResWqOsmsMtG09b
1J1ETKs+Ylp5wKR8r3FZiFHJDoOiYL3CIN38tbq5gfo5fkbZ3qaZ7uYZzpYZ
EttMgX0WxzHbkZNty8u1FBaaSkoNXSp03Gu0vRqeW932bHDPs/uG1EJH1aJu
qaW8rlbwJ9XqD1RbPlLt/Uzlyj1UUHv7hwV/fUAV1H5ERpt4jBoqqCmkpg0/
LVJIjarg39W5e8d0rIdfmuNDkK00y2dMLlR2PxJSe8McXsVSu0lL7YojDLOR
1Pq40MODTgHxtglaRdAkhgYJ1MqgWoa2qpW5QIkraoBEZTV3yPaATLoBktqt
5o16IBVlNQJryh5IXzjuh4/D9mNgzZ/C2q6ZKmv+EOQPG/yR19YzvIawFoiz
iiLbGjqU19bAKjJrqQTirCSzbkIC0GvSlm0E1sB//XTZgF79FMFAm1ZtPsyQ
QGNeKP/TsMhrkkf+CMc4zrSY5fvZpUb8Ej3We/Xv8maVxJquqSgvFvJIrzHJ
Fj85CrJlKTKVbHSVLZ2RtGSabCk02XAUHZKk3ZIUF6TdyDDtRmAqQwk38nXa
RCffPR01duAwItvR0NKI2Dtx5PclfhCCY2mQSIgsBZJwkpMgJQFSYyEtBjIu
QCahswjIOwcFJ6BwPxRvgdpgaFwJ7TLotX6/fUlttcbZIvUteRqB2Vo+mdoe
aYvckrVd4jWdYzSco1nOMepusQs941/0SXrRP3VhYPrCNVkL1+cs3Ji3cHOB
+pYimmnlmGlVrP2IaaxDmGlHGzSONSqZFtaKjIaY1qZ5pl3jrFzjHC6oRXRp
RnVrnieiYNpFzdg+JdMUUqOYRhfU0umCWiYttWwsNcS0Mcy0axTTCq5TKSRi
pmJGPquZI49o5kj75Vxes0uN7NAmpx49vt/Q2UfR/u6LOnAtVPuXsPYExvv/
stow2RxosrnfuWPOOEebhBt+RV6j8/NiTLYlNNmWwrdL4RviPRXOV4Ta8Kw2
Jdwm1tpItRH5Ez4I6TUTdFLtoC00OUCWMCVwtcOOVQahDiaYaZYE0xLZFNMy
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
91Ub+62WJTfq5zWXGWSV6B1TsGJzWZFZzDXpzJAUZuB5pu9ZpjyR6UMYLVHX
L1HX/5xu0HndkAu6Ky4yQ9MQ08Ih03IQ0zYqWJsg0wr1tlBMi4FMKyeZtlvJ
tFoa0xoopjUZHGk2OEoxLQGmHTOtw+BUJ2IaUVBL7JnCtEtzLlyakzKVaZcR
0zKGMdNwQS0LJ/sKjWmrng1Q9j3OhBvFM6eu9xdYv/mmDzBjmEYs4mlN8Vte
nAZrv7LcpuTbVMfpT0O5R/y2qdEbH18wNmaiUHhQZLOb8hWIvwz9f4ew2Gwq
DHxJpomj9S3Q/Nf3s/7+lUbre5rpY4wTN2Z75L5otMvG9ADb/AjHMoFrfZrH
PsuDTOOl8PmIaQJBpgAyTYyYJpQohLYFQoJp9iUihzKRQ7nIoULkWClyrBIR
THOGqRW7YKm5IqmJXZvEbs1iKDXMNLEHKqgRTJN4dku8YHolXn2IadJ+WynB
tAFVptGldgUHGg3HbxRleYkULmIy7R+4Zs7trL/k+q3GP8J3tPletrZ3odFq
JSg14tvV4ttV4tuV4lsVKIhpZaIbpaLrJaJrxaLRQuFogfCqQng1T3iFYtrl
TP5gOmQa/9JF3qUUbv95Ti9kWiKn6zS786QNZFrbMeuWeKumA5YN+yzq9pjX
7jKr3mFaGW1SEWVcFmlUGrGkZO3iotUvFq5YolhmlB9okudnnutjmeNtne3O
znLhZjvwc2xFOSJJLs8uz8ZBYeFcbOJWtsSzaoG0ztCv6dkVHdoR/drbhrXj
rmsfv6N97mVG1uuM4n9q1b6r1fahVv8nmqNfaN77RuO1H8iCGn7a9d8oqWmo
a300RKX57+lSewFLbRH46EVKakux1IxIqb1OSe0lCyg1cNsa3GCDUe54l6Qp
TR4XExYXE950wW8c6qzNDrQ4gCYHvFXNmZSaSgOkB8jxxGU1vFstRV1ZjT6x
H/VA+pBlNXLDmhzslFNYk4NoOcaaL8JapO+UyhrEmi9Y4wtW+5JYC1ViDXtt
uR8lNSrLAlCCA9UkKIiSWlDTqlWo75G0WzCWGpWpWPNTG3Vqk6sNYtrUvscZ
crU2c9YjpPYktoE8aaYRC17eWImF3q7xWQkAJpPIVLLR4JY+iW+q3ZJp9OAa
XOopVcERoZuLllTVII6dpDh2AqQlUDkO0mGOIZchmh2h6ewA1tk+kLsX5O0G
+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
S97zjlmL7DOW2KYulVw0lqSaStLMxGnmMJIMC0mmpW2WlW22lVMqX3bKNTR2
efjWNcsOBPgkujkUs7HROE5lHKdyDmSacyVOFdelmutSw3Wp5aoyjUcwzQMG
MY3v2caHTPMimNYJmSbATBMgphFS66ekRjJN6DOEQ2MaMtqI0A8aTZVpy0u8
lm2Y3Pzzh6yn5f4/aj36HQp+YzyrRzCtTPIAG+1+MTSa5F6RhDKa+C422p1c
0e0c4e1s4a0s4c1M4Y0M4Y10wQ3ENP71FP6187zRZN7Vc7wrSdwriZyR05zh
U5zLCeyh4zaDR20G4q0vHbLuP2DVt8+yd49F9y7zrp1mndtNO6JN2qKMWyON
miOMm9aaNoSZ1a+2qFtpVbvcuiaYXR3IqfTjVsr5lVJhhaeowk1S4Wxb4ehQ
aetYJXau5rvWctzrrT0bzKUtxvL2F/27nw/q11s+OHvdiE7UNZ3YWzoH7usk
vKJz7nXtjH9qF/yLUfFvRuO4VucnWpc+17z6tebd7zTGftR467EKavSpj3MB
mIdaH5VS+4o2ToSU2lJKasZIav80AQ+x1F6namov0aRGdD8+jtSqsdSmbFVD
UiPKamgCpCdIgVLzBMle4KwXSPIaT5CNHAhS7AiN27xOERM6sjcYSS0eS+0g
DWvKHki0YU0Kdkgx1mRgm0wd1mSqWJOhEFhTKa7JwCoZ4bWm8BVQamCFjCY1
ZWheC/L5715TgzX1Xnva9/iz1tQLHmKp3QZCTCv6r2f1P9ewa3hhExYW5u0V
r0TZhM72TaSAXjWbQrNCZWJBEQ1oxbiCVhwNSrZSQNsESimjla0DZeGgDD8W
DW1Gw0arIfajBU4Yrc2bbHfEpbTvO2y/6BCOt3PfbrN6rcXsfvOSaw0LLtXO
baswrKaYdqFQ74xC71ge62AOa28Wc2cmc3sGan1EUktjRuJshB/TmZEZzE2Z
rM1ZKFE5rK25rOg81rZ81nYFKwYyrQgxbVeJ3u5SvT2lenvL9OIUC/ZApu3x
j4oO3RTvsS3bdG+N/uFa/fjaCaYda9A/TmPayRaDUy0k0860GSQiphkkdahj
Wq9hSq8q0y5hpg1gpg1OMC2bYNrwBNPyCKbBmGhZEGP5Z8h1OHHX4o/+W/yJ
FzHvaNIn1d5ievzJtH9VphGL2LYWv32hOo492mWTdKYxZTDI4xTRyEbHL9Ac
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
RG/vVKZV6R+q1j9cox8PU/LCoTN2sXv9t24L3XzUIybP9CBkWqPBiab/xrQu
zLRuwws9KBTTDCHT0vrVMC1LybTLc3IuQ6Nhpg3TmJbK2gsv6WfUBsm/wFzB
P3w9ovtxktSIBz4STdpqv9TMHEX75BbCGlMnPv7/qBsGMpVmj959Ni3TfsQ3
vYki2mdo8L7GONB4D+1Hw3MdgcbtHzRHv9Uc/FKrB5fS6j/QKn+XofgnI3WM
cfoe49B1xs4hRmQPY00rZJq2T4W2ZynLrWiuS/58p9yFDlkvOmQtsc8yss8y
ts8yscs0tcs2s88xt8+1sM+DsXTIt3RATLNyLIRGs3YqsUEptXEus3EuZztX
sD0KhUGnpKv2LF+7LSzotEyW4+BWx0Gp55BMa+R6NHFpTON5tvMQ0zroTONL
eyYzzQcxTSAfxFHLtBE1TFudGBS4w2fqkJzff/2p36//Akvtbe2Ojg40QqRg
PwYaNtqDQvGDAmg08X1stHvYaHex0e5kie5kCm9nCG+nC26lCW5BpqXwb1zg
3zjPv57Mu36Wdy2RO3qGe/U09+opzpUT7JHj7OGjNpfjrYcOWQ8dtBrETOvf
bd4Xa967w6xnm2n3VpOuzcYdkabtEWZt68xbwi2b11g1hdo0rmA3LOPWB/Hq
/Pm1vsJamajGW1LrYVfral/r7FDr4FRn61IvcmvkezRxvFqspK1m8k4jv95F
gZeeWzaoHzo8e/2oztabOrvu6hx6WfvE33WS/6Gd8ZZ2wb+0K95nNIwz2j/R
6v9C68rXqDX65R9RQe09XFD7AhXo6WekWVRB7Vk1s0TAPHKTmlJqX2CpkZvU
CKktJQc/0mtq/6Ck9rIleAClxga3OWr2qUGp9dKl5jAhNTRUxBlvVXMBJa5q
pJaJpUY0QF7AUlMtqxFSA8e8wVFvEO89fkDetGM5Sbbo0LFYf7BXCvZIJ2ON
8No2SmpbpCBKSmItksLahumKa9Kk9Wua1i4Hq6QooVLSaytUvTbBNHoIqclU
yYYPAuVYanIyAdRnKLVNFcfMuWCbsevxJ4oo+0jhVZDaS50/9TOJiIWwpj/v
7MaHpM52Ty6cFdNqZwTQSraDEgJolNEg0Eo34WwEpRBoEcho5dBo4aB8DWm0
yhWgChutNpg0WgNhNF9sNClo9wQdbqATldJ+7LL7ulP8Safg/Q7O2+3Wr7ea
v9xidKt50Ujj8331c9tqSKblluinFqFhj6dw3+OhHFRQ25PFjM1k7shA40Si
cbbCZDK3ZqFEZzO3QaPlMrfnsWLyWTsUrJ0KVaYpjVaut79C70CF3sFKVabV
6h+pw6U0mLIX4hPtdkGvwSTZ7y4wjW82OK1kWptBkpJpnYbJXYbnuzDTuimm
9aoyDUstY2BO5iBKFpZa9hDJNCy1Cabl475HBfP/GsyosfxPW69/kzV1zCOY
ZiAk0fIKX3C1J6iZPIr2yS28bY0bH//sNDMbHxNoaopoRKPjt7RGR8Jo71Nb
0l4BGnd/1Lzxnebw15rwMqzzU63mj9CutJJ3GDlvMM6/zEi4zdg/ytgxqB3Z
ox3Wqr2sXlteqeNZxnQvnuNa+LxL3gKnnEWOOYsdc5Y65Bg5ZBvbZ5vY55ja
55o55Jmj5Fs4KCwcCiwdC60ci6wci62cSqydSq2dyqydy22cK2xcYCrZLlVs
l2q2azXbs1gEpQa9BhN8RuaT50BjGleVaTgU06QwUGq9fFkfTj/fR8m0ASXT
BPLLAl+YYZwRge8kpl1FTFvW4LJuR9hMGMsPnvY9/tGLeIMgJgAQpyz4MT4+
nji5PWNgYCBzWHw8wkyxV/xAIb6fL7qfJ7qXK7qXI7qbLbqbJbqbKbqTIbyT
LridJridKrh1ETJNcBMyLZl/4xzJtGtnuKOnOFdPcq4msK8cY48ctRmOt74M
mXbAanCf5cBei0u7zftjzfp2mPVuM+3ZYtK92aQr0qwjwrx9nUVbuFXLGuuW
VezmFZymEG5jML8hQFDvK6zzEdd5S+o87erc7OucHescnOrtXBrEbk0Cjxau
V6u1tM3cp9PYr/fFwEvzg4cMVg4/u3Z0dtQNndg7Ovtf0jk2pp30ug7R91j6
b0bth4zW/2j1fK51+Su0ffX+D2gk7NtUQe2ryQW16Yfzk1J7ntqk9sLEJrVP
aZvUkNSMJqT25pTuR7rUUPcjH4wI1EltyiPVyKEilNQmtqq5Uw2QUGoelNQ8
kdTOYqmd8QKnvMBJLLXjWGpHvMndaoe8x+N8mraHJEWtiYtc17Rt+dgOfxJr
5IY1KW3DmhRlMtbUFdeQ1KRN65ZDqYE1UrAaR+m1ldJpvRYspUKRLUhG85oP
CJwU+aQIn3v+ad/jL1jEDNhJL51avgF8Yp/udvRfpnaAGg8MDP1E8aTOYid0
RpbPtlOhKmilWzDQcJcjBFoZ0eUYQRbRysJREa1iDahYDSopo9VAo02qoxFG
k4F2b9BBlNKcQafDd122X3SKPu7g/bud/Va71WutZg9alt5oWjTc8Hxv3dzW
6gmmpRWhYY9nFHoJeax4XFCLw62PUGoxONszmdtworOY27DRtsPksmLyWDvy
JxmNRZTS4sr09pXp7SeYVomYdqhK/3A1NlqN/pFa/aN1KJBpx2Ea9BMaDE40
GpysWHgsyX4PfA/aHrr5rP3e6oUnlEzrMDzXYZhMSE2VaamQaX3qmUZIDTIt
Z0jJtDkTTMNSU5hpmMFv4xn1ffg/6IInsdTW/dUOhHxEh/aMqrT+zot82ppg
NkbZf50Non7M/qRnohETHWlGm0UY7R2g8RBojgHNB0Dz1g+aV7/VHPxKE16G
tf1Hq2Fcq/I9RiHueDz3MuM4Ypr2jiHtTSTTGPJqbe8KXY9SA7eieS6K+c55
C53yXnTKW+KYu9Qx18ghx9gh18Qhz9Qhz8wh38xRYe5YYOFYaOFYZOlUbOlU
YoVSauWMmGbtXGHtUmmDQjCtBqeW7VaH4lUmWnE0AH4/ILIlyaSVYniF6dnK
9WzjerXDIKZ5d/K8u3je3TwpTA9fRmcakhofMo0sqA3x1TFN4HeFylWcUUFg
rx38Q7nSxTNhLP/M2cn7P7uUQ5CIu3mT3rzgjy28BptQm9Rh8ZH1pnmxonsk
04R3CaalCm5fFNxKEdy6wL91nn8zmXfjLO9GEu86ZNpp7rWTnNETnKvHIdNs
Ro7YDB+2Hj5odfmA1dA+y8G9FgO7LS7tNO+PMevbZtq3xaRns2l3pFnXBouO
dZbt4VZta2xaV7FbVnKbQ3hNwfzGAEGDn6jBR1IvtW3wsm9wd2hwcax3dG6w
d22SuDcLPVt53m02snYLeZeJX++SgEsvBA/NWTHCDBudvenG7Jg7OnH3dY68
qq3seyx6T7vqA0bTx4zOT7UGvtS6+o3mne81Xv0JnkBQQe3jyQU15dOup5sl
MqX18auF6saJGKHWx3eN0WOv0cPUMNP+YQZeNwdjFqpS45H71NTX1Oyn1NSI
oSJEA6SrGqllYKldxFI7r05qZFnNi8KaN5QaOOgNDniD/d7je+RQatBriGxb
l49t95/A2nYp2CYF0ThTsUZ4bYN0ori2Tjq2zh/dRl4rB2FShDW610LVeY1s
hpSiBEsnky2IymSpqZCt39V50k3Xp49xfMyl9jnX8DNqezPgS0o0QE7y2l/p
mUSAmN4v5sjt4yc1N6qUz6JBKTZaaRRVRFN2OUaQO9HKlUZbhYxWtQJUK40W
DOqDQGMAaPLHRpODNh/QLgUdnqDDHZfSnH7stP+6U/xZp2C8g/tuu82bbZZ/
bzW917L0etPCyw3P9dbNIZoeS0v180r0M/AUkSSF3ok81tE89AC1/aj1EUst
i7kzixmDsx0mGwEtBgYaLZe1I4+1EzMttoC1q5C1u4i1p1hvbwnKvlKSaUQp
7RCNaUcoph3DgUxLQEzTR0xrQjnVbHC6amFCoemR456xmGxR5+z3tdOY1oWY
ltKDQlbT+gwh09L7EdMy6NW0wTnZg7iaNolpwzSmnTc4MNO2pz1tvf6tFnE3
iX5xO/UzxJpu/OOfZRTtE12oE9JA6+HDv9GufH5GiyNlNDTR8VvwzFeU0T7G
M0Pep43ffxlo3vlR8/r3msPfaPZ/iUppLR9r1X7AIDoe015jJD5gHL2pHXdF
e/uAdmQ3I6yVEVLP8KvR9q581rNM3714LiqoKRa4KBY55y9GUstDUnPMM3bM
N3FUmDoqzBwLYMwh05yKLDDTLJ2h0RDTrFzKrV0Q05DUXKtsXKttXGtwKKa5
1bPdGzgw3hWigDT3lccw2baHBWa6Y6ZxvTu4BNOkJNN4sl4eKbUJpqHIB3Fw
Qc2XlBqfkNpUpvmPCsIPr3DfIZ4JY/ln1Knyf3kpy5qPvohSqg2+zT2jb6Bj
baonlbx4dLVJ7jbEtNspyGi3kvm3zvFuQqYlcq+f4V4/zYFMu3aCPXqcffWo
zZV4m5FD1iMHrYb3W13eZzm0x2Jwl/nATrNLMab9iGmmvZvNeiLNuzdYdq63
6gi3bl/DblvFaVvJbQ3hNwcLmgKETX6iRrmkUWrX6GXf6O7Q6OLU6OTcZO/a
bOveIvJs43u3s2WdlvIuU7/epQEDC4OH5q0Y0VszOnvjjdnbbuvsua9z6BWd
k6/pJL+hk/GWtuJd7fIPGPUfMdo+0er7Qmv4a80b32o++AH1S7+jfofarCnD
+ZWzROaob32cOk6ElJoxWVBTSu11M/AalJoleMVqSk1titS6odTs1HQ/qmxV
w1IrIIaKQKm541n9tLLaeVxWO+tJblU740lhzQsc90JYO+KFpHYYS+0gkhrY
5w3ivMFe7/FdcsUW/FA2SLYtIePbfUCMN9juPS3WyOKaN4U1KZRaUsQaiDWw
VgrCpQhrdK9Naoac8JoUhOCo8Zp0wmuBRNR4Tf9Z3ad9j794ERU0eAaAryEx
CFHtVRCg7sJNugT9izGNWMRdaCE/rIQGtFIiqkAri8ShFdGInWhEEY0wWvVK
UL2CVkeDRgtERmvGRmsljOaFSmmdbkQp7ftO2y87xZ90CD7o4L7TbvOwzWKs
1eRu85JrTQuH6p/rqZ3bWmVYW46Yll+in4mniJwt0DuVr3ccF9QO4tbHvVlo
k1psNnNnNsLaDoi1bOaOHNaOXNZOmDyUWAVrVwFrN0whaw/FtDjMtP1legfK
9Q5STDtcpR9fjQKZdhSmFhuNYtoJimmnCKa1GJxpNUhsNUhqM0iqWXgqi3v4
uOcu6LX9AduzeUdUmYaMRmcaTubAnKwBdUy7PCdPlWn5dQaJRM1l5jTzPO17
/G0Xce8I/kjCf2XifDXdePOpe2n/jDOOntCCr9gC3dnx8f/v9DSb1mh46v4s
4slolNHIXkdotLdQu6Pmq0Dz/k+aN6lSWu/nWu2faDV+pFX9PqPkX4ych4wU
tDFNO/6G9t4rjO0DjMguxLTlDQz/Gm1Z1WyvcpZHqaF78XOuhfNdCxYiqSkW
O+Uvccpf6pRv5KQwcSqAMXUqNEMpMncqNncqsXBGTLN0LrN0KbdCqbByrbR2
rbJ2rUZxq7FBqbVxq7Nxh0ZDTGN7wDSyPZo4ns0czxaOrFoEmbbyeCD02pp9
K4Ky3b27uKpM48n6eLJ+njqm4Vzm+8IM44zw/UbUMC00Qw6l9qzh/zcT+h6f
lvtnyCL+IX7Wgx0JtaEqOT4rPqOvr2NlrOctXBi/3Ch7E2LajdPc66c4109w
riWQTLsab32FZJrlcJzl5T0WQ7vMB3eaDWw3HYg27d9i1rfZvDfSomeDVdd6
6861Np1h7I5V3PaVvLbl/NZgYUugqNlf3CS3bZLZNXs5NHs4Nrs6NTu5NNu7
tdi6t4k82/nenRxZl5W828yvzyhwYFHw5eeWX9FfPaobcWP21tuzd93//9t7
77iozrT/P398f68nqzCDlAGs2AWloyginWlgL4kmMaQbE1NMUWMBa9So0Rij
xjKAdBA7CqjYS9b0tiabkN3N1pjNlieb8uzu/bvLOWfuOefMgDBM43q/rpev
hMdVnoiH876vz3XdAcs/DVj7WcDmLwN2/DZg3x+0ZX/W1N3SHPtO0/wPskjk
+o9+79OG2leo559QT66hdidnasqGWqitqfVH/x5Aoo8/0f383w8W1on8bai4
TkRmaiOtpvYZNbVPqKm9T03tBmdql2xNrTHNevn1kUxiajbrH3OIqZXm0lE1
PWdqBm6viBFtNaItJtpWMxFT22BCL5utprZKlDWurSbI2qI89GL+recn33x2
muUJqmyPPXRlwUxrZ00yNSZrxNfy0Lw8obP2CNG0o4/Mxr5GismaI1+jzbV7
8tGcfCJr7fQ1KRUpatq4/pB77CwsXyRhbycVczT+/dOHl10zWQsM6be1oJVE
HCVBewJVzEcVj4uC9iiqfJjWQ0ITrfJ+VD0X1dyLau4hjlY3Gx28G9XfhQ7N
QofFPtoxcW3IyYnoVJ7YSiPLQ/5Ll4f8szHlr43JbDDty4boT09Evnds6PUj
Ay9gTaujmlYRXl4eZikjO/m30/G0jfvJIpFV+8jKx2VsSO3NkBffDHnhzRAs
a8TX9oSQ2hvyPC7saPtDXrAQR1uEqyRkcWnI4gOio3GatoLTtJWipq0+SB2t
PnStqGkvi5q24RipjcepplFT23wSF+2mHRr8Cta0taYXn733iXWmF/eOWYU1
7QynaS29d7ZQTTtHNY0ztT0XiaNRTett1TTWUBvpF42/c3nU3/putbbCBUgn
SIyIiAh7r7vsv7y00Q40TQa7QbJocXh7OmjcUkcbR/uOc7Tfkbhjz8/YTdb/
8XuLttLOfe/f9A//E9/5H7pFbkoq+Z1m95eabb/SrP9AU3RDQzTtHNG0B05o
5hzRzKjXTKoNyKsONlWGGcr66Ev755ZE5JYMyikekl08NNsyPLt4RHZxZHZJ
ZFZJVFbJyKzSkdmlo7IPRGeXRWeXx2RXxFBNi8WOllONNS0utyaOOBrRtHj9
QVwJBqJptA4nGI8kUE1LNB1LNB1PNJ1IMjckmU+SmlQ/Hmva/UvnPPRswb3r
Zszaa7TVtDGTzo1hpjb5whhSappGTO0qLaJpydNwXU+++3D2wwsL+if09IS1
/JB79BzwnwV+0+7MH4ckbkLHTRd6Z2iIzjiuz0P6iOUzhu18IOF6Yfy1FfFX
l8VdeSnu8uLYyy/GXHo++uLCUReIpo0692R0y/yYs/Nizzwa1/xwQtODiU0F
SY1zx5y6J/nk7LENd407MTPlxLTxx6dMOD4x/XhexnFj1nF99vHsnOMZ+hMT
jCfH0zssRk9sjp98Onrq2cgZ54fMujzg7qth910PfvhGryfe7fXcBwFLPwlY
/VnAK18GvPabgDd/ry39k7b6G82Rv2pO/d2/5Xv/Kz/4vfOz38f/YQ21nn+h
DxnFykflcn7bXSKonxB9/DmC3qRGG2r/HCIMqf11GGdq3DoR3tR+RU3tQ2pq
74xGN8ag68no6lgyp4ZN7QJvaumCqR3NQIepqdVlkY0i1dlqpqYnAcjdBrQL
m5qBmppRMLVXjbStZiKyhk1tvYmY2lpqakzWisykrbZCNDVcS8xoMZM1Wi/k
3Xp2EtY0y/x7sa9tmnf/lSdmWWVN6KzliaZG6uaj0zY9ej/prD1Mi8ma0tfm
5pG6j5aUh5zTPl+bmW/raxNbcjOVuUdo63cA9vcd42AhFQsRSfdf+7CmSdAd
I2Hzsi0VSkF7RBS0B4VtIVITrYY10bCjzeYcbQY6Op06Gos7ThRaaY3M0bLJ
Hv6m9B8aU//ROO7bU2P+eIoMpv26IfpjsuZx6LXDAy/U92uu6328mnTTKirC
LHQn/45S3dZikntcb9GtoSsfVzBT2xOyeE/Ioj0hL+4hsvYC/nFvyAv7xNof
8qJFdLSSkCWluiUHdC+ViY5WoVteqVuBq0pXWB1aVBO6soZoGnE0W00jjsY0
7YigaRuZph0XNa0hbMvJ8Fdp6HFrY/g21k07PHgz1rRl05999t4nXzYt3jdm
9VlB03YpNG2PUtMuc5p2X+BM/O3Jo6KGHvXJ+BL40dRCcfBzeEeG7wWqCAv8
rUlIe8Vur+7xo00fTZhH+yN9p6LbHf0+RX4fIL+3/+1/7Wf/iz+QLBN+ATv2
V/+D32gq/6ix/Fazkw6mrXuPrHlcdFnzdAvWNO2DJ7T3HNPOPKydcjAgvzbQ
XKUzlvc2lPXTHxigLx2YWzo4p4SaWsnw7JIRWNOyS6Nojcw+MDK7bFROeXRO
Ba6YnEpaVbG51bG5NbFU0+L0dbSwptXHKzQtgdO0RHNDItO0vFNJeY1JpJvW
NHry4fGz9hoKlhFlu+/lGdOrM0VNGzPp/BhVTZuK6wotqmnTrol1PXn69WSs
aWmesZYfrnf0KFj6wt6Wtg6kMlopLCrJ3O2OO+64MyTkf3RBwfqkIH3CgEWT
+i0xD3xtRsS2acOq50afmx/bMi/u7KPxZx5OOP1gUnPB6Ka5YxrvTT41e9yp
u1JOzhzfMD31xJS0E5PST+RnNpiyGvTZDTm5DZn6hjTjqfHmpnH5zWMmnk6Y
fCZmakvU9AtDZ12OuPtq73veCn7wRuD8d3s9+0GvJZ8ErPwsYMOXAVt/E7Dz
a63ljyT3WP+t5sTf/E//L35ikEUiH/yb3OXxFX2wfCtvqP1CEX2UTI3bJSKZ
2k8RZJ2IEH2kDTU2pHZLsU5EZmrsMrUPE9B72NSSiKm9RU2NbOkfx23pn0DT
j2xOjZoauVJNZmo51NRykYWZmh7t1oumZqABSCPaRk1ti62pvUxNjW+rFZq5
tpoZvWSmsmYmsraImBp6Pg89l4cW5t16ZtKVJ2diWcPKZnn83ivzZwm+hk1N
lLVb8ybhrzcsa+jRPCJrj4iypvS1+/NI2fhaXrt8baasiKkpc49wgtp1sDEQ
/CM7CPKcFkaXgp978SlJ08YVVc5DlY+hykdtBK1KEXSswzWH9tHuRofu4hxt
Gjo+VRxJE1tpjXrUlIuaslFTxs9Nad83kR2PtxqJpv3mZNznDaM+Pj7iHapp
57Gm1TJNC6+sCCspD91Dx9NY7nGDhTTUVu8PKWJDanuJqS2RZG0vrX2kFu0P
WUQdbXExczSiaS8d0C2lmrasXLe8gjpapa6wSldUTR2tJnSVqGlrqKatrQ9d
d4gU0bTDYeuPkNpwlGjaK8cETdvMa9opQdNeaya1/TSp18+Ev3508Kt7x6xZ
Nn0hVbYl1dGv2OYeeU2T5R4tWNN2BC/G34Zu3LjhOVHD7ry5whOQrijygVW0
XQr+vpmRkFhU1MNe1vFnW0f7ji7N/gvnaF+Si9LI5pB3/+v/1v/5X/7J/9y/
/Jv/6d9AEo+a2j9ryv+g2fcVGUzb8rGoaVc0z5zXzj+teeik5r4T2ruOaqcd
0k6s65VXHWKqDDNW9DGU99eXRegPDGKmllM6LKd0eE7piJwDkbSicspG5pTj
GpVTMSqnMjoXV1UMqepYfQ0tq6bFUU2LNxyidTjeeCSealqC6ViC6XiCqGmk
RE1LysfVnJR/evTEM6SmHBs/+7WJgrKtnzGjJmvyeUHTplwcM+USqamXaV3B
lTztqlicpj1QOGdaodET1vIjyD16HmxXLdsAiZ9d0p8OO2hyyvc1dsbFjuIl
g2NLmRh3BgfdGRx4Z3AvbWREQOSAgKj+AVH9wtOjwtNHhKcP752Ga1if9KF9
0ob0JTW4X9qgfukD+2f0H3HX0BF3D4qcMyB9Y2TS4t4Zr4dPPBQ2563gB24E
znu31zMf9Fr0Sa/CmwEvfxGw5Svtjt9p9/1RW/YXbd23JPfY9E//8//yv/YT
WSTy6X/J8+T3qOc3Kg21HnZ2ifCm1o8OqdGG2k8DbW5S+xttqCnXiVgvUxtl
a2qsp0bTj9clU0tB51PEntoEIf14PB0dw6aWgQ5lElOrzSKmVkVNrYyaWgk1
tX3U1N6kprZTaWq0rWYNQIpttTVSAFKSNbNgaoKsiZ01TtbYwNqtp7GyzRKU
bd69N+dPk2Rt02P333xsGmuuUVnLk8uaYGp5gqlJsjZXkrU8umzkNnxtXP9+
siwBXOPY1bCHSXcLd7FT6KDAAa/d1WrjaHOFjY41oqMdnIPqZ6NDd4t9tJmi
o02xcbRGM2qkU2nE0bL+05T+E93x+F1j8jeNo39/Stgf8uGxEW8fGXLl8MBz
oqbVV4VXVYaVVpAtIrsOhG4v0b1aTO65ftlCrrpm0cfle0OWMVnbG7KY1T5a
+8WyhCwpDllSEvISdrRS3VKqacTRynUrKgRHk2naalHT1vKadih0Pda0w2Eb
lJp2gmlamI2mUVPbTk3t9dPhO86QeuNs7524jg/etj2jkCnbetOS2ujNWNOo
qe3lGmr7aTfNIlZxpH8MW8vvOe8eHhXC7Iaw1xuPWgHqsQg7IZMD+eaaLOso
3o8mONrv6UhaKyKbtD9Bfu8jv7f/Q1tpP/qf/d6/UUw8Vv9Zc+D3mr1faV7/
XLP5E8269zWFZDZN++wF7RNnNA83auY2aGcf004/rJ1MGmpB5qpQU2VvY0U/
Q/kAQ9lAampDcg8MzT0wLLdseG7ZiJyySFLlUbm4KkbmVozKrRyVWxVNqjpG
j4s4GilDXazhYBypelrM0ZimYUcTNc18IoFpWt4pWo3U0QRNS2KaNvEsqUkt
oyefGz3txPg52ycWLCfKds/rk2bWZdlo2mWqaVdUNG1OmQmbWoRnrOWHvxee
jHQGzp5gLjtoahVpscXSDgpFmP2xFp4mUKsJ8u8fGRKjD5lbolnz64BNrdrt
v9Xu+YO29M/a6luaw99pTv6DPDGu/Oj39s9+H/2HPE9+a51Q+4WiocY0TblL
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
Ft5HlK1pyO4rfUqC/yesrq7Oo8wIco+eA3vJYQEA/g+lOyxB6hjssdY/uNfi
ov+R1ob8QRxJa0V+v6ZL+PlWGks8Nv3T/8Tf/A9/q6n9i6b8jxrL7zS7WzWv
kW6adu372sK3tUuua567pH3qnHbeGe1DTdr7TmrvPq6dfkQ7uT4gvy4wv1aX
VxNuru5jqupnrBxgqBhoqBhkqBhsqBhiqBiqrximrxiurxxBqiqSaFp1FNW0
kYaaUYZaXNGGOloHY0jVxxhxYU07HCtqWpzpaJzpWBzRtBOk8hri807GU01L
yG9MyG9KmIiLaBqpSWcSJ51NpJqWNPkcrfOkplxI4jVtKq7LpGY0pc6qz5q7
cQZTtnt3TuI17f5XZvTyjLX80O73UtjrFn5qOW6x4Z/mFSbOnjNhQb3M5n67
TvmThhry+4o+am6RM6Jf/Ki+8pE11OybmnWXiO3WR2k/PxlSY+tEpCE11lCT
Fj+KpvYBNbW3R1tN7dI4dCEFnRuPzo5Hp1NRU6q4USSdbBQ5QpeKWE0ti5pa
NrdURAxA7qYBSMHU9Og1A9pmoKNqBrGtZhRMTWirmUhbTQpAFioykC8xUzNR
WTOjF8yCqbG2mrWzRppr2NSWPPYQMTVJ1gRfM6PHaBFZU/M1B2FIG18zi74m
KFuLEXKPHoEUq2Zjax712tzVsFPomWOKDlNHOyplHdnakClCH82mlWYgrbRm
mnhsponHppTvmsb+pXH0H+iax88boj+hmnaDzqYxTTtZ2/toTXhddXhllTCe
xnKPr5XqXi3RbaK7RLCprbHoVltCVlkEU1uBy0JqebFYJTpSpboVuA4QRyvE
Va4rqiC1spLUqirqaLaats6+pr1CNW3TsbDNx0ltoaaGNW1rQ/g2qmmvnRI1
rclG03biwpp21hp6fJNq2h6mabT2XRRq/yVcfSyNQ3aVJG/caF6Gfe3BaQ9J
X3Xu/kIQYKtQ3f1ZAHLwM0p6yQFNaxP2HtUvzG+r5X/EuCO5KO0z2kr7APm9
81+/t/7tf+Un//M/+J/53v/UP/yPf0eur635i6bsD5r9v9Xs/FKz7TPNK1TT
it7WvnRd8/xl7dPntY+f1T7crL1fzD1OPaSdeBCbWnBebWheTW9zdV9TVX9s
asbKgcbKQYbKwYbKIYbKYbj0lcMNVSMMVZGGalxRpGpGkqqlplYXbcR1EBdz
NEnTYk1HYk1HccWZu0zTpl4hxUKPM5pTZx8wzH1lBvY17GhY2TxnLX83OUT1
bRy02LxF0ySE9bMREb1D/TZs131NzoXIzqLvyZCsdLGjsqHm8Bo16cLrfw0U
TW2oOKQm288fyQ2pMVMbZTW19x2YWio1tQno1ASSfiQbRdJpTy2DmFod11Mr
Z6aWg4pzqKnlUlPLRbty0Rt6tEOPXsempiemthXLmoHIGjO1jdTUmKwxU1vN
ydoKE1puEmRNaKuZ0GITkTXJ1CRZs4lBmm8+MXXTvPvRk3mkmKwRXzMTU5vH
m5oZPWy2ypoyCVmgWDNCfM1M6h5ac8zM15S5R+/6KvUx7G0u8nnY0yY4WDd7
ZNExrpXWwOKO+dTRaCtNSjw2k8Tj/zWn/dBEVvGTwTS6P+Q3dBv/Jyei3j8+
nIUeL9T3P3Ow76m63sdqwuurw6urwsoqQtla/jcOiA01Mfq4TjA1HTY1EoC0
iFUcsgJXiY4UdbTCA7TKdEW4ygVHW0UcjWia4Gg1oWtrSQmORjVtPa7dwYtx
rQl8DNfT2rueDpj1TK9Zc7TZcwKy5/TKuicwMzcgjlSvOL1UgXEGoeINAQkG
beL9Qbn39zLcH2C6X2Ne1GvuooCCxQEFW4Oe2xb0PK7q0PU1oetFU9tPNc2C
Ne0SCT0W47rSp3jV4BeZpnmUGUH02pORPaPgldUx7BhqxsyQC609Ppdaacjv
xn/8rtHEY8sPJPF48u/+R7/T1Iv7Q/b9RrPzC822m1jTNGvf1xBNe0v7whXt
Mxe181u0j5zWFjRq72nQ3kVzj5PrAyYeDMqv0+XVhplr+piq+5mq+5uqIoxV
A41Vg41VQwxVQw1Vw2gNN1SPIJpWgyuKVO1IUnUjjXWjjAdHEU2rJ2U6FEPq
cAxxNEHTYqmmxZlPxOXhaoijmhaf30iLOJpS0xIntSROxnUucfL5RFHTkqZc
pCVoWhIpQdPEukbr+uiZZ8bPKTNiTUufneAJ42kIrnf0LfA3Gr7F5nWaJsFS
kfjvSN9Q/+17A7iGmmRq7Wmo9SUNNWHrozSkNohGHxX7+a3Rx0hhSO2LkST6
SEwthpjah5KpJSlMLUVuaidkppZp7akRU8smplaCTS2HBCD35KI3qantFE1N
aqttpaa22SCYmrWtZpSbWiGTNamtZiIlkzVZZ02MQd58kpragjyrrBFf40yN
yRrfWVONQRYodkISXzOTsvpaXsqAvpB79Ez4zUXd5/sC87WQwNA5I4oaptjE
HZtMqEmaShMTj80T/tU0/u9NZDDtz41JZM3jydjPG0Z9cjzqPRZ6PDzw/CFB
047X9j5UE15TFc7G0/bSfY87DoRKDbWNxbqXi3XrinVrqaytsuhW4irWFUlV
oivERR2t6AAVtDLdynLdygpSq6imra7CFbrm9eDndgQ/X9Tr4Zn+mbN6TcgK
GDXKv090QHjoL/yk64YxbL9TgUghR/v3REnboqSNwQz2W7DfrrefX3hP/8Sg
fgm9BuTp4vMCkx4KNi8LfIgtu2aBEHf/4QtA7tFbkM6l4d3VMeyx1ie415R7
eu5r+YXQSvvZ/8KP/mf/RRKPbDDt4DfkYuvS32v2/kbspn2iWfeBpugd7VKs
aVeJpj1xTvvoGe0DYu5xxhGySGRSfa+JB4Pz60Lzanuba/qaa7CpDTBVR5iq
BxmrBxurhxirhhqrcQ0zVg831IzAZayJNNbiijLW4RppPDiSaFo9K6xp0abD
0VTTYsy4jsaYj8WSOh5rZo5GNS3fqmnxVNMSJp5OmHgmYRKuswmCpp2TNC1x
yoVETtOSpl5KEjUtSVXTprN6azQ2NX9/f09Yyw+5R5+ED3jzQyjeiDD+nxDy
a2EJrRR9ZA01B7tE+pJdIjZbH6X9/IPR34aI0cdhtjepsSE1ZmrikNqnMehj
amrvJaB3OFO7Sk2NDKlx6cdGbGoT0Ik0amrp1NQy5KZWxpnaPt7UuLbadr2N
qW0yyE1trVLWjEJnbZkJLbU1NSJrJhtT42TtypMzLI/fQ5KQCyRTMxNTe9xs
01njfY0119r2NbNgaqKvtZgmKHOPcI2jR3Fbm4u89CxICX7UkGnZgPCNKS0s
7tgkTaVxicfm1P9tSvl709hvm5L/1DiarnmMvXli1MdM01g37dCAs/V9Gw/2
PlHb+7A0nlYu5B6lhhrZJVJCtj6uZ6ZWrFtTrFtdrFtFa2WJUEWlpFYeoFVG
q1y3alvQQlzzAqbMDBw/0q/vSG2Y5GLMwphJsVW97nrZ4PcGS6KHPzf2+XiO
qUH02utofwzAc77M3ALzNfxkSBitXbr3TpZ4bGSDaWx/yJ80JV8TTXvjSy3W
tE1U01a+q132S+2L1zTPXtI+eV772FntQ83auWLukTTUDgVMrA+aeFCXXxdG
TK0Wm1p/c80AU81AbGqm6sEmbGq4aobRGm6sHUEr0lgXSTTtYBTRtHpWo0yH
aBFNizYfiSaORjUt7zitE7H5DbH5J+NInYqb2BjnLE0TTS1p2rWk6ddER6Oa
NuOt0fMXzr1x44a7/wDhekffhw94e+/pkzAnGxhY9FR/xYSatEtExzXURFP7
D9v6KF6jZrP1UTS1vwwTh9TsrxPBpvZRLPqAmRq9TO2tMega66mNtc6pnaE9
tUbWU0tDR9PpfWoZqJ711DKJqVVmiaaWTUytOAftz0F7qanttmNqr4qm9gon
a8zU+Gm1lUZqakaagRRNzaatZrIZWOM6a6KpmdACXGb0JC0ma/Z87ZH2+JqZ
1Fwz72thQZB79Bra3Fzke50IbBNYdkI1fZ6PtjTpUXMuas62Jh6byWCasD+k
Mel3p+K/PBl7s0HQNBp6HMQ0rQlrWp2gaZWVYaXlZC3/Hr6hVkqjj9jUSnTr
S0hbTTC1ElKrWGFBo4626tWghS8FPDBNkzY9ZGyUJlzqjjEjw5+zJwy83y7S
BcduB3KP3ovjGAA0IxhSSCks1O/exXce/xsZTKv9RlPxR03x15o9WNO+0G6l
ocd1H2iJpt3QLrquXXhZu+CCdl6L9uHT2vtZ7vEoWSQy5XDA5EO9JtYHT6wP
zT8YnlfXJ6+2n7m2v7l2gLl2oKlmkKlmsKlmiKlmqKl2GK3huIx1I2hFmg5G
karHNdJ0aKSoaaNMR5imRZuPYU2LyTsek3eClEzTSDXFT2qmdTp+0hlSk88m
kGpJmHwuYQou7GiCpiVOuZg49SJ1tEuJUy8nTsN1JUmoq0nTcV0T63rSDFxU
05IfCfWQA2Tf+yYLqOIbAW9hfi1EW7Q4mJtQ66Uwtd62u0Tofv4fI9S3PrIh
tT8NV7nz+gs6pCYsfsSmFieaWiK6kcSZ2jh0YRxNP463ph8b0mx6aqqmdkDN
1Pi22nY6rWYdVbM1NWtbzUjbakZiakWcrC2zI2svmJTbRQRTe9pEZO0pO7Km
noQUfU1d1sykOF+7OzYKv1vyf6xwjaPnY29zka+mj6S3mtBeIfcNX7wp/mxz
+s/NE/7VLOwP+YZoWiLWtC9OxmBN++hEJO2mDRU1rV/zwT4NdWSLyMFqcsl1
WTkZT9tbFrq7jDbUDui2luq2lOo28aZWoltXoltboluDq1S3ekvQc49opk4L
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
sMv/D+c0+6E=
    "], {{0, 385.}, {583., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{583., 385.},
  PlotRange->{{0, 583.}, {0, 385.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.865824522430752*^9, 3.865824528153812*^9}, 
   3.865824584395953*^9, 3.8658255011524363`*^9, 3.8660236929486017`*^9, 
   3.866023904810606*^9, 3.866023975680169*^9, 3.866024127870867*^9, 
   3.866078349577091*^9, {3.87132793374782*^9, 3.8713280059646893`*^9}, 
   3.871329027898033*^9},
 CellLabel->"Out[76]=",
 CellID->1580209955,ExpressionUUID->"3ebd3a2c-80b8-42b1-949c-6c845ae1f3cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"f577a211-e8f4-44e7-8541-46c8203dacf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"dbde82aa-8a96-4ab3-ac8b-19665cab81e0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3489ee87-e8b8-4f10-8e5f-279885aa1691"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"cf30608d-730f-4473-bdac-1f55775e3145"],

Cell["Christopher Stover", "Text",
 TaggingRules->{},
 CellID->1650905194,ExpressionUUID->"29cc0519-10d1-413b-923a-0585c1359a0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0933e5ad-f6f0-45f8-b378-2c588a5ede75"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"ecd9b1ef-217a-427d-bcf4-8d3337ea369f"],

Cell["https://github.com/stoverc/Trigonometry", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.865821618505418*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"d1c9b838-59b5-49f2-86b6-e6108bf80d2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4d630871-3e4d-4a92-a7f1-53e71013f325"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"e4391eb2-1b15-41f4-a4d4-0c6033c9ac5b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"246db416-2a21-4db0-8e76-0ba97f6ffeab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "69a03f29-0381-47ea-89c7-b19d9c6385e2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"c8c0e532-5e3b-4220-8a60-cc4d621682bf"],

Cell["math", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750045082458*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"b67d9a9b-8499-46f3-8fa7-7f58d0ca78e9"],

Cell["trigonometry", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750047625003*^9}, {
  3.870043528852599*^9, 3.87004352889115*^9}},
 CellID->518379950,ExpressionUUID->"7ae65d84-229b-4742-9c26-5f9cb30099af"],

Cell["trig", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750047625003*^9}, {
  3.8700435347149343`*^9, 3.8700435361789627`*^9}, {3.870048560614216*^9, 
  3.870048560616562*^9}},
 CellID->2042711091,ExpressionUUID->"762a3af4-19c6-4443-a67a-5b2396a6b3d0"],

Cell["right triangle", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750047625003*^9}, {
  3.8700435347149343`*^9, 3.8700435361789627`*^9}, {3.870048561085124*^9, 
  3.8700485633679543`*^9}},
 CellID->1896784787,ExpressionUUID->"ca7148e9-dbda-41df-9e54-5331d5d3cfd3"],

Cell["right triangle trigonometry", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750047625003*^9}, {
  3.8700435347149343`*^9, 3.8700435361789627`*^9}, {3.870048561085124*^9, 
  3.870048566891782*^9}},
 CellID->1121272522,ExpressionUUID->"a88c5217-6585-4a90-9712-87997d016e94"],

Cell["circle", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.8687500486412687`*^9}},
 CellID->1506028617,ExpressionUUID->"e85145ea-29d1-4191-acb3-1150fcad14f0"],

Cell["hyperbola", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750050081306*^9}},
 CellID->1321097069,ExpressionUUID->"b19c4e26-c6ef-4a9e-a9de-edc76454a902"],

Cell["parabola", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.86875005223245*^9}},
 CellID->1566778823,ExpressionUUID->"808bafa5-d7c8-4fed-b3be-8761a294e542"],

Cell["conic", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750053457713*^9}},
 CellID->1376197616,ExpressionUUID->"91d5b51c-f4a3-44df-bf6c-523780d093c3"],

Cell["sine", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750059037973*^9}},
 CellID->2020128260,ExpressionUUID->"f4cd38e8-30e6-4a6c-8a12-5d74605cd63c"],

Cell["cosine", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750060601059*^9}},
 CellID->188937640,ExpressionUUID->"2e756233-acca-4c20-8577-4cfd8c7a978a"],

Cell["tangent", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750062447008*^9}},
 CellID->1107846559,ExpressionUUID->"c6a9bb3e-9861-4123-9fb0-e3a84484fd61"],

Cell["secant", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750064053658*^9}},
 CellID->1051818055,ExpressionUUID->"4100cd0f-fad7-4c1b-addc-297291381658"],

Cell["cosecant", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.86875006533675*^9}},
 CellID->763550837,ExpressionUUID->"743f8852-5e01-4506-b28d-6965fea103f7"],

Cell["cotangent", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750067096836*^9}},
 CellID->555384476,ExpressionUUID->"0bdcae81-b724-48e3-bde9-58aaa070f349"],

Cell["chord", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.8687500688147717`*^9}},
 CellID->1346004057,ExpressionUUID->"2a70c1bd-b956-4498-ba8d-ae89129ea77b"],

Cell["unit circle", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750043704874*^9, 3.868750070693778*^9}},
 CellID->126516085,ExpressionUUID->"08e9801a-050a-4d4b-8fcd-b6e85347cce5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"d7b9e9e3-4e95-4911-804c-8cbbf33a10b2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Symbolic & Numeric Computation", {
             False, "Symbolic & Numeric Computation"}], "\" \"", 
            "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Higher Mathematical Computation", {
             False, "Higher Mathematical Computation"}], "\" \"", 
            "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9EKwjAMFHG6ifgn+4gxFQbCxuIPdF3mil1bmvShf2+\
HIPqUI3eXu1R5CRlw1Aj7NrALXMKhnlG+\
cJw2tLsrSpusYVyIiiqwXQQrWULeeevQc4RjLRif1iuk5G0dK2to2n686+\
yDRsqvo2IxJJTdhCb8EsUFNf4yawGrw2L+A8+NYfTOJ+\
2aAEVlIoSBMPU79Ug2eImP6NIjnZDp5Bu0Gkuz"},
 CellChangeTimes->{{3.868750090510426*^9, 3.868750094959179*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->2089153394,ExpressionUUID->"80a0e021-c1f6-466f-9f3a-98386ba92dd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "86d4120d-7c28-467c-a8ba-0c3095cad590"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"3ccb20fd-30c3-48c2-8398-3ae476e0e7f4"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"9abcdb8b-58e8-49fc-b535-78c871eeb21a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f65d6674-71fe-4def-aa1c-a11d7f83c642"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->53755805,ExpressionUUID->"0f9c18d6-918b-4fc4-bb90-164ebf9cacbe"],

Cell["Source, reference or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"9ca441df-93e9-469d-8b03-7aa5a11136f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "564a19ac-548d-464e-9248-139c2ecb91b1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"f0706f31-1e9a-43ea-8dee-8ec3327bb19c"],

Cell[TextData[ButtonBox["Wikipedia\[Dash]Versine",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://en.wikipedia.org/wiki/Versine"], None},
 ButtonNote->"https://en.wikipedia.org/wiki/Versine"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750131923065*^9, 3.868750139274379*^9}, {
  3.868750273702074*^9, 3.868750273704997*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"873dc7cd-d111-458a-98c4-a71ca25bd6fe"],

Cell[TextData[ButtonBox["Wikipedia\[Dash]Exsecant",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://en.wikipedia.org/wiki/Exsecant"], None},
 ButtonNote->"https://en.wikipedia.org/wiki/Exsecant"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750131923065*^9, 3.868750148578631*^9}, {
  3.8687502633512497`*^9, 3.868750263354254*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->1393561571,ExpressionUUID->"0973b39c-38a4-4ea3-bdb7-97e4d9675774"],

Cell[TextData[ButtonBox["Wikipedia\[Dash]Trigonometric functions: History",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://en.wikipedia.org/wiki/Trigonometric_functions#History"], None},
 ButtonNote->
  "https://en.wikipedia.org/wiki/Trigonometric_functions#History"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750131923065*^9, 3.868750154138587*^9}, {
  3.868750196012432*^9, 3.868750231451075*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->875919346,ExpressionUUID->"fe2cff41-6ba9-406d-806a-8d8bfc3f8f19"],

Cell[TextData[ButtonBox["Wikipedia\[Dash]Trigonometry: Other trigonometric \
functions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://en.wikipedia.org/wiki/Trigonometry#Other_trigonometric_\
functions"], None},
 ButtonNote->
  "https://en.wikipedia.org/wiki/Trigonometry#Other_trigonometric_functions"]]\
, "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.868750131923065*^9, 3.868750154138587*^9}, {
  3.868750196012432*^9, 3.868750252379253*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->1653024025,ExpressionUUID->"8b7f4afd-6e9a-4741-ae19-63109ae00355"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "428a0e54-acb9-474d-bba2-677931e1257c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"54df644a-e15b-4a0d-8df3-7ac40d98e044"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "993040be-a1e9-4bbe-9bac-278f80a2694d"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"4f443b85-699d-4753-bdf8-0cff6c60c3ee"],

Cell["13+", "Text",
 TaggingRules->{},
 CellID->1274876318,ExpressionUUID->"769c319b-2c7e-4110-a09f-bc0333c73476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1cc2122e-0c05-4c5f-9437-c2533a72bab1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"8d23b536-5929-489a-b93a-5afd10b9726b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN2KwkAMhWFbtcLiE/\
gKfQjpKggrFbOL3k7b1B12OjNMMui8vVFo8S7JOfnysylKmAEngzCvI/vIJSyqP2z/\
seszyr81MSzO2nbuRjA/qLaGC+S/Vt+lcc840GjrPyg/\
RQFN9jGYlEz6R8hUfMFGZHEMzmPgBOvKDV6xbrTRnGopSmKvkEiGypK1Z+3si/0+\
nYptp1k1Es12yhBOwvILDb4rz0udiYOlKithtbeMwQexPMGw3NgEsSGUj3yekFwMLf4kL486qlZID5\
UKaxo="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->1043464508,ExpressionUUID->"859dc02f-0795-4b5a-9d8e-7a04b434b97a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c516fff4-e3c5-47f3-9fe8-b20678c18b90"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"3b0eb509-cd09-41ec-a215-07034a0136b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->1156524554,ExpressionUUID->"9cfdceb4-d616-4ad3-ac78-841fd13a27b6"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b67778de-e59c-46d3-98f7-b9cbacab2690"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"83f2aee7-12fe-4956-9f7b-cf7c1b208f3d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdkdtqwzAMhmFrc4BtD7H7PESWZpAxaKgGu3YclZg6trHlQt5+ztY46a70S7/\
5dHCZFbAHmiRCcvRkPBWQVgPyC/bn1O0+hSNIAZ0TWsHzN3b1lUnPaE6zN0Z8+\
NAdJMCtMARJeFC2DeTguwtahTJIPmDvJfahU0M4uoV7fnC7UzBW/iKiE7l/Mdbv+\
IuM7r8x79OVfZv1FjfsZeCNjO66c1QFZK3VBi1N8Frp0YQ+\
nZCCprVrra7CajWimg98NHPNzdDtIVxW94JYF9T+nUmH0cgPKHHrzL+kpR+\
Vqx4LeGkUoTU2PPndOC/VFM7iMDR7OqHT3nL8mkxYumU8kH4AghGtUQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->833690081,ExpressionUUID->"531c831c-600c-44a9-a449-cc26ed22df91"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "38abcd14-02bb-4045-82fc-0335c4d61d87"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"bd8d6af4-4e60-4da9-8a2a-723e0200ab04"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->1645878339,ExpressionUUID->"9815982c-41a8-4387-b808-9a98e30ac356"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2673fbe6-07a0-46b3-91a0-f44d4a9b469d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"45199d32-9667-43f2-9503-41165de10523"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Local files\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VE1uUzEQpm3SJk1VNrBhZSGWhAOwqZrXFiKlahXnAu7zOLHq53nyT9vHlkNwGY4Al0\
AsEWdg7CQvKSp4Y3v8efzNzDc+7Q15l4fGAN+/iqGOYcgPigWUtyDVM9+ZaE+\
W7jhA5dXOcq92fWcaDdB+b4r3aZvNO743FfcjfABPtsEMqtqIAGRQnSWEvzzTvjToowM/\
wVKYC20I3fWdAowhDweEPhNBqH3fu3Ciyrd3l8f8826xQPTAwkJ7hnXQaJlWrMHoWC1KA4FJ7aAMpm\
ESwTNhG4aK8MAUGoP32s6ZjC5NBoVMMzpm0VXCsOjFHN4f/vjylRUOiLp/yySQV/\
JEqAqlVprWJjFnKlHP4HFVowueSSLOlMPqESKFSGTBicTXMwcpK5IFXL+\
7oq6tD8KYDCPmsmUoHDB4KKGma+/40SU6GFuFM3hoa+EPR6K8nTuMVlIa+x+\
caCZwB8apPH6ftMijnNdL4eb0YPFi4yHbsxYee/j+LY1fGw/H0/QMMZsSv+iLbnvSH1eUQq4/\
wZYq9jklA+TKz88T3z+NASuKs/\
xHMP2zlHVxQ8vOzEVoD3pJBzMxb7XI33AqNyVs7edpga3vD9L9Vegtw9VcjIpRu35ePKcnjj6ikQWS\
jkkD1A7H53fCxFygLMhXhdHlLUkriYOKpImAq/\
I5fz22RltY87qqwYIbxRDQrjuDDyYbnfDDDd8h7127JJnQ8MFWRNSbV1n1Xu097sX/\
RkZlsQtwmuSztWxj7f5lXGb6XOplBboXwnh4qjbLk/RhoImV9VuFHfLjsQ3gakfYnI/+qW14vPFA/\
8nRFDz1bAmzpqaP5zrr/w9MMKBv"},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->540386566,ExpressionUUID->"307c10bb-089e-47e0-a123-8a07803a1c36"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Wolfram account\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VMFuEzEQpW3SJm2UXrjAyeLEgfwAlyrZtBCpVas4iLPrnU1MnPXisZsuJ/4CceJH+\
AT4iYoj4hsYe5NtUlH2kNjjmTfzPG/cb/V4k7tSA9+/9K7wrscPkhnIOaTZE2ycKyRLc+\
RggdlOtc92sTH2Gmi/\
NzbLsI3mHWyNxXJgbgHJdjSBRaGFAzJkjcqFPxsqlNqgt4Dvjc6sWPSlND53WRMbCWhNKAcUMRROZP\
vYOiOPiLBbHfNve8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnIS2Yy8geWGa3NUuXT14d3\
X76zMXz05IqvmMfwayyjQGPTKkjlmbELETNYCFRS5kzwtXefvyJbEWCjYUQb5Q6skA7ZUrlZzFe7Jt\
r4lImKasizjl2ZIkBigXJQHSkQC6qc/BYmVZmi9RacjHDm+\
gPRxM3YEAK3IH1YV14pFNqUVDrKGaTUNiIhcF6FvcPaT1pIlaPslORGSVgbNqtdmWLohZhDfQd9Xcw\
Ek0Jr5J0LY2FEdzeB21oreDgQcj61RDalFrffWFGeww1om8Xvz0nt2Yk9vxB2qnJMnt4jRHvU6jbCz\
x/h+32P0B2HNNTmsUiVx6RZn7RHCzEFrj7Bhmr3ORUO6Qrn1wm2+\
96Z0Hj5CJn2MHRIXNOyMbEe6oNW0OhETOtZ4S859YgUtMZ5fADWGEcBY0W/rnL1nwySQb0+\
To4pTeet0WliaNZIMzSy3dMboX1UbRyY54lWck7SD2KysKlq/mKUa5XDurbLAnKwA++\
cydfTy48fSJV3t+vu8daVNQVYV/KjDXb0jlzG6cRsb/vd+C9DalE+\
A6to2DaWNefmA2N166ekytiN5pnQCP/qU3USHjej/SLHjSb3eDfObmHJN95Lu5+\
X3F8jELvOGJDeFgmTsqBH8io+MX8B9FTnHQ=="},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->568671599,ExpressionUUID->"e7a5f52a-1161-4933-ae59-a977cb5d5efc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"External services\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VF1uEzEQpm2SJm3UFokneLF4AtRcgJcq2aYQqVWqOBdwd2cTK1578dhJl4twF8QR4B\
KIR8QZmPUm2zSC+mHXnhl/8/eN++0eb3JXKOCtsXe5dz1+\
GM0hXkCSPsPGtUSSNEcOMkz3qnO6j42JV0Dng4lZlccg3sP2RKwG5h6QZMdTyHIlHJAgbVQm/\
NWlxFgZ9BZweO/AaqE42KWM6U4TGxEoRTiHdOdSOJG2sH1lRRYw9is1/\
7oXzY1BYG4ukZncSaOZTFlhvGW5iBU4lkgLsVMFSwwgE7pgJiV7YKlRyqyknr0/+vnlG7sRC9Jb+\
OQBHTJnGKyjYrgOi72ZO5efs7T8IM7PGbj4bbgdWaD8KAbLPNJ/\
fYXFRmtyT3EFMw46YZAJqZB3b4yFkU7NlBxtColHAxEvZtZ4nVD2nQ9WFNewBGXTsP5c1JbdUI4bYW\
dSY/TiASHIQyMfI/z4Xq7fDwgnk9INVWAiEukxataazigTM+DyM2y1tMVjoSBZ4/y6wE7fO5MJJ+P/\
JNO5BGqBuKNtY2o91Ip22b6pmNVE4u94VaYNzlPs2KAclyjrAtRxrv/RIBrU+\
9PolBx1PxqVRIaoCA6I0SfDpVBelF4Dm15GSsYL4oVlGUXBJIVhs6Dnr0daSQ2b6MY5aLAD75zRG3L\
z58NdwvCz3dh7vH1rTQ7WFfx4K0catXGgL6YHj0frySypUXoOVjpItrZ13s0dYVX7YSKrnjSvhEL4V\
7cqTTn/RvlM41are/xkpCmp3JJtqE2nrwvu7xDoeehOAGn4YpgWOb0jt2EG/wK9kpCX"},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->1361335243,ExpressionUUID->"355b2fe7-a2b8-41ec-80c3-23baf572f91c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies <+$Path+>, <+Directory+>, or similar\n\
\[FilledSmallSquare] Installs additional paclets or dependencies\n\
\[FilledSmallSquare] Creates, modifies or deletes symbols outside of the \
Publisher`PacletBaseName` context\n\[FilledSmallSquare] Creates or imports \
non-public <+ResourceObject+> content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers", "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"WL system configuration\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyFVM1uEzEQpm3SJm3VXkBInCzErY24I9Sq2bQQKSFRHKnXOuvZxMRrrzzetsuL8DI8Ah\
x4BcQR8QzMepM0rQrkEv/MfPt9M/P5rNHide4LDXx7kPss9y2+\
E80gnoNMnmCtp5BO6l0PKSYb1T7ZxNoo10D7rZG9KbfheAMbI3HTtreAdLY3hjTTwgMdJLUqhLOOwl\
hbzB3gZY8XSLiRNYma5k54Ras61iLQmsB2KLEjvEi2sXHhRBqANqtr/\
n0rmlmLwPxMIbNZmctUwgqbO5aJWINnUjmIvS6YtIBMmILZhOKBJVZre6PM9M3uj89fWOSAaCLLwCG\
RBOOZtrHQDOMZSBIqmRc4xxDct1IliqIvewwDf2YdA3OtnDVpmYvgPWE/CH979Goo/\
Ozo5JiWncDMuqLcUjqqVGnhQkbXoBdaE2EpVSmLiFSCsAyVkIGRYGICXWd/\
zNLlp0IUxdMSi3RiCcvmHpWEZQGG+UQrnIG7GgbktkD4QBW+\
YrE1Hm79vboQnkoz64iAsaaVlckxqRgBUrVjGEw+kpqjkyrZVMl9MafUCyqKPzdyQS4OPcaFTg+\
uFDcTRmoqPd/vWwddk9gxMVgOGe62RTyfOpsbSUPRfOdE0YNr0C4Jv9+\
nq8j9MCV94abKYPT0DiGchyG/j/Dta/n7dYdwMCo/\
Q80bCalyjOqrm2Y3FVPg6hOsjfs2pykBucD5eYrNs9zblETGfxHT7JSNERNa1sYuh9VFo5zqsZiuTM\
ZfcyoqVWuJ81/nLKH2SqhFFVZkF/9RO2qv1ofRIX1t/73VMrLkVZoYsvzB+\
bXQeYAMTnsRUbfn5BlHTXTAFHFxabjnL7tGKwNLigMaTXDt3Htrlu7nz++MEq/\
z5c8eldHijaGzZEVf8L01zfQsDYLLMdm6/\
wz9UzA1ztCcKw9ybbkqQf3BYdWLczJe6FH9QmiEx7pX3ZRvpdV5anCt9S1+\
EGY7cxQblDbPTMHzCT0MLb6/dM24yOjNrfz3BygABGI="},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->670653963,ExpressionUUID->"0d1ad064-7c47-45b7-a857-1a3efc06321c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of <+SystemCredential+>", "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"OS configuration\""},
              "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VF1uGjEQLgkQCIj0oU95svpWRVygqhrBJmmRgogwF3B2x2DhtVceO2Rzgt6gl+\
kR2ktUfax6hs7uwoZEbfyy4/n5PDPfzI46Q97iPtfA27Pgs+CH/\
ChaQbyGRL7C5rVC0rQmHlKUjeouD7A5Dxrofji3m+\
JaqhvYmYvN2N4Dkq63gDTTwgMpZLNy4acXCmNtMTjAGY+\
skWoZnPCKpBY2I9CaYI4o5EJ4IdvYuXIiLSEOKjP/\
0ohW1iIwv1LIbFbEMiVZboNjmYg1eJYoB7HXOUssIBMmZ1aSPzBptbYbZZbvj39+/\
camNlFSkcuMMwTvyYCVQay3gYFeouAPZzxHakLkIAHjldBnH3l/ah1MjLQLuK+7gsdjEa+\
XzgaTUC3dT07k13AH2sny/DmvPftlcVPhlspg9OYRodSXrDxF+\
PG9OL8fEQbz4hlKey4SFTBq1ZbuJBVL4OoB9vhp81hoSLY4v86xOwreptT/+D/FdC+\
AGipuSWwuXIDa0CnIWIhlPRX8HaeeExk7nBeo3oH0CpBt/\
XWa2280jsa1fBKd0Dv9z1YnkaWxAg80nYPLO6FDCVmOxmmkVbwmkh1LKQmmKAuXlnb+\
dmK0MrBLbpaBATcO3luzG1T+msYg3k+\
UnzzLfMg7N85m4HzOe3sF0tLMyklEefh0SV6skVgyK3DKQ7In1lW3nimrxl8mqiKkdSU0wr+\
oqizFJlsdUoN7PA/5YGI8uMyRb1ljd2RyHm5p/oe8PwekPYphkWf0R7gp1+kvhuF6zg=="},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->1686976685,ExpressionUUID->"ba88cd71-ade0-415e-905c-ac077ec9fd4b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via <+ExternalEvaluate+>\n\
\[FilledSmallSquare] Interacts with external libraries\n\[FilledSmallSquare] \
Reads or writes to streams or sockets\n\[FilledSmallSquare] Launches parallel \
kernels, subkernels or GPUs", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"Local system interactions\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUpm3SJm3UbiohWFndlizYIkTVTNMSKaXVOD2AM/MmseKxR3520+\
EibDkIR4BLIJaIM/DGk78iipjN2O/ne3/\
f83mry5vclQr47o13hXddvhdNIZlBmj3DxlAiSZoDBzlmW/U928ZG7BXQfSc28+\
oaxFvYisW8Zx4ASXYwgrxQwgEJskZtwk8uJCbKoLeAQ5MIxUsk6IF2YEXipNGYNbERgVIEt0euF8KJ\
bBdbl1bkAWq7VvPP29HUGATmphKZKSpnJjNWGm9ZIRIFjqXSQuJUyVIDyIQumcnIHlhmlDJzqSdv9r\
9/+sL6D5B4RyZ8StDMWBbffWCJyXOhUwwmd0hqeKA8tVAM7oXywhmL7F4K9va0v9D0awWcvgtey8KQ\
zaWbrv2VHFthJdTYMYgUq6hzK6ssnGHoLIg8CNHQMFxtORReJ1MyKYQVSoFiMwIEha8Y+\
vHiXDld3d4h71wbCwOdmREFXk4N93simU2s8TqlHrevrCiHcA/\
KZuH7dbay7ISmXws7kRqj4zVCkAfWPEb49rX6fq4RDuMqDPU5Fqn0GDVXmvYgFxPg8iNs8GeXEyUgX\
eD8OMP2uXcmF04mTxTTvgAatBjTsTGyHlaKVkWSkZisWMtfcwgMW+L8BxWXYAcV2KIPq3QX/\
6gX9Vbno+iI4nXeG5VGhugPDmiLDhesIMxA3ZeRksmMSGhZTskwSdnYPOj5yUArqWGZ5E0BGmzPO2f\
0cqH4i5Avw5Awea8z5s+fKKXLW7fWFGBdyQ82KqdtvynqYnceb/c/\
i6bx6SlUbE03jqs2NP8Q1hPpp7KeVPNSKIS/zbDWVE+\
QUT7XuEGALj8MBRWWbEOr2ue65H6MQC9UJwakxU9gVBb0lN2G/f8NiuPEKA=="},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->1938037101,ExpressionUUID->"a4c31baa-3d7d-4afe-91dd-7f4e18a1c094"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Other\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9U9ty2jAQbRJMoDCkD33qSzV9p7+QAZO0zCRDxuIHFmsNGmTJowvE/cb2L/\
rY6Td0bcA4velFq72cvZzVpDfmEfelQt5dBF8EP+\
bX8QbTLYrsles8SEeaaO4xd9nF4Z1duk4SFNL7KjH76lmrL1wvgf3UPKMj3WCJeaHAIymyzsGFv5lJ\
lyrjgkW38Bu0WeQ6MSpFwdfkOAMPWdf17i3kdeDlwczdRAgGQkgvjQbFPD57Bo5pRIGCSc2A5D1LyZ\
mtUJk984YJk4YcNXnqsh0tzlUwvwGyW2TaeKaoSIKDldnhRz58NBbnOjNLynbq2r2eQrpdWxO0oKr7\
nyyUD7hDZbP6/LxtPId1G49g11K7+O0ZodbXU3+J8O1rdX6cEUZJlUbqdQJCBhdHjaU/\
z2GNXH7B1vy7PAWF4ojz/db1J8GbHLxM/9FMf4YKPaxI7CxtwMbQq8a+hHXDOn/\
PMa3md8L5g8pT6KAKPXbdFHe842k8beSb+IbQh5+\
NErGhZUGPtHOjux2oAFWqmvp3sZLplmXGspxSE9ck5rWdf5hrJTWeSloUqNFOg/\
dGn9aPR3V1x2vMe0/WFGh9yQetDmjrF0UF6bKrl1v+\
33aIBk2okpamJTYNRr8pD5O9oz2sJx7dg3L4Ny4OluorGhVy7VpEjvlorj3awpJvPYT+\
RJc8rBzSTx0m6EywKS7Lgr70E6QE+QuUZGFu"},
 CellTags->{"CheckboxCell", "Disclosures", "Disclosures-Checkboxes"},
 CellID->1705082458,ExpressionUUID->"7382746a-1118-41c7-88f7-de547cc63d30"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2af16c8b-6084-434f-b562-62fc9381c4ec"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"b3ccbb2d-9c26-426d-98c0-5293c6401580"]
}, Open  ]]
},
WindowSize->{788, 747},
WindowMargins->{{265, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.871652081477974`16.340471312516563*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    True -> StyleBox[
                    "\"TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJxNjMsKwjAQRYkUEfQrurej/oEPXAlKU3EhIlEnbTDplEzq4+\
81xYW7ezn3Hi14kKvngl7IWnA/p5h1wsnGcJDJ2liU4qh7PCzQNVYFjFz8OKWwZ/\
QMHOiBHlbI90ANbEP1bQey2isXHQw7dbUYGApvSqrJYfBvuLTG3qCoMEdll7KTnM//k/\
E0m2WTrOneqRxF2dyXrcM6SHH6ABO1Q+E="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "a9b49e00-7a54-4027-88c9-f80c5fb43db3"]]]]]], Appearance -> 
                   None, BoxID -> "a9b49e00-7a54-4027-88c9-f80c5fb43db3", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.871652081477974`16.340471312516563*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    True -> StyleBox[
                    "\"TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJxNjMsKwjAQRYkUEfQrurej/oEPXAlKU3EhIlEnbTDplEzq4+\
81xYW7ezn3Hi14kKvngl7IWnA/p5h1wsnGcJDJ2liU4qh7PCzQNVYFjFz8OKWwZ/\
QMHOiBHlbI90ANbEP1bQey2isXHQw7dbUYGApvSqrJYfBvuLTG3qCoMEdll7KTnM//k/\
E0m2WTrOneqRxF2dyXrcM6SHH6ABO1Q+E="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "a9b49e00-7a54-4027-88c9-f80c5fb43db3"]]]]]], Appearance -> 
                   None, BoxID -> "a9b49e00-7a54-4027-88c9-f80c5fb43db3", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"193.134753`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"193.134753`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/Trigonometry.wl"], "Hash" -> 
                    "749ed3ef33be66fe02b42877bf43180744a8df63c332524bbe138768f\
5b195a4"|>, <|"File" -> File["Documentation/English/Guides/Trigonometry.nb"], 
                    "Hash" -> 
                    "34dc953f028f1b8ee942dd1ccee9a4623ab211404dee8fa87cff5c3c3\
b85a111"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/Chord.\
nb"], "Hash" -> 
                    "0fb5e9df9ec5c8226f30b4ab74bbe5afabb352119eac460ee44b23ec4\
8a3ecde"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Cohavercosine.nb"], "Hash" -> 
                    "016be5e71f91bed9e14456c5187cb82d9ba20050100e1132a26b9e68b\
3ca06b2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Cohaversine.nb"], "Hash" -> 
                    "616bc007248a7a75fdf1830a05bce5faf02ef723b39c200ff4f52afbf\
10204f7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Covercosine.nb"], "Hash" -> 
                    "ab19713db565019bf1c304b34fe3bf4816598e3f3883e59548251c92a\
eb7b3af"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Coversine.nb"], "Hash" -> 
                    "d1a0fd66591eb2cb20f55c903ddc904274bed77a2339a3a52da43f03a\
517df58"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Excosecant.nb"], "Hash" -> 
                    "d41a5b6bd90f8dfc6b7e60ca564dc2d9bfad864cb626431a3a77acfa2\
1ece3ba"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Exsecant.nb"], "Hash" -> 
                    "64020672b4d2e282db597abb560734f87fd73c37aeaa72fa0b8dbdef9\
dc47f6f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Hacovercosine.nb"], "Hash" -> 
                    "f07826ad7f4daf34da724fa38294534f76dd00b0e47c8fad5dc3c5b1c\
50ea469"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Hacoversine.nb"], "Hash" -> 
                    "2c0b9ac08c4068b2814f5b97aba4c56de8d75007950e0515e9bb2fac2\
8cccdc4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Havercosine.nb"], "Hash" -> 
                    "9626976f5392d9fc900d07c80c76d2fae0b6a9560fe8f53190ca22501\
aa52f4d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseChord.nb"], "Hash" -> 
                    "81236cb86b23c3c32e111caad9f03f98bf08f48449586725802c7ef9b\
a82d2da"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCohavercosine.nb"], "Hash" -> 
                    "5af56f57c76377c79195fb7e8976bd5bc237c7ed02eb9c57755f24d53\
54abb39"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCohaversine.nb"], "Hash" -> 
                    "4062dbef7ca3322e8129bc03abcb606e3e397ccf41b3f36da7ce793e3\
907dd94"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCovercosine.nb"], "Hash" -> 
                    "bb23aedba841f4d44ff910992fe44597fc4887c6e8b1833072de416eb\
b3d9ba4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCoversine.nb"], "Hash" -> 
                    "922a5713890e84f8349e1c3a4c4c204ed1d573d843ff482528ead395d\
38b7cd4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseExcosecant.nb"], "Hash" -> 
                    "9eea7824825794ae5dbbc9f56798cdf31509fa610ab057d072b6c2264\
4c0691d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseExsecant.nb"], "Hash" -> 
                    "a76c01e4d221840aec09bab2249bc014adaac877d4dd384434197461e\
b33ec79"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseHacovercosine.nb"], "Hash" -> 
                    "3fc85472bb3407c5012f32b6f65f0bea749205c1705eedf88cfb93206\
28a31e8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseHacoversine.nb"], "Hash" -> 
                    "11af232141cd42b89c14bd59886705b19acf524e01a9512d700088729\
0ee0925"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseHavercosine.nb"], "Hash" -> 
                    "b7642a666f679dfb2c2767e1c480832d9b90fdf1616541b982729bdf2\
01fb3c0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseVercosine.nb"], "Hash" -> 
                    "ebb800b21fa07f3ff9ec0ab6ebe25bb5e1b0ad6bc1c53937f98ed9d36\
3fa6c5c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseVersine.nb"], "Hash" -> 
                    "71561be4623193a0788722afffd6f91f6d7ade682d42e11f19688d150\
5196326"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Vercosine.nb"], "Hash" -> 
                    "b28731f43f71ecc67d7570c50542a43c53c072f0f3acfde40b6e5d7d5\
b976b81"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Versine.nb"], "Hash" -> 
                    "7026b4c23d2ef589c2992362b25478ff07a3f125bad602fe04c7c8492\
b91ff06"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/Trig Functions and \
Naming Conventions.nb"], "Hash" -> 
                    "ff6e0dfc2f995eb8922eea8d611b74634fcc290ef56c98a93fc9501fd\
b47528d"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style["Files", FontColor -> RGBColor[0.27450980392156865`,
                     0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Trigonometry.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "749ed3ef33be66fe02b42877bf43180744a8df63c332524bbe138768f\
5b195a4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/Trigonometry.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "34dc953f028f1b8ee942dd1ccee9a4623ab211404dee8fa87cff5c3c3\
b85a111", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Chord.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0fb5e9df9ec5c8226f30b4ab74bbe5afabb352119eac460ee44b23ec4\
8a3ecde", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
Cohavercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "016be5e71f91bed9e14456c5187cb82d9ba20050100e1132a26b9e68b\
3ca06b2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Cohaversine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "616bc007248a7a75fdf1830a05bce5faf02ef723b39c200ff4f52afbf\
10204f7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Covercosine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab19713db565019bf1c304b34fe3bf4816598e3f3883e59548251c92a\
eb7b3af", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Coversine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d1a0fd66591eb2cb20f55c903ddc904274bed77a2339a3a52da43f03a\
517df58", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Excosecant.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d41a5b6bd90f8dfc6b7e60ca564dc2d9bfad864cb626431a3a77acfa2\
1ece3ba", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Exsecant.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "64020672b4d2e282db597abb560734f87fd73c37aeaa72fa0b8dbdef9\
dc47f6f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
Hacovercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f07826ad7f4daf34da724fa38294534f76dd00b0e47c8fad5dc3c5b1c\
50ea469", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Hacoversine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2c0b9ac08c4068b2814f5b97aba4c56de8d75007950e0515e9bb2fac2\
8cccdc4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Havercosine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9626976f5392d9fc900d07c80c76d2fae0b6a9560fe8f53190ca22501\
aa52f4d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseChord.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "81236cb86b23c3c32e111caad9f03f98bf08f48449586725802c7ef9b\
a82d2da", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCohavercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5af56f57c76377c79195fb7e8976bd5bc237c7ed02eb9c57755f24d53\
54abb39", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCohaversine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4062dbef7ca3322e8129bc03abcb606e3e397ccf41b3f36da7ce793e3\
907dd94", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCovercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bb23aedba841f4d44ff910992fe44597fc4887c6e8b1833072de416eb\
b3d9ba4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCoversine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "922a5713890e84f8349e1c3a4c4c204ed1d573d843ff482528ead395d\
38b7cd4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseExcosecant.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9eea7824825794ae5dbbc9f56798cdf31509fa610ab057d072b6c2264\
4c0691d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseExsecant.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a76c01e4d221840aec09bab2249bc014adaac877d4dd384434197461e\
b33ec79", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseHacovercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3fc85472bb3407c5012f32b6f65f0bea749205c1705eedf88cfb93206\
28a31e8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["27 total \:203a ", ""], 
                    Style[
                    Superscript["27 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"154.580195`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"154.580195`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"6.896512`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseExsecant.nb\"\
"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/Guides/Trigonometry.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868903`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868903`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Chord.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.373646`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"5.373646`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Cohavercosine.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.509347`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.509347`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Cohaversine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.242788`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.242788`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Covercosine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.328017`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.328017`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Coversine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.304811`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.304811`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Excosecant.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.029171`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.029171`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Exsecant.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.924777`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.924777`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Hacovercosine.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.991442`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.991442`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Hacoversine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.915398`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.915398`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Havercosine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.814119`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.814119`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseChord.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.817783`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"BuildDocumentationNotebook\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.817783`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/\
InverseCohavercosine.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.038557`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.038557`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseCohaversine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.003413`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.003413`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseCovercosine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.848288`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.848288`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseCoversine.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.257665`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.257665`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseExcosecant.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.461475`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.461475`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseExsecant.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.896512`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.896512`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/\
InverseHacovercosine.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.779316`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.779316`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> 
                    False}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseHacoversine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.342333`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.342333`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseHavercosine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.049023`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.049023`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseVercosine.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.005647`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.005647`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseVersine.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.168406`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.168406`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Vercosine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.285998`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.285998`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Versine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"6.704555`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.704555`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/Tutorials/Trig Functions and Naming \
Conventions.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.427721`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.427721`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["26", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["26", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfWuMJNd13s7Oa2ffJJekSEbmeDKOHUUzW++\
HTGl3tneWuyL3wa0haUG2yFv3MdPc7q5WVfXuDiVRsiELQSAisSQEMCAiRgwDMmzAgn45AYQgjx8JE\
P8wEEd0kEARiVgObJjwD4M0HIM5t6r63bPs105vTZ/+\
MdNdj3vPveec73zn3lu3xEx05Ca5cyG4yyMxHz10pRLzsBrymMTFoAKHxUy0cDOQF4i5aO75YhSLw9\
HCFtmGI96iV6OUR5F3zKuVyyTcvcwJ82Y+L2aj0xd3K6RcpFcDVitxefvhxu2zHo+jk1u7VR7x+\
NWgyiurq9H8JVKKeP3smfpZXvY580Acvrrqzd+\
E8nfhmmNbvFwtwcFUwrTg2ejUDVLhHi9xGgdhe51zN0GMeiXz0eKzYZG131z/\
vygLkacWoqULtTiud8PRrEVpuU9e2rwRFm+DCK9eCoNKvFlhN3kU1ELKvaVLmxeKcZlUI+\
901jFw03VoJw+\
l8FKUi7xEdjmLTqZVXKpVqOzxvXpnbius8UYzjm5Uq5yEpAKdP3ctqDTPLF0gEffi3RIXhzravrR5m\
5RqBHomWtqoxUEZVEwbZxeu8ngnYN7RGyGHvo2Lt1sK3SgVtytlXonrHRotFLi0lPr/\
5qVXymSbe8XXOfTYYtZjjbva6p3fKpZ5FB5KPsfPN47AjccLtTCEgl8Cgbl34hL0b4FUL/\
Pi9o4UYf5GcAfqnInObPhRUKrFvPX66MRVsl0piiJNbLjwIaj7yKWQlBOlzkZHku6R5ju/\
8s53v70CBS5dLIZgM7LNcP7msxcKQSkIw8eTz4/OhY8kn3fPhb+UfN4+\
V3ii0eLjXhwWq9crVyrVWty04vTkyQKIDoLdIIwVK9udp48mYiXydOjxeHLmKgm3i5Wo1Yzl/\
8KhwqHO73vLstA09no5M43/dd+e7fTtTifLbvVOrdwgtMTjjZDuQH+\
teHMrn1pe8Y5CORe5ILVS7D2a2fyVmJc3KpUgxRJv9r03f6sFO4KVsy9GYEFnozi4zcOzF3l0Kw6qZ\
6/HO/Dr5aAkoAcuFaFVZ9Mao7NbYXE7qARlHoe7Z/\
1ascTObu1wwIRSwUsKeeWV1kvW1HVtXVmvJnevNDBKijVKDxxb2YImlaStDt16qK2t7Ll62aqrr6u6\
YZv6q97sSrTiLUacBhUWeUsrXvptxTvyQo1U4mK82zQkb7cSk7uXgrAczQLktje2ftXpzA663Ll+\
hbcIhl8rV6KW/kk9d+55LpqXzUF7u6/pgSpH5SGAOh7zTts/\
lQkjJUzwom9ZuuvpX6B6rR5YhXTIvmstHB68shYwnusA4zPeTnBHemtlu7ADSE4lmHZ20bFrNYh+\
IaDAra5zJyH6AK4AbBUjiXKzTS0nRSf2kCJL56332Qxmt4Lqg2sAp6VOSsUKvxFExSzipgqeKcw0rk\
rD7URoQqEUREPThM74gjwBecIQPGEeecI08oQRGns6U/dVAh7Fo3j4Fs+3tL3+\
baFHOrnUnk6uSST0diMo+\
9VrIABn0phfBaluAdDUMXg1SjPJjYfXvGNXKhAASOkiicnGzJo3nxiReCotd+Pwmjcnj8hekf+\
9x57jYYWX2qxr/\
U4JLrtMoh3vvG24nOlc6LrPLUtwRfMNzbFtXxi66ii2YRCHCUunuq6ZmuH7XNUd23KE6auuSYzuGj9\
5MaA1CadJR53drGyXitHO2WdrRcbbrXy94jfk0A1GXVMXiuYI1Xc4dw2NMRUSde4Sw9J04muqaigG4\
9wRxLGpECYFsXzHJKqqdsth9pbjJhcc0JTyG9DD0Vlvt+\
wHpehsYScIWatAivBN7jLhcmpSR9MsoSu+QXxb9oFJBPF93QSRXE6oYSmcG4av6ZwaDoG/\
jHcL9OnBBAp2CDg9hYBf4W2CqRYIwG1VuKrPmctVwzAtaqrQJ76jMdcnmqKYiqooXFV1jWiW73LL8X\
VKFMvXugX7xWEE6xTLArGootgadIBNbFMwoTq6QhTTp9wUBDTLha3pvu5SkE8IQ5gaEb5QFU0xhD26\
WD17i4CZ2qrOfNOCLnGhOqorhq8bgutg445qma7DdaE7js5N1zQczVSpqxHu275ORLdY7uBidQrFVK\
IIZkHVKvc16muKME3qKjoDJ1AMDWyMM9smmq67RCemxogBrgHfVJsJ0+\
kW6lMDCbV5FzqKU4DZNqkMlZi+\
5TNXEeDz1PJtbimUmBb4prQrQZhjGdS3NAvAAQQDEakgmsopdCbplsoZUKpumSwDrMOyAZSYxjWwbt\
90bXA901Js0KFjC2YDCNiEE2Jrgii+w3zGhcuoYQurh/\
oG88LLhPa2K6HYjmYRZguDEQHoBdUbguiO5homSGZbjCmKr3DDpoBXzGQAVoCZ1FQ44Jk7qrlngnWK\
pVHFdwlVHGoo4PKao4Kb+\
bLLiEFNi3GH2SZ4qQtiKKYKCOf70G1Ucyil0Geji9Wzt1wwGde2hKm7YEgCjFxhCnSMQqGfoH6u+\
BZxQakCwN3UVRfMTtPAYQkYP/\
Rwt1jPDCTWlYrsK94F8o6q6RagJsCiLoOJBoipUkJARkUXruMLxQGQMAzXdMAKTUfRqA3W5RMwRfDK\
brkuDiXXXlgPccaEXrOhm3Qb/\
roQcwW4pQOd6TNAVk2Ho5wBtvouNW3bNIVmMFM3DRmfeljZhRHk65QOTAwcElCdEmAHGofedCEGQKg\
GjFAsrnPdtSkVhuoDwFrgIpTbrjyq2Iy5PYxtSOl69h0Ytk44A1UZKpiQYQgImIrragJCNaCIgFANI\
dPijg+BSofIxbihWhz6TcbQHtKdH1q6Ln/\
QNGJCWHJchTsAYzqwMAhM4KMGBEeDM5WZts4cQH0hI5LmcMJ012S649uU9ZBtYxjZescBl3MC4Cbrt\
V2DcJP5PnXBEG3XoUzoqqm4gliqQnzFtMGPNd+iQJAMgyqWq/\
Zw1nPDCdctGrEtqqgcgoGmOoZCOFVAVb6mGdLwVIMwQiiwV2Yw6CrD0A2I/oYFUVYHUmb38Ieh/\
HXPqKAL6pgGdAgQDMA3ADBN6NA9wjKF4kO3Gq6mmFS1FZNzJhyHCt/VIcJpwBpV3iOwD+\
URewQHVSVC0zXVUMGENN9xqWoAirgOYJsi+TxEc+\
D4HGDXNVWN2YqigItoYKRccTVzbNL19lfbMjRiQRIChsYE8CLNtmxwC8NRHF3yD+\
AlQCqBaJqAKK6jgWQ+E5qiCuC2ypj89aVesgEoOBDNNRUYhi3AKSErAPMHsOCaCWyEq75CGBBgiO+\
6q9sQOoCZM93SwVEgf+\
iW7TNDytYpma2aFqQBMkOC7BqkkwoDXi2AXwLeCYvZhAH710DjENyE6lqOw8CFTfima9ao/\
LZndwHvsHUAXV3YwA2pZQPpsBVwBxM0bAAPAnUBW1OEDhYHqAvRH1DGZpKpWL7TI5mzBxWqq58USIM\
AXHXgkcCgIQeBSKBbmq+BvzoC6BzRhQrKBDUqECIUgwI/AXf1oROF0qOfLvcWaasWByEk6Gmqu1wf+\
4yWSYUtXyPlYmV7uRCAPivJ4TZOKSyuAPHWhOuaHPwTYiqH9NtSVUg7LWCVlEpnBCimrkNcQBvgcap\
gvmFDiGBr3smNUim4sylnn5MRuWREeM07ng0aeDukKkfh/mHLsEM21uDRoMpflTPhPEwu25hdqw+\
kRLNQbPIHGr+8173P8d2LtXJ5tzBbmOlxa9p7e5yS7S/MiLno6b1Kf75YLsYAmTN7C58OvNfb+\
HP3kDMdeU0unIl+dq8LN+KgnFwUziSjuM+fH6OAfZW0Z1/fDO6kSmqxyo9uR+GZzNT6a3XS6K/\
96nm4+nQ6hMzZlYoogi3tFmbSqaV2RRbO9L62OcsiL5rZ46JsSL85xiVFlIsyWkTdiKKAwv2nWo+\
BxNFCOi0FMj3UcuqlZE1Fx0G4skYbw81p/\
2X90pxq7qqg3s171Vx4Cmzbm7vKY7JxaM1bAhVtkXCbx4Uz4ICp6rMDR9e8eXRFdMUcuOJcHn3wBol\
3mk146GIxqibzkaCqQlCrxPKiM42jqSmkJ0CHx+XIeuuVp+\
SBjouWvCCMZTVRs56T8lg21QaBveXE5SJjvCInEKKrpBrNXauVSmve0RerjMRcNqUwEyn9zQQEtbha\
i69cXF2tTyF8sr8bqyAs3HSoff6hz5tv3wii1dVkpnmQ23aGu20bDoKos9GJtumTzqV4al+\
lATsEGE3PySmii7xaCnbFfDSfziMvRnPJqce6psrnktkl+C+nzOH/0ebsj5xUvRrUIi6zLDmp+\
mxIqjtFGnVPSzdmjAsL95jNB8E8SkqchXry+Y//rq3UpksswbHd5/ltXsqufPecnIq+\
EZR2t6GclgUb2f90NjlBiCM3E+FJqfBh8judkC58eO+r+\
imoj7v7qmt8BfXXtFFVBAf7s8JVr1SkcsL7VjKzv97XTaUA6rsclNgQ4NAV2KM5CLaRd6RODdLUwJt\
PzLjXAofOWXmZ9gBu9VpdcTy5a6/p/Pl0lU/yfa4w35zVvQDib4cAqazdsEXy+\
atz91qhkSzpiY7UtfSR7np8UyZclyEHKyXrOU4l7W4uNGnz6CyOH84wovEzkyZZsCGXULQtp/\
jWb8jPH58L1eTzk3Ph55LP/z3nHXm+WLkl6+\
5YH9MIf8eTqgtgI7cgHkm8PHxFQKfYfemd7nB6K1kCTeQqD4jgA84ri8NioU8bqyUxK1nZPGAlgwWq\
wSLTYAFpwDg0sLtOxsHrpD5XqJQRvyw9SlMeRKZ7IVNGkevIVGfMiEyITA8uMmVjCvlCpmRM9oAjU1\
+pzmAIlS1Ia0BU4zdiFGLUg4JRzTWjs5AQZTb6YCNUT5GTYeYMnNIF0f2jU2Mo9YEGqcP3BKePWOX6\
IOtzdg8TzH5nI6LJoOGgmi08M26VHul83KVnBXsravR1xnlWZcIkhlNlY+R/\
Ahqtc6ITXpVULoVBecMPbvfrkQOtAs+fcg8fVD8ddR1+nlU5jX463FMS+\
dPy7EF12FGfU8mzKqfRYUd7iih/2p47sI474nNceVblNDruKE/Z5U/\
X8wfVbUd9zjHPqkS3Hewp1PzpeuGguu2ozwHnWZXT6LbDP6WdP00vHlSnHfU5+\
TyrchqddoRdDPKn6iMH1mtH3Eciz6qcRq8depeP/Cl66aD67Kj7rORZldPos6PtgpM/\
bR89qI476j5EeVblNDruKLtE5U/Xxw6q2466T1eeVYluO9guavnT9fGD6raj7mOXZ1VOo9uOtMtg/\
pR94qD67aj7POZZldPot2PZhTN/Sj95UP131H1Q86zKafTfMexSmz+\
Vnzqo3jvqPsF5ViV671C7OOdP5acPqveOuo92nlU5jd478i7n+\
VP4QwfVd0fdZz7PqpxG3x39LQD50/jDB9Z5R3wPQ55VOY3OO+pbMvKn70cOquuO+p6SPKtyGl13LG+\
RyZ/SzxxU/x31PT55VuXB8t+\
5TNGHx7G5Hfw45tWq4Lw0LFZj74RmL8fydbnL73zt3y578lXF2bbiH30hboeH2+H14eD7Agm9t8M7/\
CCjWO/t8O4FW8MhT8sr5ztuaXPYG8nnf5/r/lI40ijrWPK+\
9LvxVV6pNd5WDqXI3wnAfdzbCe4sq8tXg5Av34SvJF7e2ilGy8n+edDWE+k+\
d5t3Oa3FEtz60w5hr9WiOHmZSQTemQIlety4jNGbA11FUNOR+tu+\
QOXaoJq5sCuN2isFcWGm4z0tDQs6IU1l8zYp1UgchO3hr2lGP5OYkdkwowjtaFrtaH5AO4qWgE4kLz\
0Ke5iUunyJ3+EhQtM0m9SHo0DT0xk0NewIsWlqDenvBjWkBifra9vg5NI99yL+5X/+H/\
7mF375vXPR8Xq+KEvoRfta3qnUzeJmosXsJVVw/uFCUK7KqjbvVkMeRfI1YE5/\
HU2bZcq9UbcBfhei+Zd3ilS+3mHxxUpEyvyFPjt8tUSi+\
Hqmun1h483XXs17iaBDNzt6pv8mFrrvNoe6O93Yv7cGRfa6sdHkGt4MsuqHa5hUyAVQ7K1GvjRYcdu\
lwCclj4ZBqQTA1HC3+wh9so6Xi/GOWGqXuE8jhvbL9/\
Kt9nn9av2GejX9eVj9Lnnx6iBeWb9psOqK0fOciHSf99XoU4NVd6Xl5sGq3UnuSd9emLxvcCMZdVq4\
SmK6MxAYtTT7+EYJyGUFAP122/717a/a6Du4tMr4wqBKH3hoK+29s/\
2FvVKp2XUD3vKAtaSyO3BL6rfsV0v0vu6KWl/RKYfC+8Nlmr4ttu39noPiy8yADWt9x+jA93a+\
i3QgDJWrqOU7TyWvnL0WxAnpI8VSLeQv9D2OzKCAiMfZm5xlcUMqtj8yUozqLzZsSA2h71LI+\
eAGmLwpUc4nfDYoVhrTJbPJMDr8vR5mNQzZnQM73eBdEC1CPTvyVbwtuRd0yNH0NbmyXd58komJI02\
WOb/5xRopDRMB03HXdP5j+\
EJaYsEsfB2tsLZo4i2kv7IXOB3qzjLlpIU1wKRFyyt9Mcmc4NTFoLTQWwh5OZvX/8hhC+nwc6M4fL/\
RUup6s1yNd+\
93tBwCTVPaNzDnGYZi9gVbcC1H2ELYmi7YmiWMDTp6n8JX4r2DA9dgSV6bEXclee1G3XwF9RDJ74Ac\
qpmCzbXRuJYhtWESB29pI6K8wjqgypuTtLu3l/YncLYiAkpB95ycs7Vo96NdriVmjcOyjl7kPU3r+\
E2eLBpcRhM7CCbWqub9trFo7lqQrIRrWtcClId2lX+\
7ylTbv0W1Mob6JE6vlUlPFoLq7jL0UlGa0HIcLBdKxaofkJB1G81Mn5w0Dgq1MOSVuF5un5ZDQRZZf\
b9J3MD0p7XljyUtl8c/otX9jlg3Wj3EoNjYO6inIbQp/gbYFm9qvlhZvsbvLBd4qcdc/\
fCK709DFGpN5NkfzadNT1R/z2bvi+bH3kPNqNKYLJeLkS+\
RcrG0653yglpIgW6QSrR8IwyaS7HlRXIpduFk+40v8+L2ThzN3yiRYqV5+cXi7aJ8PXH7JP/\
RSyHEr3SCvW1e/oP35eenzXcEH/GqhEoDbSzPPFRoWT/dWAqQLgHoNYE/2zGBfz+\
aeer5YoVfCDm5Jecui5VsDWrvRQOHOlcUXKuVfR7K1bNR540n5TCt1FnSlpbTyeB4fzZUTAfhX2hMc\
7esWejPciMe16ovFfmdZMxpoIAN4aT3rHq6Kj3J5gZrRpKdBqzWtiR3gO6Iy1V5eDVaXJXTGsnS+\
cFurw/n9xfPs6mQYeZAZu+1ImGw1mbcsWUuZ8D29rkOC/AN3D09J2b6po/\
pbfIM0sfx0ccBLbrVKYezlNTUMgMd3GAG9eC5a7UkqAwDhimS3telLN0uN4wPRY+\
23ATRMIx4duJ4y4nL3sd+QSLNciVYLgWVbR4uS8CAyPiPh6m1/\
eGi6ORWSOTzRNkjjPu0EKhNhEeyoJVC/\
0tAaHjUEkoHmOBejYPqBRImVTRC4UyfobBMbvGEvDAoAgr4Ry13ZZd6wL/\
5q17Nr0dMH3Q2WNDER6gmiZsfZf0zg1l/ptOBUHHVD2Ig6nUzzR4rXIgWUttrJ3GLN3m1RCjvM/\
0qJ484Np6CXF3tXOMqDj+wD35lkH9IrmsklVvJ5F3bY5AP8DNroChAAzkxEn2i73nh1UZbW+/\
vT9hqY0qmVxnDTL80ylnoyUwhlbtSoSFPErKR17wOOhc+SKcOtBCybQ3jwH2fVTXCss2hVDV4C/\
d1yXi/qaeMt0nXh8ChBlFxn2uc6+VvllKr7cT+FG9mogU5DsHDwtFOwGm4xN7X7BlAhsXrHsMoHUO/\
bU+7tgyYHE/u6D7eMpAyuxU0Rw67H/ZvGUIqnOoxXtLvIGCvVj2UxbSXQ1Kt8vBCcFcu/\
8gOpr8WtwL4AtRvKXrsYppZv5r9T8ZYKnHhcF0qby5bejmXGOmg4TorIyPbA5WRcZV6GfMJQ2sUMvB\
KyEySl+Qa/AElud1YVZ+\
WcXmIMnbay1jYSvhzo5TBWXdaztKFOsdpFDUUOUpLO9ICX3P7tpDjOGi2wkjILgVhud+\
s6f4w9YbNJbg/rBMeqm+B0bpLRnurskW9xdfrpwdYqNv+1NDRQsjh6IsvgtYGS/\
e6RnlnOk7tPSLbVs1pOZN6m7OXSFgkPtzXwObBbWHhItDwYLchwumLXJBaKW4I6dWvmIk+\
VseuZK8NIFBxHcRmmuju8RKncSJWx7DwkU1W7Hni4fQe2eYMDqNs+\
dgxr1Yuk3A3WVTX3D5h4WZwRyJrc5R8YYtsp1h7bIuXIbGIefoz3V/\
kqZW2zY4u1IoldpNH0M5oxZtb+\
dTyincUysza7j3aUm3LFjuz7735Wy11dcnhzXxJzEcPNXonravtyrlOib1Fr0YhC4oabZVcyJv5PBR\
6us2cWtpTN9+TCbcDhUDuDn7QMdB+pn6Wl33w52yZ/fxNKH+3s6NmGvOnp+\
SWM6lCgrC9zlRbWSXz0aK0rfab6/8XZSHy1AKYew1wL+\
uG9rD45KXNukleCkHxmxWplGRyw1u6tHmhGJdJNfJOZx0DN12HdqZb2rQ5d1pFy0OePXunPpOQGWpz\
v5wOGtLioF2+e89nPBeu8ngnYN7RGyGHvpULyXpwlQaiLhS4tJT6/170pe1RzU4mI1PsrWKZR+\
kWRoeOn28ckeNs2bxdgkLeiWTPHlK9nMwEyetuBHeSFPLMhh8FpVrMW6+\
PTlwl25WiKNLEhgsfgrqPJCwsNfcjSfdI851feee7316BApeyxRq3edsmI48nnx+dCx9JPu+eC38p+\
bx9rvBEk+DJxbLV65UrFYClrtmkDBNuECaXnnSevgedbKWNrWbcOiPXNTvXU5aFprEfbqDQ0Gi0tHI\
VHB50PDT2eGvtgLbsS0RbppDdljig/\
nKUgoqAPGB3fWVsOHpsZUvuCCVtbHjcnG0ve65etmoa66ajqK75qje7AsC8GHFItFkEHeal31a8Iy/\
USCUuxs2IddTbhV64K7lMNAtQ2d7YRlzL9Nflhg0utpgtXG7pn5bntJtkNHumvP2aHmhwVB4CiAJ9d\
NrsqUyYzh3CPlqW7nr6F6hea+\
fk9EfW2pqc9FvZPR5GPyOnh9Pl8YUdIvfsklPtnZPP95pfhqgBeABwU5QjOOkuSKmWk6ITe+\
ice94XM2hLQx84Azhd32qgvoSlAYAzLQwuDZMTCe+\
FUhANHd474wLGd4zvQ8T3oxjf8xTfR2jsQytXyd1iuVaW+/\
CN1uSeqWC3SHv0zJK17riWqWqj9cvMJ72vrpx9ERA0OhvFcu/Psxd5dCsOqmevxzvw6+\
WgJMBlkm0Hz94gtJQ8TR8Wt4NKUOZxuHt2xN28V7yZr4xNPadXboSBNHLOEonHqZ3Z977+7ZbD+\
l5SeqX70qHP1oqMt1+Z9N7se9/511M9glC/EqPR+LLNhZX7AudL6rpjOa6iPxhgPr8C54ePt/\
9gJRkTbHPXa0HM/SC4tYIZJWaUmFHeh4wS4R7hHuEe4R7h/\
iDAfXMwqzOtaCq1MfTVUrx3PPM3mTfIlfF9z6l7M78Clzfynyf3duqNmTVvTgIjXN+\
AqVB7eeFPFn769+\
cghUoxrAW4xjmNPfPJHqllbT9z9cJOEDLMMZF05It0mOu6rVuGhaQDSQeSDiQdmGMi3CPcI9wj3E8p\
3Ocvx3z/6d88+dYbj56fSI75lX3NMQO5J03z3bCYayL5yBH5sNZNxdUNG8kHkg8kH0g+\
MNdEuEe4R7hHuJ9SuM9frvnZwpsXvrX05GRyzS9NINfETBOpRx6ph2ZotuMg9UDqgdQDqQdmmgj3CP\
cI9wj3Uwr3+cs0/+KLP37trQ8+\
NhWZJs5pIvXILfXQNUdRcZAbqQdSD6QemGki3CPcI9wj3E8r3Ocv0/yj5c98/\
93rT0wm09zd90wT80wkHrkkHorhqCoSDyQeSDyQeGCeiXCPcI9wj3A/pXCfvzzz6bf/+\
pVlZ0J55uv7mWdu3qVBy5a9mGgi88gR81A0V7WReSDzQOaBzAMTTYR7hHuEe4T7aYX7/CWar73/\
e4d+/PEJLZ29u7+JJqaZyDvyyDvMdVczbBsXUiHvQN6BvAPTTIR7hHuEe4T7aYX7/KWZ7it/+\
cMPfvD4FOw7e5lQfEYTyUeOyYerGsaIL/9F8oHkA8nHwSQfmGsi3CPcI9wj3E8F3Ocv1/zbX3/5W8+\
8P6Fcc193A8pyTcw0kXrkknqopu7iRoRIPZB6IPXATBPhHuEe4R7hflrhPn+Z5neee/fxL/\
zudGSaOKeJ1CO31MNRDVV1kXog9UDqgdQDM02Ee4R7hHuE+ymF+/xlmq+b54vf25hQpvnl/\
cw0r1TkjCYv7AQhw1QTuUf+uIdtOzpyD+QeyD2Qe2CqiXCPcI9wj3A/pXCfv1TzE3+2/\
Oc7mxNKNb8+M4lcM9jB6U0kIXklIda6ojumiftFIAlBEoIkBHNOhHuEe4R7hPtphfv85Zy/vXz3y1/\
6+QntQvtrE8w5MeNECpJLCqLohorD3khBkIIgBcGME+Ee4R7hHuF+WuE+fxmn+\
MabP3hjdroyTpzjRAqSUwpirjuGozm4ewRSEKQgSEEw40S4R7hHuEe4n1a4z1/GyT6/8N3fYRNaV/\
u1iWWcmG8iAckfAbHWNdO2LBMJCBIQJCBIQDDfRLhHuEe4R7ifUrjPX7751nNffPFPF5+\
YTL75q5PINzfv0gCQG9qPCScykLwxEMNSDRsZCDIQZCDIQDDhRLhHuEe4R7ifVrjPX8L5h38w+\
9Nvvj2hhPOrE8k3MdtE+pFP+uG4lqnia7+RfiD9QPqB2SbCPcI9wj3C/bTCff6yzR+/85NPL/\
7Lp6Zom9rLhOIjnEhC8ktCbNvVVQtJCJIQJCFIQjDnRLhHuEe4R7ifUrjPX875jQ/\
j2fmfmVDOOZFNg7KcEzNOpCB5pCC6oek67luIFAQpCFIQzDgR7hHuEe4R7qcV7vOXcf6nX/nhP/\
vmFya0pnZCGSfOcSIFyS0FUQxX0ZCCIAVBCoIUBDNOhHuEe4R7hPtphfv8ZZz/Y+ZHj+\
rahF6MMpFtal/CfBMJSG4JiGJaBr4LHAkIEhAkIJhvItwj3CPcI9xPK9znL980Lv977z/\
PTyjffGMy6SYmm8g+8sg+VMsxFHyiB9kHsg9kH5hsItwj3CPcI9xPK9znL9n8u//6uX8V/v6Eks3d/\
Uw2cVITiUduiYfmmK6LL/9G4oHEA4kH5pkI9wj3CPcI99MK9/nLM//NO+9873+\
uTuixzTv7nGdilom0I4+0w1YM08Q3sCHtQNqBtAOzTIR7hHuEe4T7aYX7/GWZP/mr3/9ft//\
4yclkmf/0/\
jyquQXdGhZBsOTi5Uu1CpXno2VSYcvXoCcr28sg3m24UR7GvBOJSL6IiLZuaLatqUhEkIggEUEignk\
nwj3CPcI9wv2Uwn3+8s7/9tX//v8+uDV73/PO2fe+/p2xQd/DK5cIJKMsyUgLQa0SD4+\
DM8oYxbrBQwqNTrTBGWdjj0HzqqKsy/jzcxB/qlltS/V6V7xTdcWCecaiePf+\
h6FHV26EgbS98ajjsGaNTbTHVjK3ELXSgybbIyverWK1+sDZ8Iis4sxKG/\
YkaIRsAtkEsok8somHu515Y2nNW9oC7y91UYnv/5cn/+Zf3KRNKrHmnbpK7hbLtWToOLu+\
3qv3ePu395X938lh8y5kcyDQesVf8062h7SNJ9e81+6HSM/Wioy3Xwn1j8TntJcX/mThp39/\
rkUJ0T72ZmEnCNmobXj/6d88+dYbj7Ya0pf2sw3BTtt7C0Zqy2cLb1741tKTrW3Z3f+2jKMlf/\
HFH7/21gcfm1xLxqaTP1r+zPffvf5Ea0vu7HdLxtGOp9/+61eWnbZ23N3HdmzeBXXUQXOkhrz2/\
u8d+vHH20zr9r42ZDzNcF/5yx9+8IPHJ4Vb2fs9x+Mjf/vrL3/rmfcfn5S3t7+rdKSWfOe5dx//\
wu9OsCVj08nr5vni9zbaWvL6/jOlsYT4T/zZ8p/vbLY15ddmJtCWcYb6316+++Uv/\
Xwbin1tcm0aR4vEN978wRuzD0CLxqYj9vmF7/4Oa7O7NybUoHE0563nvvjiny62MYCvTiJ3GhcR+\
MM/mP3pN99ua89kc8GRWtOV2E4G5MbKC7pemz4ZSBgjP+h6Ld+\
kWjQ2HXW99mEiIPfSuJrTtavomvflSW71OVJjunat2d/cc2xK6Xoqcs2rTeRRxZFa0bXqds37xn3x/\
cGXwo53VnfNO905ZVo4BAc7JyzbSjmUfD4HpWSXrXmP9JjsKzy55p3pNdMmTzzUNc0l6z11Fa4FhdZ\
noLx/0ta4ZV+2d5kGcJbHnC1HjdJLu+v3aYZ65isPyiTaiZXUsnD2DGfPcPYst7Nnx1q8eGNuzTuR/\
t4I6U7xNvfKo8WZBCLPbu3wm5yUCl5SyCuvtF6ypq5r68p6Nbl7z1k7a+Yb/+\
f66k5rqDiZVniVVIqCJ88zLF4kMfR1LKPNfCKUeCpt88ZhiD/yiFSU/\
O899hwPoePaZ7XulOCyyyTa8c7bhsuZzoWu+9yyBFc039Ac2/\
aFoauOYhsGcZiwdKrrmqkZvs9V3bEtR5i+\
6prE6K7xk4PMrjXk0A1GXVMXiuYI1Xc4dw2NMVUGQpcYlqYTX1NVQzEY544gjk2FMCmI5TsmUVW1Ww\
5zqKmyhkCK8E3uMuFyalJH0yyhK75BfFv2gUkE8X3dBJFcTqhhKZwbhq/pnBoOgb+\
Mdwv06ZHmvZqCqRYIwG1VuKrPmctVwzAtaqrQJ76jMdcnmqKYiqooXFV1jWiW73LL8XVKFMvXugX7x\
REmsRpiWSAWVRRbgw6wiW0KJlRHV4hi+\
pSbgoBmubA13dddCvIJYQhTI8IXqqIphrBHF6tnbxEwU1vVmW9a0CUuVEd1xfB1Q3AdbNxRLdN1uC5\
0x9G56ZqGo5kqdTXCfdvXiegWyx16eqkhFFOJIpgFVavc16ivKcI0qavoDJxAMTSwMc5sm2i67hKdm\
BojBrgGfFNtJkynW6hPDT9X1JTKUInpWz5zFQE+\
Ty3f5pZCiWmBb0q7EoQ5lkF9S7MAHEAwEJEKoqmcQmeSbqmcYSd+\
mlZlgHVYNoAS07gG1u2brg2uZ1qKDTp0bMFsAAGbcEJsTRDFd5jPuHAZNWxh9VDfYF7YOVrTEEwotq\
NZhNnCYEQAekH1hiC6o7mGCZLZFmOK4ivcsCngFTMZgBVgJjUVDnjmjmru7UMuDbE0qvguoYpDDQVc\
XnNUcDNfdhkxqGkx7jDbBC91QQzFVAHhfB+\
6jWoOpRT6bHSxevaWCybj2pYwdRcMSYCRK0yBjlEo9BPUzxXfIi4oVQC4m7rqgtlpGjgsAeOHHu4W6\
5lRJksacjmqpluAmgCLugwmGiCmSgkBGRVduI4vFAdAwjBc0wErNB1FozZYl0/AFMEru+\
W6OI6Jj4Z8EGdM6DUbukm34a8LMVeAWzrQmT4DZNV0OMoZYKvvUtO2TVNoBjN105DxqYeVXRh9EqMh\
HZgYOCSgOiXADjQOvelCDIBQDRihWFznumtTKgzVB4C1wEUot115VLEZc3sY25DS9ew7MGydcAaqMl\
QwIcMQEDAV19UEhGpAEQGhGkKmxR0fApUOkYtxQ7U49JuMoT2kOz/\
q7ELTHzSNmBCWHFfhDsCYDiwMAhP4qAHB0eBMZaatMwdQX8iIpDmcMN01me74NmU9ZNsYeaqgKRznB\
MBN1mu7BuEm833qgiHarkOZ0FVTcQWxVIX4immDH2u+RYEgGQZVLFft4aznRl4DVo/\
mtkUVlUMw0FTHUAinCqjK1zRDGp5qEEYIBfbKDAZdZRi6AdHfsCDK6kDK7B7+MJS/\
7hkVdEEd04AOAYIB+\
AYApgkdukdYplB86FbD1RSTqrZics6E41DhuzpEOA1Yo8p7BPahPGKP4KCqRGi6phoqmJDmOy5VDUA\
R1wFsUySfh2gOHJ8D7LqmqjFbURRwEQ2MlCuuZo5Nut7+aluGRixIQsDQmABepNmWDW5hOIqjS/\
4BvARIJRBNExDFdTSQzGdCU1QB3FYZk7++1Es2AAUHormmAsOwBTglZAVg/\
gAWXDOBjXDVVwgDAgzxXXd1G0IHMHOmWzo4CuQP3bJ9ZrRR72b+\
ppoWpAEyQ1JdHaSTCgNeLYBfAt4Ji9mEAfvXQOMQ3ITqWo7DwIVN+KZr1qj8tmd3Ae+\
wdQBdXdjADallA+\
mwFXAHEzRsAA8CdQFbU4QOFgeoC9EfUMZmkqlYvtMjmbOHHI9u9pMCaRCAqw48Ehg05CAQCXRL8zXw\
V0cAnSO6UEGZoEYFQoRiUOAn4K4+\
dKJQevTT5XGNLTc5pbC4AsRbE65rcvBPiKkc0m9LVSHttIBVUiqdEaCYug5xAW2Ax6mC+YYNIYLJ/\
RXk2Iq3G8W8/\
OpGFAUUxD3VeiwOytFCOjwmDkcPtZx6KdkeoeMgXFmjjWGstAdScRuDSj0qqHfUXjUXnirMbBxa857\
oXtF8k0e1UtwccML1z7j+Gdc/4/pnXP+M659x/TOuf8b1z7j+Gdc/4/pnXP+M659x/TOuf8b1z7j+\
Gdc/4/pnXP+M658P0Prn/w91UGN7"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.871652081477974`16.340471312516563*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           
           Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
            0.25], 
           RawBoxes[
            TemplateBox[{
              ButtonBox[
               TagBox[
                
                PaneSelectorBox[{
                 False -> "\"TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                  True -> StyleBox[
                   "\"TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                 FrameMargins -> 0], 
                MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
               SystemOpen[
                 File[
                 "/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              "OEM6eJxNjMsKwjAQRYkUEfQrurej/oEPXAlKU3EhIlEnbTDplEzq4+\
81xYW7ezn3Hi14kKvngl7IWnA/p5h1wsnGcJDJ2liU4qh7PCzQNVYFjFz8OKWwZ/\
QMHOiBHlbI90ANbEP1bQey2isXHQw7dbUYGApvSqrJYfBvuLTG3qCoMEdll7KTnM//k/\
E0m2WTrOneqRxF2dyXrcM6SHH6ABO1Q+E="}, "ClickToCopyTemplate"]], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "a9b49e00-7a54-4027-88c9-f80c5fb43db3"]]]]]], Appearance -> 
             None, BoxID -> "a9b49e00-7a54-4027-88c9-f80c5fb43db3"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"193.134753`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/build/TheRealCStover__Trigonometry-1.2.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"193.134753`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/Trigonometry.wl"], "Hash" -> 
                    "749ed3ef33be66fe02b42877bf43180744a8df63c332524bbe138768f\
5b195a4"|>, <|"File" -> File["Documentation/English/Guides/Trigonometry.nb"], 
                    "Hash" -> 
                    "34dc953f028f1b8ee942dd1ccee9a4623ab211404dee8fa87cff5c3c3\
b85a111"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/Chord.\
nb"], "Hash" -> 
                    "0fb5e9df9ec5c8226f30b4ab74bbe5afabb352119eac460ee44b23ec4\
8a3ecde"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Cohavercosine.nb"], "Hash" -> 
                    "016be5e71f91bed9e14456c5187cb82d9ba20050100e1132a26b9e68b\
3ca06b2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Cohaversine.nb"], "Hash" -> 
                    "616bc007248a7a75fdf1830a05bce5faf02ef723b39c200ff4f52afbf\
10204f7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Covercosine.nb"], "Hash" -> 
                    "ab19713db565019bf1c304b34fe3bf4816598e3f3883e59548251c92a\
eb7b3af"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Coversine.nb"], "Hash" -> 
                    "d1a0fd66591eb2cb20f55c903ddc904274bed77a2339a3a52da43f03a\
517df58"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Excosecant.nb"], "Hash" -> 
                    "d41a5b6bd90f8dfc6b7e60ca564dc2d9bfad864cb626431a3a77acfa2\
1ece3ba"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Exsecant.nb"], "Hash" -> 
                    "64020672b4d2e282db597abb560734f87fd73c37aeaa72fa0b8dbdef9\
dc47f6f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Hacovercosine.nb"], "Hash" -> 
                    "f07826ad7f4daf34da724fa38294534f76dd00b0e47c8fad5dc3c5b1c\
50ea469"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Hacoversine.nb"], "Hash" -> 
                    "2c0b9ac08c4068b2814f5b97aba4c56de8d75007950e0515e9bb2fac2\
8cccdc4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Havercosine.nb"], "Hash" -> 
                    "9626976f5392d9fc900d07c80c76d2fae0b6a9560fe8f53190ca22501\
aa52f4d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseChord.nb"], "Hash" -> 
                    "81236cb86b23c3c32e111caad9f03f98bf08f48449586725802c7ef9b\
a82d2da"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCohavercosine.nb"], "Hash" -> 
                    "5af56f57c76377c79195fb7e8976bd5bc237c7ed02eb9c57755f24d53\
54abb39"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCohaversine.nb"], "Hash" -> 
                    "4062dbef7ca3322e8129bc03abcb606e3e397ccf41b3f36da7ce793e3\
907dd94"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCovercosine.nb"], "Hash" -> 
                    "bb23aedba841f4d44ff910992fe44597fc4887c6e8b1833072de416eb\
b3d9ba4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseCoversine.nb"], "Hash" -> 
                    "922a5713890e84f8349e1c3a4c4c204ed1d573d843ff482528ead395d\
38b7cd4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseExcosecant.nb"], "Hash" -> 
                    "9eea7824825794ae5dbbc9f56798cdf31509fa610ab057d072b6c2264\
4c0691d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseExsecant.nb"], "Hash" -> 
                    "a76c01e4d221840aec09bab2249bc014adaac877d4dd384434197461e\
b33ec79"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseHacovercosine.nb"], "Hash" -> 
                    "3fc85472bb3407c5012f32b6f65f0bea749205c1705eedf88cfb93206\
28a31e8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseHacoversine.nb"], "Hash" -> 
                    "11af232141cd42b89c14bd59886705b19acf524e01a9512d700088729\
0ee0925"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseHavercosine.nb"], "Hash" -> 
                    "b7642a666f679dfb2c2767e1c480832d9b90fdf1616541b982729bdf2\
01fb3c0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseVercosine.nb"], "Hash" -> 
                    "ebb800b21fa07f3ff9ec0ab6ebe25bb5e1b0ad6bc1c53937f98ed9d36\
3fa6c5c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InverseVersine.nb"], "Hash" -> 
                    "71561be4623193a0788722afffd6f91f6d7ade682d42e11f19688d150\
5196326"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Vercosine.nb"], "Hash" -> 
                    "b28731f43f71ecc67d7570c50542a43c53c072f0f3acfde40b6e5d7d5\
b976b81"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Versine.nb"], "Hash" -> 
                    "7026b4c23d2ef589c2992362b25478ff07a3f125bad602fe04c7c8492\
b91ff06"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/Trig Functions and \
Naming Conventions.nb"], "Hash" -> 
                    "ff6e0dfc2f995eb8922eea8d611b74634fcc290ef56c98a93fc9501fd\
b47528d"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Trigonometry.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "749ed3ef33be66fe02b42877bf43180744a8df63c332524bbe138768f\
5b195a4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/Trigonometry.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "34dc953f028f1b8ee942dd1ccee9a4623ab211404dee8fa87cff5c3c3\
b85a111", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Chord.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0fb5e9df9ec5c8226f30b4ab74bbe5afabb352119eac460ee44b23ec4\
8a3ecde", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
Cohavercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "016be5e71f91bed9e14456c5187cb82d9ba20050100e1132a26b9e68b\
3ca06b2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Cohaversine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "616bc007248a7a75fdf1830a05bce5faf02ef723b39c200ff4f52afbf\
10204f7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Covercosine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab19713db565019bf1c304b34fe3bf4816598e3f3883e59548251c92a\
eb7b3af", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Coversine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d1a0fd66591eb2cb20f55c903ddc904274bed77a2339a3a52da43f03a\
517df58", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Excosecant.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d41a5b6bd90f8dfc6b7e60ca564dc2d9bfad864cb626431a3a77acfa2\
1ece3ba", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Exsecant.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "64020672b4d2e282db597abb560734f87fd73c37aeaa72fa0b8dbdef9\
dc47f6f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
Hacovercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f07826ad7f4daf34da724fa38294534f76dd00b0e47c8fad5dc3c5b1c\
50ea469", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Hacoversine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2c0b9ac08c4068b2814f5b97aba4c56de8d75007950e0515e9bb2fac2\
8cccdc4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Havercosine.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9626976f5392d9fc900d07c80c76d2fae0b6a9560fe8f53190ca22501\
aa52f4d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseChord.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "81236cb86b23c3c32e111caad9f03f98bf08f48449586725802c7ef9b\
a82d2da", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCohavercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5af56f57c76377c79195fb7e8976bd5bc237c7ed02eb9c57755f24d53\
54abb39", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCohaversine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4062dbef7ca3322e8129bc03abcb606e3e397ccf41b3f36da7ce793e3\
907dd94", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCovercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bb23aedba841f4d44ff910992fe44597fc4887c6e8b1833072de416eb\
b3d9ba4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseCoversine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "922a5713890e84f8349e1c3a4c4c204ed1d573d843ff482528ead395d\
38b7cd4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseExcosecant.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9eea7824825794ae5dbbc9f56798cdf31509fa610ab057d072b6c2264\
4c0691d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseExsecant.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a76c01e4d221840aec09bab2249bc014adaac877d4dd384434197461e\
b33ec79", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
InverseHacovercosine.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3fc85472bb3407c5012f32b6f65f0bea749205c1705eedf88cfb93206\
28a31e8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["27 total \:203a ", ""], 
                    Style[
                    Superscript["27 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"154.580195`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"154.580195`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"6.896512`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseExsecant.nb\"\
"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/Guides/Trigonometry.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868903`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868903`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Chord.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.373646`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.373646`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Cohavercosine.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.509347`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.509347`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Cohaversine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.242788`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.242788`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Covercosine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.328017`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.328017`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Coversine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.304811`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"BuildDocumentationNotebook\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.304811`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Excosecant.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.029171`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.029171`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Exsecant.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.924777`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.924777`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Hacovercosine.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.991442`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.991442`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Hacoversine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.915398`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.915398`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Havercosine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.814119`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.814119`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseChord.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.817783`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.817783`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/\
InverseCohavercosine.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.038557`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.038557`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseCohaversine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.003413`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.003413`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseCovercosine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.848288`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.848288`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseCoversine.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.257665`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.257665`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseExcosecant.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.461475`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.461475`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseExsecant.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.896512`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.896512`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/\
InverseHacovercosine.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.779316`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.779316`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseHacoversine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.342333`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.342333`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseHavercosine.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.049023`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.049023`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseVercosine.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.005647`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.005647`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/InverseVersine.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.168406`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.168406`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Vercosine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.285998`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.285998`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/ReferencePages/Symbols/Versine.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"6.704555`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"6.704555`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stover/Desktop/Other/WolframFiles/Paclets/\
Trigonometry/Documentation/English/Tutorials/Trig Functions and Naming \
Conventions.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.427721`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.427721`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["26", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["26", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfWuMJNd13s7Oa2ffJJekSEbmeDKOHUUzW++\
HTGl3tneWuyL3wa0haUG2yFv3MdPc7q5WVfXuDiVRsiELQSAisSQEMCAiRgwDMmzAgn45AYQgjx8JE\
P8wEEd0kEARiVgObJjwD4M0HIM5t6r63bPs105vTZ/+\
MdNdj3vPveec73zn3lu3xEx05Ca5cyG4yyMxHz10pRLzsBrymMTFoAKHxUy0cDOQF4i5aO75YhSLw9\
HCFtmGI96iV6OUR5F3zKuVyyTcvcwJ82Y+L2aj0xd3K6RcpFcDVitxefvhxu2zHo+jk1u7VR7x+\
NWgyiurq9H8JVKKeP3smfpZXvY580Acvrrqzd+\
E8nfhmmNbvFwtwcFUwrTg2ejUDVLhHi9xGgdhe51zN0GMeiXz0eKzYZG131z/\
vygLkacWoqULtTiud8PRrEVpuU9e2rwRFm+DCK9eCoNKvFlhN3kU1ELKvaVLmxeKcZlUI+\
901jFw03VoJw+\
l8FKUi7xEdjmLTqZVXKpVqOzxvXpnbius8UYzjm5Uq5yEpAKdP3ctqDTPLF0gEffi3RIXhzravrR5m\
5RqBHomWtqoxUEZVEwbZxeu8ngnYN7RGyGHvo2Lt1sK3SgVtytlXonrHRotFLi0lPr/\
5qVXymSbe8XXOfTYYtZjjbva6p3fKpZ5FB5KPsfPN47AjccLtTCEgl8Cgbl34hL0b4FUL/\
Pi9o4UYf5GcAfqnInObPhRUKrFvPX66MRVsl0piiJNbLjwIaj7yKWQlBOlzkZHku6R5ju/\
8s53v70CBS5dLIZgM7LNcP7msxcKQSkIw8eTz4/OhY8kn3fPhb+UfN4+\
V3ii0eLjXhwWq9crVyrVWty04vTkyQKIDoLdIIwVK9udp48mYiXydOjxeHLmKgm3i5Wo1Yzl/\
8KhwqHO73vLstA09no5M43/dd+e7fTtTifLbvVOrdwgtMTjjZDuQH+\
teHMrn1pe8Y5CORe5ILVS7D2a2fyVmJc3KpUgxRJv9r03f6sFO4KVsy9GYEFnozi4zcOzF3l0Kw6qZ\
6/HO/Dr5aAkoAcuFaFVZ9Mao7NbYXE7qARlHoe7Z/\
1ascTObu1wwIRSwUsKeeWV1kvW1HVtXVmvJnevNDBKijVKDxxb2YImlaStDt16qK2t7Ll62aqrr6u6\
YZv6q97sSrTiLUacBhUWeUsrXvptxTvyQo1U4mK82zQkb7cSk7uXgrAczQLktje2ftXpzA663Ll+\
hbcIhl8rV6KW/kk9d+55LpqXzUF7u6/pgSpH5SGAOh7zTts/\
lQkjJUzwom9ZuuvpX6B6rR5YhXTIvmstHB68shYwnusA4zPeTnBHemtlu7ADSE4lmHZ20bFrNYh+\
IaDAra5zJyH6AK4AbBUjiXKzTS0nRSf2kCJL56332Qxmt4Lqg2sAp6VOSsUKvxFExSzipgqeKcw0rk\
rD7URoQqEUREPThM74gjwBecIQPGEeecI08oQRGns6U/dVAh7Fo3j4Fs+3tL3+\
baFHOrnUnk6uSST0diMo+\
9VrIABn0phfBaluAdDUMXg1SjPJjYfXvGNXKhAASOkiicnGzJo3nxiReCotd+Pwmjcnj8hekf+\
9x57jYYWX2qxr/\
U4JLrtMoh3vvG24nOlc6LrPLUtwRfMNzbFtXxi66ii2YRCHCUunuq6ZmuH7XNUd23KE6auuSYzuGj9\
5MaA1CadJR53drGyXitHO2WdrRcbbrXy94jfk0A1GXVMXiuYI1Xc4dw2NMRUSde4Sw9J04muqaigG4\
9wRxLGpECYFsXzHJKqqdsth9pbjJhcc0JTyG9DD0Vlvt+\
wHpehsYScIWatAivBN7jLhcmpSR9MsoSu+QXxb9oFJBPF93QSRXE6oYSmcG4av6ZwaDoG/\
jHcL9OnBBAp2CDg9hYBf4W2CqRYIwG1VuKrPmctVwzAtaqrQJ76jMdcnmqKYiqooXFV1jWiW73LL8X\
VKFMvXugX7xWEE6xTLArGootgadIBNbFMwoTq6QhTTp9wUBDTLha3pvu5SkE8IQ5gaEb5QFU0xhD26\
WD17i4CZ2qrOfNOCLnGhOqorhq8bgutg445qma7DdaE7js5N1zQczVSpqxHu275ORLdY7uBidQrFVK\
IIZkHVKvc16muKME3qKjoDJ1AMDWyMM9smmq67RCemxogBrgHfVJsJ0+\
kW6lMDCbV5FzqKU4DZNqkMlZi+\
5TNXEeDz1PJtbimUmBb4prQrQZhjGdS3NAvAAQQDEakgmsopdCbplsoZUKpumSwDrMOyAZSYxjWwbt\
90bXA901Js0KFjC2YDCNiEE2Jrgii+w3zGhcuoYQurh/\
oG88LLhPa2K6HYjmYRZguDEQHoBdUbguiO5homSGZbjCmKr3DDpoBXzGQAVoCZ1FQ44Jk7qrlngnWK\
pVHFdwlVHGoo4PKao4Kb+\
bLLiEFNi3GH2SZ4qQtiKKYKCOf70G1Ucyil0Geji9Wzt1wwGde2hKm7YEgCjFxhCnSMQqGfoH6u+\
BZxQakCwN3UVRfMTtPAYQkYP/\
Rwt1jPDCTWlYrsK94F8o6q6RagJsCiLoOJBoipUkJARkUXruMLxQGQMAzXdMAKTUfRqA3W5RMwRfDK\
brkuDiXXXlgPccaEXrOhm3Qb/\
roQcwW4pQOd6TNAVk2Ho5wBtvouNW3bNIVmMFM3DRmfeljZhRHk65QOTAwcElCdEmAHGofedCEGQKg\
GjFAsrnPdtSkVhuoDwFrgIpTbrjyq2Iy5PYxtSOl69h0Ytk44A1UZKpiQYQgImIrragJCNaCIgFANI\
dPijg+BSofIxbihWhz6TcbQHtKdH1q6Ln/\
QNGJCWHJchTsAYzqwMAhM4KMGBEeDM5WZts4cQH0hI5LmcMJ012S649uU9ZBtYxjZescBl3MC4Cbrt\
V2DcJP5PnXBEG3XoUzoqqm4gliqQnzFtMGPNd+iQJAMgyqWq/\
Zw1nPDCdctGrEtqqgcgoGmOoZCOFVAVb6mGdLwVIMwQiiwV2Yw6CrD0A2I/oYFUVYHUmb38Ieh/\
HXPqKAL6pgGdAgQDMA3ADBN6NA9wjKF4kO3Gq6mmFS1FZNzJhyHCt/VIcJpwBpV3iOwD+\
URewQHVSVC0zXVUMGENN9xqWoAirgOYJsi+TxEc+\
D4HGDXNVWN2YqigItoYKRccTVzbNL19lfbMjRiQRIChsYE8CLNtmxwC8NRHF3yD+\
AlQCqBaJqAKK6jgWQ+E5qiCuC2ypj89aVesgEoOBDNNRUYhi3AKSErAPMHsOCaCWyEq75CGBBgiO+\
6q9sQOoCZM93SwVEgf+\
iW7TNDytYpma2aFqQBMkOC7BqkkwoDXi2AXwLeCYvZhAH710DjENyE6lqOw8CFTfima9ao/\
LZndwHvsHUAXV3YwA2pZQPpsBVwBxM0bAAPAnUBW1OEDhYHqAvRH1DGZpKpWL7TI5mzBxWqq58USIM\
AXHXgkcCgIQeBSKBbmq+BvzoC6BzRhQrKBDUqECIUgwI/AXf1oROF0qOfLvcWaasWByEk6Gmqu1wf+\
4yWSYUtXyPlYmV7uRCAPivJ4TZOKSyuAPHWhOuaHPwTYiqH9NtSVUg7LWCVlEpnBCimrkNcQBvgcap\
gvmFDiGBr3smNUim4sylnn5MRuWREeM07ng0aeDukKkfh/mHLsEM21uDRoMpflTPhPEwu25hdqw+\
kRLNQbPIHGr+8173P8d2LtXJ5tzBbmOlxa9p7e5yS7S/MiLno6b1Kf75YLsYAmTN7C58OvNfb+\
HP3kDMdeU0unIl+dq8LN+KgnFwUziSjuM+fH6OAfZW0Z1/fDO6kSmqxyo9uR+GZzNT6a3XS6K/\
96nm4+nQ6hMzZlYoogi3tFmbSqaV2RRbO9L62OcsiL5rZ46JsSL85xiVFlIsyWkTdiKKAwv2nWo+\
BxNFCOi0FMj3UcuqlZE1Fx0G4skYbw81p/\
2X90pxq7qqg3s171Vx4Cmzbm7vKY7JxaM1bAhVtkXCbx4Uz4ICp6rMDR9e8eXRFdMUcuOJcHn3wBol\
3mk146GIxqibzkaCqQlCrxPKiM42jqSmkJ0CHx+XIeuuVp+\
SBjouWvCCMZTVRs56T8lg21QaBveXE5SJjvCInEKKrpBrNXauVSmve0RerjMRcNqUwEyn9zQQEtbha\
i69cXF2tTyF8sr8bqyAs3HSoff6hz5tv3wii1dVkpnmQ23aGu20bDoKos9GJtumTzqV4al+\
lATsEGE3PySmii7xaCnbFfDSfziMvRnPJqce6psrnktkl+C+nzOH/0ebsj5xUvRrUIi6zLDmp+\
mxIqjtFGnVPSzdmjAsL95jNB8E8SkqchXry+Y//rq3UpksswbHd5/ltXsqufPecnIq+\
EZR2t6GclgUb2f90NjlBiCM3E+FJqfBh8judkC58eO+r+\
imoj7v7qmt8BfXXtFFVBAf7s8JVr1SkcsL7VjKzv97XTaUA6rsclNgQ4NAV2KM5CLaRd6RODdLUwJt\
PzLjXAofOWXmZ9gBu9VpdcTy5a6/p/Pl0lU/yfa4w35zVvQDib4cAqazdsEXy+\
atz91qhkSzpiY7UtfSR7np8UyZclyEHKyXrOU4l7W4uNGnz6CyOH84wovEzkyZZsCGXULQtp/\
jWb8jPH58L1eTzk3Ph55LP/z3nHXm+WLkl6+\
5YH9MIf8eTqgtgI7cgHkm8PHxFQKfYfemd7nB6K1kCTeQqD4jgA84ri8NioU8bqyUxK1nZPGAlgwWq\
wSLTYAFpwDg0sLtOxsHrpD5XqJQRvyw9SlMeRKZ7IVNGkevIVGfMiEyITA8uMmVjCvlCpmRM9oAjU1\
+pzmAIlS1Ia0BU4zdiFGLUg4JRzTWjs5AQZTb6YCNUT5GTYeYMnNIF0f2jU2Mo9YEGqcP3BKePWOX6\
IOtzdg8TzH5nI6LJoOGgmi08M26VHul83KVnBXsravR1xnlWZcIkhlNlY+R/\
Ahqtc6ITXpVULoVBecMPbvfrkQOtAs+fcg8fVD8ddR1+nlU5jX463FMS+\
dPy7EF12FGfU8mzKqfRYUd7iih/2p47sI474nNceVblNDruKE/Z5U/\
X8wfVbUd9zjHPqkS3Hewp1PzpeuGguu2ozwHnWZXT6LbDP6WdP00vHlSnHfU5+\
TyrchqddoRdDPKn6iMH1mtH3Eciz6qcRq8depeP/Cl66aD67Kj7rORZldPos6PtgpM/\
bR89qI476j5EeVblNDruKLtE5U/Xxw6q2466T1eeVYluO9guavnT9fGD6raj7mOXZ1VOo9uOtMtg/\
pR94qD67aj7POZZldPot2PZhTN/Sj95UP131H1Q86zKafTfMexSmz+\
Vnzqo3jvqPsF5ViV671C7OOdP5acPqveOuo92nlU5jd478i7n+\
VP4QwfVd0fdZz7PqpxG3x39LQD50/jDB9Z5R3wPQ55VOY3OO+pbMvKn70cOquuO+p6SPKtyGl13LG+\
RyZ/SzxxU/x31PT55VuXB8t+\
5TNGHx7G5Hfw45tWq4Lw0LFZj74RmL8fydbnL73zt3y578lXF2bbiH30hboeH2+H14eD7Agm9t8M7/\
CCjWO/t8O4FW8MhT8sr5ztuaXPYG8nnf5/r/lI40ijrWPK+\
9LvxVV6pNd5WDqXI3wnAfdzbCe4sq8tXg5Av34SvJF7e2ilGy8n+edDWE+k+\
d5t3Oa3FEtz60w5hr9WiOHmZSQTemQIlety4jNGbA11FUNOR+tu+\
QOXaoJq5sCuN2isFcWGm4z0tDQs6IU1l8zYp1UgchO3hr2lGP5OYkdkwowjtaFrtaH5AO4qWgE4kLz\
0Ke5iUunyJ3+EhQtM0m9SHo0DT0xk0NewIsWlqDenvBjWkBifra9vg5NI99yL+5X/+H/\
7mF375vXPR8Xq+KEvoRfta3qnUzeJmosXsJVVw/uFCUK7KqjbvVkMeRfI1YE5/\
HU2bZcq9UbcBfhei+Zd3ilS+3mHxxUpEyvyFPjt8tUSi+\
Hqmun1h483XXs17iaBDNzt6pv8mFrrvNoe6O93Yv7cGRfa6sdHkGt4MsuqHa5hUyAVQ7K1GvjRYcdu\
lwCclj4ZBqQTA1HC3+wh9so6Xi/GOWGqXuE8jhvbL9/\
Kt9nn9av2GejX9eVj9Lnnx6iBeWb9psOqK0fOciHSf99XoU4NVd6Xl5sGq3UnuSd9emLxvcCMZdVq4\
SmK6MxAYtTT7+EYJyGUFAP122/717a/a6Du4tMr4wqBKH3hoK+29s/\
2FvVKp2XUD3vKAtaSyO3BL6rfsV0v0vu6KWl/RKYfC+8Nlmr4ttu39noPiy8yADWt9x+jA93a+\
i3QgDJWrqOU7TyWvnL0WxAnpI8VSLeQv9D2OzKCAiMfZm5xlcUMqtj8yUozqLzZsSA2h71LI+\
eAGmLwpUc4nfDYoVhrTJbPJMDr8vR5mNQzZnQM73eBdEC1CPTvyVbwtuRd0yNH0NbmyXd58komJI02\
WOb/5xRopDRMB03HXdP5j+\
EJaYsEsfB2tsLZo4i2kv7IXOB3qzjLlpIU1wKRFyyt9Mcmc4NTFoLTQWwh5OZvX/8hhC+nwc6M4fL/\
RUup6s1yNd+\
93tBwCTVPaNzDnGYZi9gVbcC1H2ELYmi7YmiWMDTp6n8JX4r2DA9dgSV6bEXclee1G3XwF9RDJ74Ac\
qpmCzbXRuJYhtWESB29pI6K8wjqgypuTtLu3l/YncLYiAkpB95ycs7Vo96NdriVmjcOyjl7kPU3r+\
E2eLBpcRhM7CCbWqub9trFo7lqQrIRrWtcClId2lX+\
7ylTbv0W1Mob6JE6vlUlPFoLq7jL0UlGa0HIcLBdKxaofkJB1G81Mn5w0Dgq1MOSVuF5un5ZDQRZZf\
b9J3MD0p7XljyUtl8c/otX9jlg3Wj3EoNjYO6inIbQp/gbYFm9qvlhZvsbvLBd4qcdc/\
fCK709DFGpN5NkfzadNT1R/z2bvi+bH3kPNqNKYLJeLkS+\
RcrG0653yglpIgW6QSrR8IwyaS7HlRXIpduFk+40v8+L2ThzN3yiRYqV5+cXi7aJ8PXH7JP/\
RSyHEr3SCvW1e/oP35eenzXcEH/GqhEoDbSzPPFRoWT/dWAqQLgHoNYE/2zGBfz+\
aeer5YoVfCDm5Jecui5VsDWrvRQOHOlcUXKuVfR7K1bNR540n5TCt1FnSlpbTyeB4fzZUTAfhX2hMc\
7esWejPciMe16ovFfmdZMxpoIAN4aT3rHq6Kj3J5gZrRpKdBqzWtiR3gO6Iy1V5eDVaXJXTGsnS+\
cFurw/n9xfPs6mQYeZAZu+1ImGw1mbcsWUuZ8D29rkOC/AN3D09J2b6po/\
pbfIM0sfx0ccBLbrVKYezlNTUMgMd3GAG9eC5a7UkqAwDhimS3telLN0uN4wPRY+\
23ATRMIx4duJ4y4nL3sd+QSLNciVYLgWVbR4uS8CAyPiPh6m1/\
eGi6ORWSOTzRNkjjPu0EKhNhEeyoJVC/\
0tAaHjUEkoHmOBejYPqBRImVTRC4UyfobBMbvGEvDAoAgr4Ry13ZZd6wL/\
5q17Nr0dMH3Q2WNDER6gmiZsfZf0zg1l/ptOBUHHVD2Ig6nUzzR4rXIgWUttrJ3GLN3m1RCjvM/\
0qJ484Np6CXF3tXOMqDj+wD35lkH9IrmsklVvJ5F3bY5AP8DNroChAAzkxEn2i73nh1UZbW+/\
vT9hqY0qmVxnDTL80ylnoyUwhlbtSoSFPErKR17wOOhc+SKcOtBCybQ3jwH2fVTXCss2hVDV4C/\
d1yXi/qaeMt0nXh8ChBlFxn2uc6+VvllKr7cT+FG9mogU5DsHDwtFOwGm4xN7X7BlAhsXrHsMoHUO/\
bU+7tgyYHE/u6D7eMpAyuxU0Rw67H/ZvGUIqnOoxXtLvIGCvVj2UxbSXQ1Kt8vBCcFcu/\
8gOpr8WtwL4AtRvKXrsYppZv5r9T8ZYKnHhcF0qby5bejmXGOmg4TorIyPbA5WRcZV6GfMJQ2sUMvB\
KyEySl+Qa/AElud1YVZ+\
WcXmIMnbay1jYSvhzo5TBWXdaztKFOsdpFDUUOUpLO9ICX3P7tpDjOGi2wkjILgVhud+\
s6f4w9YbNJbg/rBMeqm+B0bpLRnurskW9xdfrpwdYqNv+1NDRQsjh6IsvgtYGS/\
e6RnlnOk7tPSLbVs1pOZN6m7OXSFgkPtzXwObBbWHhItDwYLchwumLXJBaKW4I6dWvmIk+\
VseuZK8NIFBxHcRmmuju8RKncSJWx7DwkU1W7Hni4fQe2eYMDqNs+\
dgxr1Yuk3A3WVTX3D5h4WZwRyJrc5R8YYtsp1h7bIuXIbGIefoz3V/\
kqZW2zY4u1IoldpNH0M5oxZtb+\
dTyincUysza7j3aUm3LFjuz7735Wy11dcnhzXxJzEcPNXonravtyrlOib1Fr0YhC4oabZVcyJv5PBR\
6us2cWtpTN9+TCbcDhUDuDn7QMdB+pn6Wl33w52yZ/fxNKH+3s6NmGvOnp+\
SWM6lCgrC9zlRbWSXz0aK0rfab6/8XZSHy1AKYew1wL+\
uG9rD45KXNukleCkHxmxWplGRyw1u6tHmhGJdJNfJOZx0DN12HdqZb2rQ5d1pFy0OePXunPpOQGWpz\
v5wOGtLioF2+e89nPBeu8ngnYN7RGyGHvpULyXpwlQaiLhS4tJT6/170pe1RzU4mI1PsrWKZR+\
kWRoeOn28ckeNs2bxdgkLeiWTPHlK9nMwEyetuBHeSFPLMhh8FpVrMW6+\
PTlwl25WiKNLEhgsfgrqPJCwsNfcjSfdI851feee7316BApeyxRq3edsmI48nnx+dCx9JPu+eC38p+\
bx9rvBEk+DJxbLV65UrFYClrtmkDBNuECaXnnSevgedbKWNrWbcOiPXNTvXU5aFprEfbqDQ0Gi0tHI\
VHB50PDT2eGvtgLbsS0RbppDdljig/\
nKUgoqAPGB3fWVsOHpsZUvuCCVtbHjcnG0ve65etmoa66ajqK75qje7AsC8GHFItFkEHeal31a8Iy/\
USCUuxs2IddTbhV64K7lMNAtQ2d7YRlzL9Nflhg0utpgtXG7pn5bntJtkNHumvP2aHmhwVB4CiAJ9d\
NrsqUyYzh3CPlqW7nr6F6hea+\
fk9EfW2pqc9FvZPR5GPyOnh9Pl8YUdIvfsklPtnZPP95pfhqgBeABwU5QjOOkuSKmWk6ITe+\
ice94XM2hLQx84Azhd32qgvoSlAYAzLQwuDZMTCe+\
FUhANHd474wLGd4zvQ8T3oxjf8xTfR2jsQytXyd1iuVaW+/\
CN1uSeqWC3SHv0zJK17riWqWqj9cvMJ72vrpx9ERA0OhvFcu/Psxd5dCsOqmevxzvw6+\
WgJMBlkm0Hz94gtJQ8TR8Wt4NKUOZxuHt2xN28V7yZr4xNPadXboSBNHLOEonHqZ3Z977+7ZbD+\
l5SeqX70qHP1oqMt1+Z9N7se9/511M9glC/EqPR+LLNhZX7AudL6rpjOa6iPxhgPr8C54ePt/\
9gJRkTbHPXa0HM/SC4tYIZJWaUmFHeh4wS4R7hHuEe4R7h/\
iDAfXMwqzOtaCq1MfTVUrx3PPM3mTfIlfF9z6l7M78Clzfynyf3duqNmTVvTgIjXN+\
AqVB7eeFPFn769+\
cghUoxrAW4xjmNPfPJHqllbT9z9cJOEDLMMZF05It0mOu6rVuGhaQDSQeSDiQdmGMi3CPcI9wj3E8p\
3Ocvx3z/6d88+dYbj56fSI75lX3NMQO5J03z3bCYayL5yBH5sNZNxdUNG8kHkg8kH0g+\
MNdEuEe4R7hHuJ9SuM9frvnZwpsXvrX05GRyzS9NINfETBOpRx6ph2ZotuMg9UDqgdQDqQdmmgj3CP\
cI9wj3Uwr3+cs0/+KLP37trQ8+\
NhWZJs5pIvXILfXQNUdRcZAbqQdSD6QemGki3CPcI9wj3E8r3Ocv0/yj5c98/\
93rT0wm09zd90wT80wkHrkkHorhqCoSDyQeSDyQeGCeiXCPcI9wj3A/pXCfvzzz6bf/+\
pVlZ0J55uv7mWdu3qVBy5a9mGgi88gR81A0V7WReSDzQOaBzAMTTYR7hHuEe4T7aYX7/CWar73/\
e4d+/PEJLZ29u7+JJqaZyDvyyDvMdVczbBsXUiHvQN6BvAPTTIR7hHuEe4T7aYX7/KWZ7it/+\
cMPfvD4FOw7e5lQfEYTyUeOyYerGsaIL/9F8oHkA8nHwSQfmGsi3CPcI9wj3E8F3Ocv1/zbX3/5W8+\
8P6Fcc193A8pyTcw0kXrkknqopu7iRoRIPZB6IPXATBPhHuEe4R7hflrhPn+Z5neee/fxL/\
zudGSaOKeJ1CO31MNRDVV1kXog9UDqgdQDM02Ee4R7hHuE+ymF+/xlmq+b54vf25hQpvnl/\
cw0r1TkjCYv7AQhw1QTuUf+uIdtOzpyD+QeyD2Qe2CqiXCPcI9wj3A/pXCfv1TzE3+2/\
Oc7mxNKNb8+M4lcM9jB6U0kIXklIda6ojumiftFIAlBEoIkBHNOhHuEe4R7hPtphfv85Zy/vXz3y1/\
6+QntQvtrE8w5MeNECpJLCqLohorD3khBkIIgBcGME+Ee4R7hHuF+WuE+fxmn+\
MabP3hjdroyTpzjRAqSUwpirjuGozm4ewRSEKQgSEEw40S4R7hHuEe4n1a4z1/GyT6/8N3fYRNaV/\
u1iWWcmG8iAckfAbHWNdO2LBMJCBIQJCBIQDDfRLhHuEe4R7ifUrjPX7751nNffPFPF5+\
YTL75q5PINzfv0gCQG9qPCScykLwxEMNSDRsZCDIQZCDIQDDhRLhHuEe4R7ifVrjPX8L5h38w+\
9Nvvj2hhPOrE8k3MdtE+pFP+uG4lqnia7+RfiD9QPqB2SbCPcI9wj3C/bTCff6yzR+/85NPL/\
7Lp6Zom9rLhOIjnEhC8ktCbNvVVQtJCJIQJCFIQjDnRLhHuEe4R7ifUrjPX875jQ/\
j2fmfmVDOOZFNg7KcEzNOpCB5pCC6oek67luIFAQpCFIQzDgR7hHuEe4R7qcV7vOXcf6nX/nhP/\
vmFya0pnZCGSfOcSIFyS0FUQxX0ZCCIAVBCoIUBDNOhHuEe4R7hPtphfv8ZZz/Y+ZHj+\
rahF6MMpFtal/CfBMJSG4JiGJaBr4LHAkIEhAkIJhvItwj3CPcI9xPK9znL980Lv977z/\
PTyjffGMy6SYmm8g+8sg+VMsxFHyiB9kHsg9kH5hsItwj3CPcI9xPK9znL9n8u//6uX8V/v6Eks3d/\
Uw2cVITiUduiYfmmK6LL/9G4oHEA4kH5pkI9wj3CPcI99MK9/nLM//NO+9873+\
uTuixzTv7nGdilom0I4+0w1YM08Q3sCHtQNqBtAOzTIR7hHuEe4T7aYX7/GWZP/mr3/9ft//\
4yclkmf/0/\
jyquQXdGhZBsOTi5Uu1CpXno2VSYcvXoCcr28sg3m24UR7GvBOJSL6IiLZuaLatqUhEkIggEUEignk\
nwj3CPcI9wv2Uwn3+8s7/9tX//v8+uDV73/PO2fe+/p2xQd/DK5cIJKMsyUgLQa0SD4+\
DM8oYxbrBQwqNTrTBGWdjj0HzqqKsy/jzcxB/qlltS/V6V7xTdcWCecaiePf+\
h6FHV26EgbS98ajjsGaNTbTHVjK3ELXSgybbIyverWK1+sDZ8Iis4sxKG/\
YkaIRsAtkEsok8somHu515Y2nNW9oC7y91UYnv/5cn/+Zf3KRNKrHmnbpK7hbLtWToOLu+\
3qv3ePu395X938lh8y5kcyDQesVf8062h7SNJ9e81+6HSM/Wioy3Xwn1j8TntJcX/mThp39/\
rkUJ0T72ZmEnCNmobXj/6d88+dYbj7Ya0pf2sw3BTtt7C0Zqy2cLb1741tKTrW3Z3f+2jKMlf/\
HFH7/21gcfm1xLxqaTP1r+zPffvf5Ea0vu7HdLxtGOp9/+61eWnbZ23N3HdmzeBXXUQXOkhrz2/\
u8d+vHH20zr9r42ZDzNcF/5yx9+8IPHJ4Vb2fs9x+Mjf/vrL3/rmfcfn5S3t7+rdKSWfOe5dx//\
wu9OsCVj08nr5vni9zbaWvL6/jOlsYT4T/zZ8p/vbLY15ddmJtCWcYb6316+++Uv/\
Xwbin1tcm0aR4vEN978wRuzD0CLxqYj9vmF7/4Oa7O7NybUoHE0563nvvjiny62MYCvTiJ3GhcR+\
MM/mP3pN99ua89kc8GRWtOV2E4G5MbKC7pemz4ZSBgjP+h6Ld+\
kWjQ2HXW99mEiIPfSuJrTtavomvflSW71OVJjunat2d/cc2xK6Xoqcs2rTeRRxZFa0bXqds37xn3x/\
cGXwo53VnfNO905ZVo4BAc7JyzbSjmUfD4HpWSXrXmP9JjsKzy55p3pNdMmTzzUNc0l6z11Fa4FhdZ\
noLx/0ta4ZV+2d5kGcJbHnC1HjdJLu+v3aYZ65isPyiTaiZXUsnD2DGfPcPYst7Nnx1q8eGNuzTuR/\
t4I6U7xNvfKo8WZBCLPbu3wm5yUCl5SyCuvtF6ypq5r68p6Nbl7z1k7a+Yb/+\
f66k5rqDiZVniVVIqCJ88zLF4kMfR1LKPNfCKUeCpt88ZhiD/yiFSU/\
O899hwPoePaZ7XulOCyyyTa8c7bhsuZzoWu+9yyBFc039Ac2/\
aFoauOYhsGcZiwdKrrmqkZvs9V3bEtR5i+\
6prE6K7xk4PMrjXk0A1GXVMXiuYI1Xc4dw2NMVUGQpcYlqYTX1NVQzEY544gjk2FMCmI5TsmUVW1Ww\
5zqKmyhkCK8E3uMuFyalJH0yyhK75BfFv2gUkE8X3dBJFcTqhhKZwbhq/pnBoOgb+\
Mdwv06ZHmvZqCqRYIwG1VuKrPmctVwzAtaqrQJ76jMdcnmqKYiqooXFV1jWiW73LL8XVKFMvXugX7x\
REmsRpiWSAWVRRbgw6wiW0KJlRHV4hi+\
pSbgoBmubA13dddCvIJYQhTI8IXqqIphrBHF6tnbxEwU1vVmW9a0CUuVEd1xfB1Q3AdbNxRLdN1uC5\
0x9G56ZqGo5kqdTXCfdvXiegWyx16eqkhFFOJIpgFVavc16ivKcI0qavoDJxAMTSwMc5sm2i67hKdm\
BojBrgGfFNtJkynW6hPDT9X1JTKUInpWz5zFQE+\
Ty3f5pZCiWmBb0q7EoQ5lkF9S7MAHEAwEJEKoqmcQmeSbqmcYSd+\
mlZlgHVYNoAS07gG1u2brg2uZ1qKDTp0bMFsAAGbcEJsTRDFd5jPuHAZNWxh9VDfYF7YOVrTEEwotq\
NZhNnCYEQAekH1hiC6o7mGCZLZFmOK4ivcsCngFTMZgBVgJjUVDnjmjmru7UMuDbE0qvguoYpDDQVc\
XnNUcDNfdhkxqGkx7jDbBC91QQzFVAHhfB+\
6jWoOpRT6bHSxevaWCybj2pYwdRcMSYCRK0yBjlEo9BPUzxXfIi4oVQC4m7rqgtlpGjgsAeOHHu4W6\
5lRJksacjmqpluAmgCLugwmGiCmSgkBGRVduI4vFAdAwjBc0wErNB1FozZYl0/AFMEru+\
W6OI6Jj4Z8EGdM6DUbukm34a8LMVeAWzrQmT4DZNV0OMoZYKvvUtO2TVNoBjN105DxqYeVXRh9EqMh\
HZgYOCSgOiXADjQOvelCDIBQDRihWFznumtTKgzVB4C1wEUot115VLEZc3sY25DS9ew7MGydcAaqMl\
QwIcMQEDAV19UEhGpAEQGhGkKmxR0fApUOkYtxQ7U49JuMoT2kOz/\
q7ELTHzSNmBCWHFfhDsCYDiwMAhP4qAHB0eBMZaatMwdQX8iIpDmcMN01me74NmU9ZNsYeaqgKRznB\
MBN1mu7BuEm833qgiHarkOZ0FVTcQWxVIX4immDH2u+RYEgGQZVLFft4aznRl4DVo/\
mtkUVlUMw0FTHUAinCqjK1zRDGp5qEEYIBfbKDAZdZRi6AdHfsCDK6kDK7B7+MJS/\
7hkVdEEd04AOAYIB+\
AYApgkdukdYplB86FbD1RSTqrZics6E41DhuzpEOA1Yo8p7BPahPGKP4KCqRGi6phoqmJDmOy5VDUA\
R1wFsUySfh2gOHJ8D7LqmqjFbURRwEQ2MlCuuZo5Nut7+aluGRixIQsDQmABepNmWDW5hOIqjS/\
4BvARIJRBNExDFdTSQzGdCU1QB3FYZk7++1Es2AAUHormmAsOwBTglZAVg/\
gAWXDOBjXDVVwgDAgzxXXd1G0IHMHOmWzo4CuQP3bJ9ZrRR72b+\
ppoWpAEyQ1JdHaSTCgNeLYBfAt4Ji9mEAfvXQOMQ3ITqWo7DwIVN+KZr1qj8tmd3Ae+\
wdQBdXdjADallA+\
mwFXAHEzRsAA8CdQFbU4QOFgeoC9EfUMZmkqlYvtMjmbOHHI9u9pMCaRCAqw48Ehg05CAQCXRL8zXw\
V0cAnSO6UEGZoEYFQoRiUOAn4K4+\
dKJQevTT5XGNLTc5pbC4AsRbE65rcvBPiKkc0m9LVSHttIBVUiqdEaCYug5xAW2Ax6mC+YYNIYLJ/\
RXk2Iq3G8W8/\
OpGFAUUxD3VeiwOytFCOjwmDkcPtZx6KdkeoeMgXFmjjWGstAdScRuDSj0qqHfUXjUXnirMbBxa857\
oXtF8k0e1UtwccML1z7j+Gdc/4/pnXP+M659x/TOuf8b1z7j+Gdc/4/pnXP+M659x/TOuf8b1z7j+\
Gdc/4/pnXP+M658P0Prn/w91UGN7"}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.871652266162717`16.34047133323319*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/cstover/\
DeployedResources/Paclet/TheRealCStover/Trigonometry"}, "HyperlinkURL"]}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"TheRealCStover/Trigonometry\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAp6E/\
oD2juHl0PFQpKsuJBiqTpxE3NZkJm1rj/3g0qIj33NofvzXvzxlZ0IXW+\
xU8gW9G5xDLbmuqNI1YLCYRDMvCwO4BhVb3YM7q6DwwpJmDNDkPhj5XzxuOw/\
5PNaN5CH71mKNjsB3tddsyRboTIOa8yept0b4p0ZbAXuDsIQ4wfkMQdRI8j7H8jkXjUxgOLtgMJ2jf\
qm2uTe8OAPXAal2p70v3qcj1GSN6F9ye5UdV2auLf5ae1LzXKwQNdK/\
CT3bPjrsHpO4GJ6jYNMEX6Ag6wsY8="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "67056962-572c-4bb8-bb5e-165bb3d7dc0d"]]]]]], Appearance -> 
                   None, BoxID -> "67056962-572c-4bb8-bb5e-165bb3d7dc0d", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.871652266162717`16.34047133323319*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/cstover/\
DeployedResources/Paclet/TheRealCStover/Trigonometry"}, "HyperlinkURL"]}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"TheRealCStover/Trigonometry\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAp6E/\
oD2juHl0PFQpKsuJBiqTpxE3NZkJm1rj/3g0qIj33NofvzXvzxlZ0IXW+\
xU8gW9G5xDLbmuqNI1YLCYRDMvCwO4BhVb3YM7q6DwwpJmDNDkPhj5XzxuOw/\
5PNaN5CH71mKNjsB3tddsyRboTIOa8yept0b4p0ZbAXuDsIQ4wfkMQdRI8j7H8jkXjUxgOLtgMJ2jf\
qm2uTe8OAPXAal2p70v3qcj1GSN6F9ye5UdV2auLf5ae1LzXKwQNdK/\
CT3bPjrsHpO4GJ6jYNMEX6Ag6wsY8="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "67056962-572c-4bb8-bb5e-165bb3d7dc0d"]]]]]], Appearance -> 
                   None, BoxID -> "67056962-572c-4bb8-bb5e-165bb3d7dc0d", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Cloud object:\"", 
                    TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/cstover/DeployedResources/Paclet/\
TheRealCStover/Trigonometry\"", 
                    "https://www.wolframcloud.com/obj/cstover/\
DeployedResources/Paclet/TheRealCStover/Trigonometry"}, "HyperlinkURL"], 
                    "]"}], "OEM6eJy1kcFOwzAQRJUSIaRygU/\
oB9R3jqSHVqoEsoM4oAq57pq4bLyWd4PJ35MILnxAr6M3O9oZX/GNtuWRvoH9Fd/\
tokBOGcRKoDjJvuJrTTPga673gcUsG6Th9HQ8gxNTvfkFL1voE1qBGVv8Ye+\
rTiTxg1KllHUh9Nn2brauHfWKjmflWOgLstpAQhrhpIFpyA5YPVuHIKrtQIPFxvxybQ4fFKkHyePKH\
C5639xuxwQZQ/x80XtTHaYm/n1+2fi5Rj0g8L0BnOJeg3QNTetEYa7bPMAPk42kcQ=="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Visit web page:\"", 
                    TemplateBox[{
                    TagBox[
                    
                    RowBox[{
                    "\"https://www.wolfram\"", "\[Ellipsis]", 
                    "\"Stover/Trigonometry\""}], Short[#, 0.75]& ], 
                    "https://www.wolframcloud.com/obj/cstover/\
DeployedResources/Paclet/TheRealCStover/Trigonometry"}, "HyperlinkURL"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"TheRealCStover/Trigonometry\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAp6E/\
oD2juHl0PFQpKsuJBiqTpxE3NZkJm1rj/3g0qIj33NofvzXvzxlZ0IXW+\
xU8gW9G5xDLbmuqNI1YLCYRDMvCwO4BhVb3YM7q6DwwpJmDNDkPhj5XzxuOw/\
5PNaN5CH71mKNjsB3tddsyRboTIOa8yept0b4p0ZbAXuDsIQ4wfkMQdRI8j7H8jkXjUxgOLtgMJ2jf\
qm2uTe8OAPXAal2p70v3qcj1GSN6F9ye5UdV2auLf5ae1LzXKwQNdK/\
CT3bPjrsHpO4GJ6jYNMEX6Ag6wsY8="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.871652266162717`16.34047133323319*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Grid[{{"Published to the cloud", 
              Hyperlink[
              "\[RightGuillemet]", 
               "https://www.wolframcloud.com/obj/cstover/DeployedResources/\
Paclet/TheRealCStover/Trigonometry"]}}, Spacings -> 0.25], 
           RawBoxes[
            TemplateBox[{
              RowBox[{"ResourceObject", "[", 
                ButtonBox[
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"TheRealCStover/Trigonometry\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                 ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                 Alignment -> Left, 
                 Appearance -> {
                  "Default" -> 
                   FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                 BaseStyle -> {Deployed -> False}, 
                 DefaultBaseStyle -> {Background -> None}, BaselinePosition -> 
                 Baseline, Method -> "Preemptive"], "]"}], 
              
              "OEM6eJy1kUFLAzEQhdm6iFAp6E/oD2juHl0PFQpKsuJBiqTpxE3NZkJm1rj/\
3g0qIj33NofvzXvzxlZ0IXW+\
xU8gW9G5xDLbmuqNI1YLCYRDMvCwO4BhVb3YM7q6DwwpJmDNDkPhj5XzxuOw/\
5PNaN5CH71mKNjsB3tddsyRboTIOa8yept0b4p0ZbAXuDsIQ4wfkMQdRI8j7H8jkXjUxgOLtgMJ2jf\
qm2uTe8OAPXAal2p70v3qcj1GSN6F9ye5UdV2auLf5ae1LzXKwQNdK/\
CT3bPjrsHpO4GJ6jYNMEX6Ag6wsY8="}, "ClickToCopyTemplate"]], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "67056962-572c-4bb8-bb5e-165bb3d7dc0d"]]]]]], Appearance -> 
             None, BoxID -> "67056962-572c-4bb8-bb5e-165bb3d7dc0d"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Cloud object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/cstover/DeployedResources/Paclet/\
TheRealCStover/Trigonometry\"", 
                    "https://www.wolframcloud.com/obj/cstover/\
DeployedResources/Paclet/TheRealCStover/Trigonometry"}, "HyperlinkURL"], 
                    "]"}], "OEM6eJy1kcFOwzAQRJUSIaRygU/\
oB9R3jqSHVqoEsoM4oAq57pq4bLyWd4PJ35MILnxAr6M3O9oZX/GNtuWRvoH9Fd/\
tokBOGcRKoDjJvuJrTTPga673gcUsG6Th9HQ8gxNTvfkFL1voE1qBGVv8Ye+\
rTiTxg1KllHUh9Nn2brauHfWKjmflWOgLstpAQhrhpIFpyA5YPVuHIKrtQIPFxvxybQ4fFKkHyePKH\
C5639xuxwQZQ/x80XtTHaYm/n1+2fi5Rj0g8L0BnOJeg3QNTetEYa7bPMAPk42kcQ=="}, 
                 "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Visit web page:", 
               Hyperlink[
                RawBoxes[
                 TagBox[
                  
                  RowBox[{
                   "\"https://www.wolfram\"", "\[Ellipsis]", 
                    "\"Stover/Trigonometry\""}], Short[#, 0.75]& ]], 
                
                "https://www.wolframcloud.com/obj/cstover/DeployedResources/\
Paclet/TheRealCStover/Trigonometry"]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"TheRealCStover/Trigonometry\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAp6E/\
oD2juHl0PFQpKsuJBiqTpxE3NZkJm1rj/3g0qIj33NofvzXvzxlZ0IXW+\
xU8gW9G5xDLbmuqNI1YLCYRDMvCwO4BhVb3YM7q6DwwpJmDNDkPhj5XzxuOw/\
5PNaN5CH71mKNjsB3tddsyRboTIOa8yept0b4p0ZbAXuDsIQ4wfkMQdRI8j7H8jkXjUxgOLtgMJ2jf\
qm2uTe8OAPXAal2p70v3qcj1GSN6F9ye5UdV2auLf5ae1LzXKwQNdK/\
CT3bPjrsHpO4GJ6jYNMEX6Ag6wsY8="}, "ClickToCopyTemplate"]]}}, Alignment -> 
             Left, ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], 
            FontColor -> GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.871652758400068`16.340471388448876*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "921b1cb2-2fd5-43c6-aefc-2813d24ce665"]]]]]], Appearance -> 
                   None, BoxID -> "921b1cb2-2fd5-43c6-aefc-2813d24ce665", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.871652758400068`16.340471388448876*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "921b1cb2-2fd5-43c6-aefc-2813d24ce665"]]]]]], Appearance -> 
                   None, BoxID -> "921b1cb2-2fd5-43c6-aefc-2813d24ce665", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"d914e9d4-2be0-4478-8342-578434d19777\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"d914e9d4-2be0-4478-8342-578434d19777\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.2.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"8406\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWE9vG0UUj+\
u1HTuuG9ogBCdrFYE4uEpSQxIuwdnEbaSmtTxuASGkjnef7RG7s6uZ2aTmO3DiyoFvBWf4AHwEeLP/\
7KxTKThBcPBe1tr37zdv3nu/J48Kcr1PL4/9tyBHJfneGVcgAgGKKuZz/\
DwqyHLf1wojQxrPmVSje7I8oGP8QioktG2QkmyQ0POomD4D6pDCt6Oi3DyZcuox+9x3Qhe0+\
b3MvEhAycZgGoAE9cYPgG9vy1KXuhJS6VYqBW8IDkE4sL1NSn30P0WdjQF4gYsfY4Sx46J80KMcCLh\
gK19cjWn0EUYapCQrTwVzrhqn74p2okVlWT0OlUrTUEtOFPv9qHvaE+wCIbzpCp+rU+\
70QfqhsIFUu6fHTHk0kGQzSQwavcRzgtDgNZQTcOkUHNmIQ3RDbuuMvys7xkCEkB2j1gkCoIJyTL7x\
wuczSfWYSiBq6sJoLXf26ukFdUOKmZHVTqh8D6/\
YzqTlc1AT3yG1ngDMrWIXc047LhtzD7hKEyrLFuhKSd8z1TOPjoGwHwAzVkkyllldiVsaMA+kWIue+\
pfZFzSsW6EQ6Pg1AgZyv4v5tWjwDNh4oiGUev4lxizIrc5Q+m6oYF5f3j+\
nY85GzI5q2PoLr3u9K6gXXWpRrkfp0eVbMn//+ScTHVZPmMCa0WdGef/pseW7vhAfRM+vR+\
JR9PxxJL6Ont+OrA+zE9eJEix4yc94EKpZFcfChoXQEViPOg7j47y4FsGK8OTusR5JzqkYMy7ny1i/\
rTVrLf/73VjKs2JP/\
RSyd9rbxXxv55ssMSUNMy1zXaEmMcwvmiapoZsTGNHQVeT9pOTPFHgdzv14lJDinz/+\
Mjc61s0etV1QZjY7tP5tkJXNV6/OTpZH9LHpHO624dBpt/aGsNNqt/cPWgdP2nutz/YP2k/azu7h/\
v5+Dm+a+c0kxQudkmqQCtZU6HE5d8S4KYznMJqpGYh7Ueeahq3pTzhFQEG+\
rB4kYDTCqBVvjGUxzs0BpVFJQG1d6zeOat3758Hm5pyRm3NbZOJf6kbgY2uCQ9LWcyqfoo0XIRKLwA\
b7fkHWwMGOLYsTgUk9QIqzW45cT7mib+OmzZv+y2VQHPjB/7cANvWduIxDz5csIbP4ggtWIdOKmew/\
YWDL9eXSDJwf3SsKXlHwEhRcWVHwHVPwLfBWzdfYQAhkecgVc/\
fx3uOdu8PUMEk49JjUsG6Ty7J50N75/O5wbZpxh1oConjLI4sY4A7v8Bx5GCfe8oA+Nb/\
BdmoGUTc0RdJcTSabQ8CR0QzCocvkBJy7y2bJRPnyiLeyETArltVmutpMV5vpEpvpbEvKL33X7FRz7\
kk96Te9rrr5tfLRlT/A4rUoXQhJ4TtUz/49e7jYzJ1yi9TnaZ6UY7JuEUNzLNm+\
CVO2SCUhOFKKaKqlMc/YhRiaI1qkcXW0xzs6GieTlXxyw/\
k4q4D4Tzg6dBcqYP3UYdcKHsY2XzE1SVY2GQP5G1By86w="}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    RowBox[{"\"TheReal\"", "\[Ellipsis]", "\"nometry\""}], 
                    FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztXXtsXFeZvzP2jO34kTSEsi19DJNQoJVjJ867qmac8SPe2onrO\
2lBFZDrmTP2be7cO9xzx48WqmnZrvYfQGIFK6Biwx+tykMI8RKwS52KUolQAbuo7DZ/rNJ0t+\
2WFRQhoMAy2fM+594Zz0y8iR1L98rS+Lvf+R7nd75zznfP/\
TwuRGDnjLF41FkCsBCD103YHnBLLvAMz3RsdLsQgfEZBzcotMP2SRN6hSiMZ405dEfvmwHQKbs5cGL\
2AZDz9G69XCwa7vIxYOT1yP2FNrhtZNk2imZuysmXLYC1RIWWNh14sC+\
7XAIQeKecErB37YKxMcOCgHN3cC4ozoK8jrwCu3bpsRmkfxm16c6CYslCN6mjVHEb3Dpt2EAHFnLJc\
f0222eQG9xIDHaMu2beL8w/O7ASzIrDrqNlz+\
NobGE9onpvHBudds0F5MKpMdexvVE7zzHRu8ZGj5pe0ShBfRsDBgmdQP0ELnYeuzICLGMZ5GEfNTFW\
tnMY+NXQac+\
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\
4crnWhM6VoM5UAw6zJjfKuo+\
w8uEu0ydvTlsOegK253zJN4VUjh6Ct0CuV1IoX4uRjVaP08VN7x4xDcuZo7uv72FFR/\
kOegCZtgzTbvEx5kfKbt/KY1amW97jCb0YOsHqm8EP7og3Y+TNMlT+WIQ+qFPf60e6eKoiLacMF+\
0qsAasNqqThWp0jXOtTTnuuJ5cv0i5byPXqyn3g+T6dTj5wsl3BSafGms3keufU+4/fh5f/5Fy3/\
wDvl7dwNnY4lxY6/\
TcnnGKJezH6FIJ5aRQeaZpcUeuP63Vf1RRLzWQnhFbtzS0tUCigDS8o2FDl6U0UwZ6KFwq9ASc8gft\
G3yaalqAo2m+\
o1SfLFlVHvtlqmb6y8nPm6xiV7ZYWVXrarLSs6DdOr0J2l1pbndltf6uNO9vrSx3tTnOze0GF7g6vV\
m1Rap5b5pHwOq9aR4Bq/emeQTU7c2WEyiTRY/i6lSKwe5h2ywa7L+\
oyDP0ZrOLbwSZSKZHeQGwXR4zjFoAP4zDmlOFrSOgYJQtb6Ts0kN0KV57iE7+\
tLLdvwdH4Y3jgDztmrkssgULjlsU/81mA5Pv4HDXDIgIkZqwfmPVyaJoa54idJLOUUf7lH3b/\
7x3ZROFNdj8f6YL/j/7nDbcy1vjm8b2eqQjYkfPoAQAmZ828nhfl9ZaPjuTTsiTvMC5/\
CpvnURK1E1SImT+\
YuXJpnlRfMIzLPVP1Vd5KlHnwBXKg2Dg31GhprsbjmWZpHq8CYrIVs4V9F2tnOtcTsrT6ulDnZEMDv\
I2tnqu3qLBUW9L57nxe8qgrLxh68g6juWZJf1d48DDx+QJy3dKhA/dvXkTJvj55KqvIlrDqvFZ+\
oRteig+zQfJhEYLTINstIWxRuj1MlTY/\
nHlhxWNQtmy1jSlV10d6mTu9EGT3idrVO199SEhqsxVtMvKRrVfcxCBcT1nWCBfO6frvTCtcwi4Hu9\
Pw+8QCb9DZJN/h4iSfwe+nqNO+qGo13vYjMNfLHJZK40eeT9O2/zb6nC8X2/\
HxSP62xu8aUJt8PuS1nbLfr2H28Ad0+P07Va/3nEv3UX0GHlv0Y/SD/kq/\
Gq93e3Xt8v3apMOLeZBOLThV2YH+bu5xcXF2rdyzuwD8kUcWfUHjJI5gJyXQUf/\
MaUxa9UEXedo3qzL2E5l7jO9ebbkQ/pNMv8HIYglWA=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.871652758400068`16.340471388448876*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Grid[{{
              Annotation[
               Grid[{{
                  Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                   "Heavy"], "", "Your paclet resource is being published"}}, 
                Alignment -> {Left, Center}, 
                Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
               DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
               "Your paclet resource is being published"]], ""}}, Spacings -> 
            0.25], "", "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             With[{
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "921b1cb2-2fd5-43c6-aefc-2813d24ce665"]]]]]], Appearance -> 
             None, BoxID -> "921b1cb2-2fd5-43c6-aefc-2813d24ce665"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"d914e9d4-2be0-4478-8342-578434d19777\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"d914e9d4-2be0-4478-8342-578434d19777\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.2.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"8406\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWE9vG0UUj+\
u1HTuuG9ogBCdrFYE4uEpSQxIuwdnEbaSmtTxuASGkjnef7RG7s6uZ2aTmO3DiyoFvBWf4AHwEeLP/\
7KxTKThBcPBe1tr37zdv3nu/J48Kcr1PL4/9tyBHJfneGVcgAgGKKuZz/\
DwqyHLf1wojQxrPmVSje7I8oGP8QioktG2QkmyQ0POomD4D6pDCt6Oi3DyZcuox+9x3Qhe0+\
b3MvEhAycZgGoAE9cYPgG9vy1KXuhJS6VYqBW8IDkE4sL1NSn30P0WdjQF4gYsfY4Sx46J80KMcCLh\
gK19cjWn0EUYapCQrTwVzrhqn74p2okVlWT0OlUrTUEtOFPv9qHvaE+wCIbzpCp+rU+\
70QfqhsIFUu6fHTHk0kGQzSQwavcRzgtDgNZQTcOkUHNmIQ3RDbuuMvys7xkCEkB2j1gkCoIJyTL7x\
wuczSfWYSiBq6sJoLXf26ukFdUOKmZHVTqh8D6/\
YzqTlc1AT3yG1ngDMrWIXc047LhtzD7hKEyrLFuhKSd8z1TOPjoGwHwAzVkkyllldiVsaMA+kWIue+\
pfZFzSsW6EQ6Pg1AgZyv4v5tWjwDNh4oiGUev4lxizIrc5Q+m6oYF5f3j+\
nY85GzI5q2PoLr3u9K6gXXWpRrkfp0eVbMn//+ScTHVZPmMCa0WdGef/pseW7vhAfRM+vR+\
JR9PxxJL6Ont+OrA+zE9eJEix4yc94EKpZFcfChoXQEViPOg7j47y4FsGK8OTusR5JzqkYMy7ny1i/\
rTVrLf/73VjKs2JP/\
RSyd9rbxXxv55ssMSUNMy1zXaEmMcwvmiapoZsTGNHQVeT9pOTPFHgdzv14lJDinz/+\
Mjc61s0etV1QZjY7tP5tkJXNV6/OTpZH9LHpHO624dBpt/aGsNNqt/cPWgdP2nutz/YP2k/azu7h/\
v5+Dm+a+c0kxQudkmqQCtZU6HE5d8S4KYznMJqpGYh7Ueeahq3pTzhFQEG+\
rB4kYDTCqBVvjGUxzs0BpVFJQG1d6zeOat3758Hm5pyRm3NbZOJf6kbgY2uCQ9LWcyqfoo0XIRKLwA\
b7fkHWwMGOLYsTgUk9QIqzW45cT7mib+OmzZv+y2VQHPjB/7cANvWduIxDz5csIbP4ggtWIdOKmew/\
YWDL9eXSDJwf3SsKXlHwEhRcWVHwHVPwLfBWzdfYQAhkecgVc/\
fx3uOdu8PUMEk49JjUsG6Ty7J50N75/O5wbZpxh1oConjLI4sY4A7v8Bx5GCfe8oA+Nb/\
BdmoGUTc0RdJcTSabQ8CR0QzCocvkBJy7y2bJRPnyiLeyETArltVmutpMV5vpEpvpbEvKL33X7FRz7\
kk96Te9rrr5tfLRlT/A4rUoXQhJ4TtUz/49e7jYzJ1yi9TnaZ6UY7JuEUNzLNm+\
CVO2SCUhOFKKaKqlMc/YhRiaI1qkcXW0xzs6GieTlXxyw/\
k4q4D4Tzg6dBcqYP3UYdcKHsY2XzE1SVY2GQP5G1By86w="}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    RowBox[{"\"TheReal\"", "\[Ellipsis]", "\"nometry\""}], 
                    FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztXXtsXFeZvzP2jO34kTSEsi19DJNQoJVjJ867qmac8SPe2onrO2l\
BFZDrmTP2be7cO9xzx48WqmnZrvYfQGIFK6Biwx+tykMI8RKwS52KUolQAbuo7DZ/rNJ0t+\
2WFRQhoMAy2fM+594Zz0y8iR1L98rS+Lvf+R7nd75zznfP/\
TwuRGDnjLF41FkCsBCD103YHnBLLvAMz3RsdLsQgfEZBzcotMP2SRN6hSiMZ405dEfvmwHQKbs5cGL\
2AZDz9G69XCwa7vIxYOT1yP2FNrhtZNk2imZuysmXLYC1RIWWNh14sC+\
7XAIQeKecErB37YKxMcOCgHN3cC4ozoK8jrwCu3bpsRmkfxm16c6CYslCN6mjVHEb3Dpt2EAHFnLJc\
f0222eQG9xIDHaMu2beL8w/O7ASzIrDrqNlz+\
NobGE9onpvHBudds0F5MKpMdexvVE7zzHRu8ZGj5pe0ShBfRsDBgmdQP0ELnYeuzICLGMZ5GEfNTFW\
tnMY+NXQac+\
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\
4crnWhM6VoM5UAw6zJjfKuo+\
w8uEu0ydvTlsOegK253zJN4VUjh6Ct0CuV1IoX4uRjVaP08VN7x4xDcuZo7uv72FFR/\
kOegCZtgzTbvEx5kfKbt/KY1amW97jCb0YOsHqm8EP7og3Y+TNMlT+WIQ+qFPf60e6eKoiLacMF+\
0qsAasNqqThWp0jXOtTTnuuJ5cv0i5byPXqyn3g+T6dTj5wsl3BSafGms3keufU+4/fh5f/5Fy3/\
wDvl7dwNnY4lxY6/\
TcnnGKJezH6FIJ5aRQeaZpcUeuP63Vf1RRLzWQnhFbtzS0tUCigDS8o2FDl6U0UwZ6KFwq9ASc8gft\
G3yaalqAo2m+\
o1SfLFlVHvtlqmb6y8nPm6xiV7ZYWVXrarLSs6DdOr0J2l1pbndltf6uNO9vrSx3tTnOze0GF7g6vV\
m1Rap5b5pHwOq9aR4Bq/emeQTU7c2WEyiTRY/i6lSKwe5h2ywa7L+\
oyDP0ZrOLbwSZSKZHeQGwXR4zjFoAP4zDmlOFrSOgYJQtb6Ts0kN0KV57iE7+\
tLLdvwdH4Y3jgDztmrkssgULjlsU/81mA5Pv4HDXDIgIkZqwfmPVyaJoa54idJLOUUf7lH3b/\
7x3ZROFNdj8f6YL/j/7nDbcy1vjm8b2eqQjYkfPoAQAmZ828nhfl9ZaPjuTTsiTvMC5/\
CpvnURK1E1SImT+\
YuXJpnlRfMIzLPVP1Vd5KlHnwBXKg2Dg31GhprsbjmWZpHq8CYrIVs4V9F2tnOtcTsrT6ulDnZEMDv\
I2tnqu3qLBUW9L57nxe8qgrLxh68g6juWZJf1d48DDx+QJy3dKhA/dvXkTJvj55KqvIlrDqvFZ+\
oRteig+zQfJhEYLTINstIWxRuj1MlTY/\
nHlhxWNQtmy1jSlV10d6mTu9EGT3idrVO199SEhqsxVtMvKRrVfcxCBcT1nWCBfO6frvTCtcwi4Hu9\
Pw+8QCb9DZJN/h4iSfwe+nqNO+qGo13vYjMNfLHJZK40eeT9O2/zb6nC8X2/\
HxSP62xu8aUJt8PuS1nbLfr2H28Ad0+P07Va/3nEv3UX0GHlv0Y/SD/kq/\
Gq93e3Xt8v3apMOLeZBOLThV2YH+bu5xcXF2rdyzuwD8kUcWfUHjJI5gJyXQUf/\
MaUxa9UEXedo3qzL2E5l7jO9ebbkQ/pNMv8HIYglWA=="}, "ClickToCopyTemplate"]]}}, 
             Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.864784134107203`16.339700230756037*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "PacletResource", 
    "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> False, 
  "UpdatedTimestamp" -> 3.865820761561068`16.339816703293895*^9, 
  "TemplateVersion" -> "1.5.62", "StatusMessage" -> "", "AutoUpdate" -> True, 
  "PacletBuildData" -> {"FileHashes" -> ByteArray[CompressedData["
1:eJwB5QUa+iFib1JiAQAAANgFAAA4Qzp4nKWYe1ATRxjAfTBSFClaURsRIxRR
4AIqCIiIERAYg0QWRAWhx2WTHCR35C6pIOMDFK3FOpWpVnEsdGSqTkFKlWrB
StGxPqhOAUepKCK+8IGlKj6o1YbS8QK9XO7SvzKzl/397rt9fN+uNBgB48JJ
zKCFhB7V4yThIwkHqUBPUlA6BAHDAGmgMCgbWXG0qTR5u9rYEo9SKqiXnb1m
335xze10BEzq3z+CUGlwWs3OQS/kJyp/rPFlODtTpr1q2nEpBwHe7JxIA66A
tE88hatIgtRCPZUtIdJMobKhR6tntJ8dwUDVWqzy66dabwS4skOjCQXM8kn1
lWBK2gRF2ywiCchwvtSoFpRkHI9BwBQuDg1VvY/o1OkcrIicja/XTIFRfFkz
OVg7kvHwEK/ayQiYyoclUUGCgzYqpi23NOtuEAIk7LQ4qIQUJDAoR1XGoWAd
2Z/Kg+om3niylsGK/A7IXwYTgQjw54UF2do0UkP7hKlJSjFgiNufF0cvKd0b
ydDzmuPqnO5e/wABIcLopBr9CFIYSeMEHGA5Mt/7yO1RmVGMZf4tyrlheYYn
AoKtsbA43ukoHdEYfsGbcdRefvEwyaYjULjDXBxo14E/us4/RxmHIh88evzE
UYKAIOEOFkPEjUut922fmYw2sdFzq8vZ1mEImC3IEJFlDAFiKKEfoJBOWHlG
1tNg8qF6/rw/MepUwmoEBApUsApcfDfMMmQHmSyESeV7Cje9ThojdE5FoZjZ
sYje0vbptZrTEYwl5MWmhIaN5Dih4/2vhcUReWjVUl10SijjwPMmv/ns6q7F
wh3m4pi73lAUu3r6WMaRGpYq2rDn2+EImCPIEU30RgHZlvmKKJv8T5L2ejCS
wVhLWfO6BbEICLdKwrHad6s225xufObMyArcrnxvWPvKuBLn/w8Zi2odJdIe
3H5nIaMKE3U4yG13j7VaZS6qAl3BI5GDwZ5RuWdS7tXKnWIEzLNaxSLaUPLg
mDxnUzAjcuy5+cN59xJXBEitEZndCeq13m1/eZyTMiZxEmxx7ShTIiDUOhOr
R0TeqLo4SO5osjUXy3/WtXZHWjn7uPaF+jxKmlhZl8HIVjUf9Xd9UKS0ckqY
3x48XX4r75S4U4yqe/29p8m1sz2sVpmLynEWXU0NtwthVLZl6vrWHqdYK2ff
EnOp2rO51bcx0iTFVWGLD/2a9XARAuZaKWLRqCsOunXRO4Ywmptuv7dUZOr0
QjOpuUBWX268V5wCDYwh+b1l557tOx6PgAChBhb+4DGVV2plJxGTfbs8wWfM
sOsrEODJzgcQpTB1Xwnp31ckQ47y8fHU5MJB+3aNFsLjKrpr2rZ72M85bPzC
03jyaJwDd26u80m9H2r8A8IHp8ShRkFLVmo4kMcrNLNPdH4hQ4AfHyTe+xsD
9agC1aPc5Fv4V4m13pvFZkvx/uS3h4UZHMyFheu6G3tq03kyV1K4Hko0JJbB
wcQTYl2XticYE5qHGWYm1Gh4nrL8jsXVF9UnDuUFm2EB1l2ju7mlqiWQF2ym
BdjO5SdOxYOq0bxgfhZg30jDI3Ptuux5wWZZgOnqbvuHayYO5gULsAB7V6mQ
/XJ1iRcCvCzCeJ11A08/LugIOKwSBOQ68DbtuhR/T6FYJggYwAHMdKG2TGiS
jRcEDOIAtpzZvyY318FTEDCNA5idPr7Y6ZA4ThBQyQH8fPnQcqnLrdHmN8L/
Ai3cHGwOLcqL3e/kJugd1RzA/HHbOjsnTDWm9Sh2YLxBT1I4qum7EBIvMBBY
73NajBIK8SJUixMqcRhpTOnEP80DkuG2kLatJaHzTMqTFbYNrwpf7jfWfL58
hG99A8A+GenNGRdfmpRYOnrS+ylVOhEC7FjvS3LBdx9GOn8cxvQ4vKqOynlT
aRzwsQshRUBN/zuvfnlD9sbBfn11m1cs051pGSlHMQ3URxNKckCvtZi72O7F
nQCmF9Myqq9XDErgSkjrufNUzNPplWVpRMTfmRmMmyDI3B4=
      "]], "LastBuiltArchive" -> 
    "/Users/stover/Desktop/Other/WolframFiles/Paclets/Trigonometry/build/\
TheRealCStover__Trigonometry-1.2.0.paclet"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {
     "0" -> Closed, "1" -> Closed, "3" -> Closed, "4" -> Closed, "5" -> 
      Closed, "6" -> Closed, "7" -> Closed}, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed, "6" -> Closed, "7" -> Closed, "8" -> Closed}}, 
  "Paclet" -> "None"},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.015385], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.297, 
                    56.875}, {32.5, 64.492}, {45.703, 56.875}, {32.5, 
                    49.258}, {19.297, 56.875}}, {{21.328, 56.875}, {32.5, 
                    63.324}, {43.672, 56.875}, {32.5, 50.426}, {21.328, 
                    56.875}}, {{33.008, 33.262}, {33.008, 48.496}, {46.211, 
                    56.113}, {46.211, 40.879}, {33.008, 33.262}}}]}, {
                    FaceForm[
                    RGBColor[0.70196, 0.60392, 0.78824, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992, 33.262}, {18.789, 40.879}, {18.789, 
                    56.113}, {31.992, 48.496}, {31.992, 33.262}}}]}, {
                    FaceForm[
                    RGBColor[0.53725, 0.40392, 0.67451, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.773, 
                    8.8868}, {4.5703, 16.504}, {4.5703, 31.738}, {17.773, 
                    24.121}, {17.773, 8.8868}}, {{16.758, 10.664}, {5.5859, 
                    17.113}, {5.5859, 29.961}, {16.758, 23.512}, {16.758, 
                    10.664}}, {{31.484, 32.5}, {18.281, 40.117}, {5.0781, 
                    32.5}, {18.281, 24.883}, {31.484, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.63529, 0.73333, 0.83137, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992, 31.738}, {18.789, 24.121}, {18.789, 
                    8.8868}, {31.992, 16.504}, {31.992, 31.738}}}]}, {
                    FaceForm[
                    RGBColor[0.2902, 0.40784, 0.57647, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{47.227, 
                    8.8868}, {47.227, 24.121}, {60.43, 31.738}, {60.43, 
                    16.504}, {47.227, 8.8868}}, {{48.242, 10.664}, {48.242, 
                    23.512}, {59.414, 29.961}, {59.414, 17.113}, {48.242, 
                    10.664}}, {{33.516, 32.5}, {46.719, 40.117}, {59.922, 
                    32.5}, {46.719, 24.883}, {33.516, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37255, 1.]]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.008, 31.738}, {33.008, 16.504}, {46.211, 
                    8.8868}, {46.211, 24.121}, {33.008, 31.738}}}]}, {
                    FaceForm[
                    RGBColor[0.39608, 0.60392, 0.30196, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGYC4qvPs7S/hYs5LHLd9vlvi6MDjL/imLd550d3
B9O4XZ48hwwcQBSTtjecH2G55UTZPhcHdP1zFinv/OMuBNG/0AHOL86Y+LbG
3sPh5rnvwY+PGkL08/nA+b3T84SaC1ww9F9fXGDLZe4H50+WYAnjm+sOVw/j
w8yDqYfZh64f7M4tvnD3Pr2gdPunnAfcPzA+zL8w9bDwQNdf+VLNkMPH2IEB
BBwUoLSDwzTn7pzn1foOLkDq9003DHmZy8LTKhwe2KPrbxcDhYgphnpwOKnq
OuwpAfr4miuGfKiB1krhC7/s0fUDAHimvy8=
                    "]]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.1094, 32.5}, {7.1094, 31.098}, {5.9726, 
                    29.961}, {4.5703, 29.961}, {3.168, 29.961}, {2.0312, 
                    31.098}, {2.0312, 32.5}, {2.0312, 33.902}, {3.168, 
                    35.039}, {4.5703, 35.039}, {5.9726, 35.039}, {7.1094, 
                    33.902}, {7.1094, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 56.367}, {20.82, 54.965}, {19.684, 
                    53.828}, {18.281, 53.828}, {16.879, 53.828}, {15.742, 
                    54.965}, {15.742, 56.367}, {15.742, 57.769}, {16.879, 
                    58.906}, {18.281, 58.906}, {19.684, 58.906}, {20.82, 
                    57.769}, {20.82, 56.367}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 40.625}, {20.82, 39.223}, {19.684, 
                    38.086}, {18.281, 38.086}, {16.879, 38.086}, {15.742, 
                    39.223}, {15.742, 40.625}, {15.742, 42.027}, {16.879, 
                    43.164}, {18.281, 43.164}, {19.684, 43.164}, {20.82, 
                    42.027}, {20.82, 40.625}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 24.375}, {20.82, 22.973}, {19.684, 
                    21.836}, {18.281, 21.836}, {16.879, 21.836}, {15.742, 
                    22.973}, {15.742, 24.375}, {15.742, 25.777}, {16.879, 
                    26.914}, {18.281, 26.914}, {19.684, 26.914}, {20.82, 
                    25.777}, {20.82, 24.375}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 8.6329}, {20.82, 7.2306}, {19.684, 
                    6.0938}, {18.281, 6.0938}, {16.879, 6.0938}, {15.742, 
                    7.2306}, {15.742, 8.6329}, {15.742, 10.035}, {16.879, 
                    11.172}, {18.281, 11.172}, {19.684, 11.172}, {20.82, 
                    10.035}, {20.82, 8.6329}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 48.75}, {35.039, 47.348}, {33.902, 
                    46.211}, {32.5, 46.211}, {31.098, 46.211}, {29.961, 
                    47.348}, {29.961, 48.75}, {29.961, 50.152}, {31.098, 
                    51.289}, {32.5, 51.289}, {33.902, 51.289}, {35.039, 
                    50.152}, {35.039, 48.75}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 32.5}, {35.039, 31.098}, {33.902, 
                    29.961}, {32.5, 29.961}, {31.098, 29.961}, {29.961, 
                    31.098}, {29.961, 32.5}, {29.961, 33.902}, {31.098, 
                    35.039}, {32.5, 35.039}, {33.902, 35.039}, {35.039, 
                    33.902}, {35.039, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 16.25}, {35.039, 14.848}, {33.902, 
                    13.711}, {32.5, 13.711}, {31.098, 13.711}, {29.961, 
                    14.848}, {29.961, 16.25}, {29.961, 17.652}, {31.098, 
                    18.789}, {32.5, 18.789}, {33.902, 18.789}, {35.039, 
                    17.652}, {35.039, 16.25}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 56.367}, {49.258, 54.965}, {48.121, 
                    53.828}, {46.719, 53.828}, {45.316, 53.828}, {44.18, 
                    54.965}, {44.18, 56.367}, {44.18, 57.769}, {45.316, 
                    58.906}, {46.719, 58.906}, {48.121, 58.906}, {49.258, 
                    57.769}, {49.258, 56.367}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 40.625}, {49.258, 39.223}, {48.121, 
                    38.086}, {46.719, 38.086}, {45.316, 38.086}, {44.18, 
                    39.223}, {44.18, 40.625}, {44.18, 42.027}, {45.316, 
                    43.164}, {46.719, 43.164}, {48.121, 43.164}, {49.258, 
                    42.027}, {49.258, 40.625}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 24.375}, {49.258, 22.973}, {48.121, 
                    21.836}, {46.719, 21.836}, {45.316, 21.836}, {44.18, 
                    22.973}, {44.18, 24.375}, {44.18, 25.777}, {45.316, 
                    26.914}, {46.719, 26.914}, {48.121, 26.914}, {49.258, 
                    25.777}, {49.258, 24.375}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 8.6329}, {49.258, 7.2306}, {48.121, 
                    6.0938}, {46.719, 6.0938}, {45.316, 6.0938}, {44.18, 
                    7.2306}, {44.18, 8.6329}, {44.18, 10.035}, {45.316, 
                    11.172}, {46.719, 11.172}, {48.121, 11.172}, {49.258, 
                    10.035}, {49.258, 8.6329}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.969, 32.5}, {62.969, 31.098}, {61.832, 
                    29.961}, {60.43, 29.961}, {59.027, 29.961}, {57.891, 
                    31.098}, {57.891, 32.5}, {57.891, 33.902}, {59.027, 
                    35.039}, {60.43, 35.039}, {61.832, 35.039}, {62.969, 
                    33.902}, {62.969, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.015385], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.297, 56.875}, {
                  32.5, 64.492}, {45.703, 56.875}, {32.5, 49.258}, {19.297, 
                  56.875}}, {{21.328, 56.875}, {32.5, 63.324}, {43.672, 
                  56.875}, {32.5, 50.426}, {21.328, 56.875}}, {{33.008, 
                  33.262}, {33.008, 48.496}, {46.211, 56.113}, {46.211, 
                  40.879}, {33.008, 33.262}}}]}, {
                 FaceForm[
                  RGBColor[0.70196, 0.60392, 0.78824, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{31.992, 33.262}, {18.789, 40.879}, {18.789, 
                  56.113}, {31.992, 48.496}, {31.992, 33.262}}}]}, {
                 FaceForm[
                  RGBColor[0.53725, 0.40392, 0.67451, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.773, 8.8868}, {
                  4.5703, 16.504}, {4.5703, 31.738}, {17.773, 24.121}, {
                  17.773, 8.8868}}, {{16.758, 10.664}, {5.5859, 17.113}, {
                  5.5859, 29.961}, {16.758, 23.512}, {16.758, 10.664}}, {{
                  31.484, 32.5}, {18.281, 40.117}, {5.0781, 32.5}, {18.281, 
                  24.883}, {31.484, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.63529, 0.73333, 0.83137, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{31.992, 31.738}, {18.789, 24.121}, {18.789, 
                  8.8868}, {31.992, 16.504}, {31.992, 31.738}}}]}, {
                 FaceForm[
                  RGBColor[0.2902, 0.40784, 0.57647, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{47.227, 8.8868}, {
                  47.227, 24.121}, {60.43, 31.738}, {60.43, 16.504}, {47.227, 
                  8.8868}}, {{48.242, 10.664}, {48.242, 23.512}, {59.414, 
                  29.961}, {59.414, 17.113}, {48.242, 10.664}}, {{33.516, 
                  32.5}, {46.719, 40.117}, {59.922, 32.5}, {46.719, 24.883}, {
                  33.516, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.6, 0.6, 0.37255, 1.]]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{33.008, 31.738}, {33.008, 16.504}, {46.211, 
                  8.8868}, {46.211, 24.121}, {33.008, 31.738}}}]}, {
                 FaceForm[
                  RGBColor[0.39608, 0.60392, 0.30196, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGYC4qvPs7S/hYs5LHLd9vlvi6MDjL/imLd550d3
B9O4XZ48hwwcQBSTtjecH2G55UTZPhcHdP1zFinv/OMuBNG/0AHOL86Y+LbG
3sPh5rnvwY+PGkL08/nA+b3T84SaC1ww9F9fXGDLZe4H50+WYAnjm+sOVw/j
w8yDqYfZh64f7M4tvnD3Pr2gdPunnAfcPzA+zL8w9bDwQNdf+VLNkMPH2IEB
BBwUoLSDwzTn7pzn1foOLkDq9003DHmZy8LTKhwe2KPrbxcDhYgphnpwOKnq
OuwpAfr4miuGfKiB1krhC7/s0fUDAHimvy8=
                  "]]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{7.1094, 32.5}, {7.1094, 31.098}, {5.9726, 
                  29.961}, {4.5703, 29.961}, {3.168, 29.961}, {2.0312, 
                  31.098}, {2.0312, 32.5}, {2.0312, 33.902}, {3.168, 
                  35.039}, {4.5703, 35.039}, {5.9726, 35.039}, {7.1094, 
                  33.902}, {7.1094, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 56.367}, {20.82, 54.965}, {19.684, 
                  53.828}, {18.281, 53.828}, {16.879, 53.828}, {15.742, 
                  54.965}, {15.742, 56.367}, {15.742, 57.769}, {16.879, 
                  58.906}, {18.281, 58.906}, {19.684, 58.906}, {20.82, 
                  57.769}, {20.82, 56.367}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 40.625}, {20.82, 39.223}, {19.684, 
                  38.086}, {18.281, 38.086}, {16.879, 38.086}, {15.742, 
                  39.223}, {15.742, 40.625}, {15.742, 42.027}, {16.879, 
                  43.164}, {18.281, 43.164}, {19.684, 43.164}, {20.82, 
                  42.027}, {20.82, 40.625}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 24.375}, {20.82, 22.973}, {19.684, 
                  21.836}, {18.281, 21.836}, {16.879, 21.836}, {15.742, 
                  22.973}, {15.742, 24.375}, {15.742, 25.777}, {16.879, 
                  26.914}, {18.281, 26.914}, {19.684, 26.914}, {20.82, 
                  25.777}, {20.82, 24.375}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 8.6329}, {20.82, 7.2306}, {19.684, 
                  6.0938}, {18.281, 6.0938}, {16.879, 6.0938}, {15.742, 
                  7.2306}, {15.742, 8.6329}, {15.742, 10.035}, {16.879, 
                  11.172}, {18.281, 11.172}, {19.684, 11.172}, {20.82, 
                  10.035}, {20.82, 8.6329}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 48.75}, {35.039, 47.348}, {33.902, 
                  46.211}, {32.5, 46.211}, {31.098, 46.211}, {29.961, 
                  47.348}, {29.961, 48.75}, {29.961, 50.152}, {31.098, 
                  51.289}, {32.5, 51.289}, {33.902, 51.289}, {35.039, 
                  50.152}, {35.039, 48.75}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 32.5}, {35.039, 31.098}, {33.902, 
                  29.961}, {32.5, 29.961}, {31.098, 29.961}, {29.961, 
                  31.098}, {29.961, 32.5}, {29.961, 33.902}, {31.098, 
                  35.039}, {32.5, 35.039}, {33.902, 35.039}, {35.039, 
                  33.902}, {35.039, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 16.25}, {35.039, 14.848}, {33.902, 
                  13.711}, {32.5, 13.711}, {31.098, 13.711}, {29.961, 
                  14.848}, {29.961, 16.25}, {29.961, 17.652}, {31.098, 
                  18.789}, {32.5, 18.789}, {33.902, 18.789}, {35.039, 
                  17.652}, {35.039, 16.25}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 56.367}, {49.258, 54.965}, {48.121, 
                  53.828}, {46.719, 53.828}, {45.316, 53.828}, {44.18, 
                  54.965}, {44.18, 56.367}, {44.18, 57.769}, {45.316, 
                  58.906}, {46.719, 58.906}, {48.121, 58.906}, {49.258, 
                  57.769}, {49.258, 56.367}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 40.625}, {49.258, 39.223}, {48.121, 
                  38.086}, {46.719, 38.086}, {45.316, 38.086}, {44.18, 
                  39.223}, {44.18, 40.625}, {44.18, 42.027}, {45.316, 
                  43.164}, {46.719, 43.164}, {48.121, 43.164}, {49.258, 
                  42.027}, {49.258, 40.625}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 24.375}, {49.258, 22.973}, {48.121, 
                  21.836}, {46.719, 21.836}, {45.316, 21.836}, {44.18, 
                  22.973}, {44.18, 24.375}, {44.18, 25.777}, {45.316, 
                  26.914}, {46.719, 26.914}, {48.121, 26.914}, {49.258, 
                  25.777}, {49.258, 24.375}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 8.6329}, {49.258, 7.2306}, {48.121, 
                  6.0938}, {46.719, 6.0938}, {45.316, 6.0938}, {44.18, 
                  7.2306}, {44.18, 8.6329}, {44.18, 10.035}, {45.316, 
                  11.172}, {46.719, 11.172}, {48.121, 11.172}, {49.258, 
                  10.035}, {49.258, 8.6329}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{62.969, 32.5}, {62.969, 31.098}, {61.832, 
                  29.961}, {60.43, 29.961}, {59.027, 29.961}, {57.891, 
                  31.098}, {57.891, 32.5}, {57.891, 33.902}, {59.027, 
                  35.039}, {60.43, 35.039}, {61.832, 35.039}, {62.969, 
                  33.902}, {62.969, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False]}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Mac OS X x86 (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"a3ec5c9c-8ee4-44af-8cb2-4ccc83e15b20"
]

